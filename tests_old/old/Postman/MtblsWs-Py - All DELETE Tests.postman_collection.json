{
	"info": {
		"name": "MtblsWs-Py - All DELETE Tests",
		"_postman_id": "98061ef3-0689-4844-b090-2ad1ff9fa4b2",
		"description": "Only UPDATE methods, those which actually modify data in the server. Should be run with caution, as it may lead to data loss (when run in PROD) or inconsistencies.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "DELETE Study Contact",
			"description": null,
			"item": [
				{
					"name": "Pub",
					"description": "",
					"item": [
						{
							"name": "0 - New Study Contact - Pub - Auth - NewData -> 200",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e69d3af1-f923-4fd3-bf12-017043e90fac",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Body has contact\"] = responseBody.has('\"contact\":');",
											"var jsonData = JSON.parse(responseBody);",
											"if (jsonData.contact) {",
											"    var item = jsonData.contact;",
											"    tests[\"JSON response has key 'firstName'\"] = item.hasOwnProperty('firstName');",
											"    tests[\"JSON response key 'firstName' not Null\"] = item.firstName;",
											"    tests[\"JSON response has key 'lastName'\"] = item.hasOwnProperty('lastName');",
											"    tests[\"JSON response key 'lastName' not Null\"] = item.lastName;",
											"    tests[\"JSON response has key 'email'\"] = item.hasOwnProperty('email');",
											"    tests[\"JSON response key 'email' not Null\"] = item.email;",
											"    tests[\"JSON response has key 'address'\"] = item.hasOwnProperty('address');",
											"    // tests[\"JSON response key 'address' not Null\"] = item.address;",
											"    if (item.roles.length > 0) {",
											"        var role = item.roles[0];",
											"        tests[\"JSON response has key 'role annotationValue'\"] = role.hasOwnProperty('annotationValue');",
											"        tests[\"JSON response key 'role annotationValue' not Null\"] = role.annotationValue !== null;",
											"    }",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"contact\": {\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\",\n    \"email\": \"doej@a.mail.com\",\n    \"affiliation\": \"EMBL-EBI\",\n    \"comments\": [],\n    \"address\": \"Wellcome Genome Campus, Hinxton, Cambridgeshire, CB10 1SD, UK\",\n    \"fax\": \"012345678902\",\n    \"midInitials\": \"A\",\n    \"phone\": \"012345678901\",\n    \"roles\": [\n      {\n        \"annotationValue\": \"investigator\",\n        \"termSource\": null,\n        \"termAccession\": \"http://www.ebi.ac.uk/efo/EFO_0001739\",\n        \"comments\": []\n      },\n      {\n        \"annotationValue\": \"Bioinformatician\",\n        \"termSource\": null,\n        \"termAccession\": \"\",\n        \"comments\": []\n      }\n    ]\n  }\n}\n"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/contacts",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PubStudyId}}",
										"contacts"
									]
								},
								"description": null
							},
							"response": [
								{
									"id": "acb85bb0-e62c-4aee-847b-ad1a1a9aac9b",
									"name": "New Study Contact - Pub - Auth - NewData -> 200",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"disabled": false
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": false
											},
											{
												"key": "user_token",
												"value": "{{curator}}",
												"disabled": false
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"contact\": {\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\",\n    \"email\": \"doej@a.mail.com\",\n    \"affiliation\": \"EMBL-EBI\",\n    \"comments\": [],\n    \"address\": \"Wellcome Genome Campus, Hinxton, Cambridgeshire, CB10 1SD, UK\",\n    \"fax\": \"012345678902\",\n    \"midInitials\": \"A\",\n    \"phone\": \"012345678901\",\n    \"roles\": [\n      {\n        \"annotationValue\": \"investigator\",\n        \"termSource\": null,\n        \"termAccession\": \"http://www.ebi.ac.uk/efo/EFO_0001739\",\n        \"comments\": []\n      },\n      {\n        \"annotationValue\": \"Bioinformatician\",\n        \"termSource\": null,\n        \"termAccession\": \"\",\n        \"comments\": []\n      }\n    ]\n  }\n}\n"
										},
										"url": {
											"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/contacts",
											"host": [
												"{{ws-py-server}}{{ws-py-port}}"
											],
											"path": [
												"mtbls",
												"ws",
												"studies",
												"{{PubStudyId}}",
												"contacts"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "http://localhost.ebi.ac.uk:8080",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Content-Length",
											"value": "790",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Tue, 27 Feb 2018 14:46:35 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Server",
											"value": "Werkzeug/0.12.2 Python/3.5.4",
											"name": "Server",
											"description": "A name for the server"
										},
										{
											"key": "Vary",
											"value": "Origin",
											"name": "Vary",
											"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
										}
									],
									"cookie": [],
									"body": "{\n    \"contact\": {\n        \"firstName\": \"John\",\n        \"lastName\": \"Doe\",\n        \"email\": \"doej@a.mail.com\",\n        \"affiliation\": \"EMBL-EBI\",\n        \"comments\": [],\n        \"address\": \"Wellcome Genome Campus, Hinxton, Cambridgeshire, CB10 1SD, UK\",\n        \"fax\": \"012345678902\",\n        \"midInitials\": \"A\",\n        \"phone\": \"012345678901\",\n        \"roles\": [\n            {\n                \"annotationValue\": \"investigator\",\n                \"termSource\": null,\n                \"termAccession\": \"http://www.ebi.ac.uk/efo/EFO_0001739\",\n                \"comments\": []\n            },\n            {\n                \"annotationValue\": \"Bioinformatician\",\n                \"termSource\": null,\n                \"termAccession\": \"\",\n                \"comments\": []\n            }\n        ]\n    }\n}\n"
								}
							]
						},
						{
							"name": "1 - Delete Study Contact - Pub - Auth -> 200",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a43a5457-0b4a-40ae-98b7-526a65878ce8",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Body has contact\"] = responseBody.has('\"contact\":');",
											"var jsonData = JSON.parse(responseBody);",
											"if (jsonData.contact) {",
											"    var item = jsonData.contact;",
											"    tests[\"JSON response has key 'firstName'\"] = item.hasOwnProperty('firstName');",
											"    tests[\"JSON response key 'firstName' not Null\"] = item.firstName;",
											"    tests[\"JSON response has key 'lastName'\"] = item.hasOwnProperty('lastName');",
											"    tests[\"JSON response key 'lastName' not Null\"] = item.lastName;",
											"    tests[\"JSON response has key 'email'\"] = item.hasOwnProperty('email');",
											"    tests[\"JSON response key 'email' not Null\"] = item.email;",
											"    tests[\"JSON response has key 'address'\"] = item.hasOwnProperty('address');",
											"    // tests[\"JSON response key 'address' not Null\"] = item.address;",
											"    if (item.roles.length > 0) {",
											"        var role = item.roles[0];",
											"        tests[\"JSON response has key 'role annotationValue'\"] = role.hasOwnProperty('annotationValue');",
											"        tests[\"JSON response key 'role annotationValue' not Null\"] = role.annotationValue !== null;",
											"    }",
											"}"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "16cd3cf1-7dc1-4c22-94bd-57995c04f5a5",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/contacts?email={{ContactID}}",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PubStudyId}}",
										"contacts"
									],
									"query": [
										{
											"key": "email",
											"value": "{{ContactID}}",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": [
								{
									"id": "60914e2a-5ded-4732-98a1-9150ca32881f",
									"name": "Delete Study Contact - Pub - Auth -> 200",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"disabled": false
											},
											{
												"key": "user_token",
												"value": "{{curator}}",
												"disabled": false
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/contacts?email={{ContactID}}",
											"host": [
												"{{ws-py-server}}{{ws-py-port}}"
											],
											"path": [
												"mtbls",
												"ws",
												"studies",
												"{{PubStudyId}}",
												"contacts"
											],
											"query": [
												{
													"key": "email",
													"value": "{{ContactID}}",
													"equals": true
												}
											]
										}
									},
									"status": "NOT FOUND",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "http://localhost.ebi.ac.uk:8080",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Content-Length",
											"value": "366",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Tue, 27 Feb 2018 15:34:11 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Server",
											"value": "Werkzeug/0.12.2 Python/3.5.4",
											"name": "Server",
											"description": "A name for the server"
										},
										{
											"key": "Vary",
											"value": "Origin",
											"name": "Vary",
											"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
										}
									],
									"cookie": [],
									"body": "{\n    \"message\": \"The requested URL was not found on the server.  If you entered the URL manually please check your spelling and try again. You have requested this URI [/mtbls/ws/studies/MTBLS10/contacts] but did you mean /mtbls/ws/studies/<string:study_id>/contacts or /mtbls/ws/studies/<string:study_id>/contacts/ or /mtbls/ws/studies/<string:study_id>/title ?\"\n}\n"
								},
								{
									"id": "1ed28333-7bc7-4e32-b1ac-0749ead98d65",
									"name": "Delete Study Contact - Pub - Auth -> 200",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"disabled": false
											},
											{
												"key": "user_token",
												"value": "{{curator}}",
												"disabled": false
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/contacts?email={{ContactID}}",
											"host": [
												"{{ws-py-server}}{{ws-py-port}}"
											],
											"path": [
												"mtbls",
												"ws",
												"studies",
												"{{PubStudyId}}",
												"contacts"
											],
											"query": [
												{
													"key": "email",
													"value": "{{ContactID}}",
													"equals": true
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "http://localhost.ebi.ac.uk:8080",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Content-Length",
											"value": "790",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Tue, 27 Feb 2018 15:31:42 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Server",
											"value": "Werkzeug/0.12.2 Python/3.5.4",
											"name": "Server",
											"description": "A name for the server"
										},
										{
											"key": "Vary",
											"value": "Origin",
											"name": "Vary",
											"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
										}
									],
									"cookie": [],
									"body": "{\n    \"contact\": {\n        \"firstName\": \"John\",\n        \"lastName\": \"Doe\",\n        \"email\": \"doej@a.mail.com\",\n        \"affiliation\": \"EMBL-EBI\",\n        \"comments\": [],\n        \"address\": \"Wellcome Genome Campus, Hinxton, Cambridgeshire, CB10 1SD, UK\",\n        \"fax\": \"012345678902\",\n        \"midInitials\": \"A\",\n        \"phone\": \"012345678901\",\n        \"roles\": [\n            {\n                \"annotationValue\": \"investigator\",\n                \"termSource\": null,\n                \"termAccession\": \"http://www.ebi.ac.uk/efo/EFO_0001739\",\n                \"comments\": []\n            },\n            {\n                \"annotationValue\": \"Bioinformatician\",\n                \"termSource\": null,\n                \"termAccession\": \"\",\n                \"comments\": []\n            }\n        ]\n    }\n}\n"
								}
							]
						},
						{
							"name": "2 - Delete Study Contact - Pub - NoToken -> 401",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "95b45da1-610a-4394-a8df-406c66650f3e",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 401\"] = responseCode.code === 401;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain contacts\"] = !(responseBody.has('\"contacts\":'));",
											"tests[\"Body does NOT contain contact\"] = !(responseBody.has('\"contact\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/contacts?email={{ContactID}}",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PubStudyId}}",
										"contacts"
									],
									"query": [
										{
											"key": "email",
											"value": "{{ContactID}}",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": [
								{
									"id": "ccb8e81f-4132-4058-889a-95018c0bc8c7",
									"name": "Delete Study Contact - Pub - NoToken -> 401",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"disabled": false
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": false
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/contacts?email={{ContactID}}",
											"host": [
												"{{ws-py-server}}{{ws-py-port}}"
											],
											"path": [
												"mtbls",
												"ws",
												"studies",
												"{{PubStudyId}}",
												"contacts"
											],
											"query": [
												{
													"key": "email",
													"value": "{{ContactID}}",
													"equals": true
												}
											]
										}
									},
									"status": "UNAUTHORIZED",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "http://localhost.ebi.ac.uk:8080",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Content-Length",
											"value": "243",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Tue, 27 Feb 2018 15:33:47 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Server",
											"value": "Werkzeug/0.12.2 Python/3.5.4",
											"name": "Server",
											"description": "A name for the server"
										},
										{
											"key": "Vary",
											"value": "Origin",
											"name": "Vary",
											"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
										}
									],
									"cookie": [],
									"body": "{\n    \"message\": \"The server could not verify that you are authorized to access the URL requested.  You either supplied the wrong credentials (e.g. a bad password), or your browser doesn't understand how to supply the credentials required.\"\n}\n"
								}
							]
						},
						{
							"name": "3 - Delete Study Contact - Pub - NoAuth -> 403",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6fbccea7-78ea-4363-8fd2-e125ee6207aa",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 403\"] = responseCode.code === 403;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain contacts\"] = !(responseBody.has('\"contacts\":'));",
											"tests[\"Body does NOT contain contact\"] = !(responseBody.has('\"contact\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{WrongAuth}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/contacts?email={{ContactID}}",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PubStudyId}}",
										"contacts"
									],
									"query": [
										{
											"key": "email",
											"value": "{{ContactID}}",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "4 - Delete Study Contact - Pub - Auth - NoParams -> 404",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "26853878-fc36-4dd5-b67a-932193b9c605",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 404\"] = responseCode.code === 404;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain contacts\"] = !(responseBody.has('\"contacts\":'));",
											"tests[\"Body does NOT contain contact\"] = !(responseBody.has('\"contact\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/contacts",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PubStudyId}}",
										"contacts"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "5 - Delete Study Contact - Pub - Auth - NoData -> 404",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3e3d43bf-c708-48a6-b995-75ad161a698b",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 404\"] = responseCode.code === 404;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain contacts\"] = !(responseBody.has('\"contacts\":'));",
											"tests[\"Body does NOT contain contact\"] = !(responseBody.has('\"contact\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/contacts?email=''",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PubStudyId}}",
										"contacts"
									],
									"query": [
										{
											"key": "email",
											"value": "''",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "6 - Delete Study Contact - Pub - Auth - unknownContact -> 404",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "74c2580e-3e46-48da-9e64-77706307d2dc",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 404\"] = responseCode.code === 404;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain contacts\"] = !(responseBody.has('\"contacts\":'));",
											"tests[\"Body does NOT contain contact\"] = !(responseBody.has('\"contact\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/contacts?email={{BadContactId}}",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PubStudyId}}",
										"contacts"
									],
									"query": [
										{
											"key": "email",
											"value": "{{BadContactId}}",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Priv",
					"description": "",
					"item": [
						{
							"name": "10 - New Study Contact - Priv - Auth - NewData -> 200",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "97b20122-da5c-4b63-b501-0e9f3ab15eb3",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Body has contact\"] = responseBody.has('\"contact\":');",
											"var jsonData = JSON.parse(responseBody);",
											"if (jsonData.contact) {",
											"    var item = jsonData.contact;",
											"    tests[\"JSON response has key 'firstName'\"] = item.hasOwnProperty('firstName');",
											"    tests[\"JSON response key 'firstName' not Null\"] = item.firstName;",
											"    tests[\"JSON response has key 'lastName'\"] = item.hasOwnProperty('lastName');",
											"    tests[\"JSON response key 'lastName' not Null\"] = item.lastName;",
											"    tests[\"JSON response has key 'email'\"] = item.hasOwnProperty('email');",
											"    tests[\"JSON response key 'email' not Null\"] = item.email;",
											"    tests[\"JSON response has key 'address'\"] = item.hasOwnProperty('address');",
											"    // tests[\"JSON response key 'address' not Null\"] = item.address;",
											"    if (item.roles.length > 0) {",
											"        var role = item.roles[0];",
											"        tests[\"JSON response has key 'role annotationValue'\"] = role.hasOwnProperty('annotationValue');",
											"        tests[\"JSON response key 'role annotationValue' not Null\"] = role.annotationValue !== null;",
											"    }",
											"}"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"contact\": {\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\",\n    \"email\": \"doej@a.mail.com\",\n    \"affiliation\": \"EMBL-EBI\",\n    \"comments\": [],\n    \"address\": \"Wellcome Genome Campus, Hinxton, Cambridgeshire, CB10 1SD, UK\",\n    \"fax\": \"012345678902\",\n    \"midInitials\": \"A\",\n    \"phone\": \"012345678901\",\n    \"roles\": [\n      {\n        \"annotationValue\": \"investigator\",\n        \"termSource\": null,\n        \"termAccession\": \"http://www.ebi.ac.uk/efo/EFO_0001739\",\n        \"comments\": []\n      },\n      {\n        \"annotationValue\": \"Bioinformatician\",\n        \"termSource\": null,\n        \"termAccession\": \"\",\n        \"comments\": []\n      }\n    ]\n  }\n}\n"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/contacts",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PrivStudyId}}",
										"contacts"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "11 - Delete Study Contact - Priv - Auth -> 200",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a43a5457-0b4a-40ae-98b7-526a65878ce8",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Body has contact\"] = responseBody.has('\"contact\":');",
											"var jsonData = JSON.parse(responseBody);",
											"if (jsonData.contact) {",
											"    var item = jsonData.contact;",
											"    tests[\"JSON response has key 'firstName'\"] = item.hasOwnProperty('firstName');",
											"    tests[\"JSON response key 'firstName' not Null\"] = item.firstName;",
											"    tests[\"JSON response has key 'lastName'\"] = item.hasOwnProperty('lastName');",
											"    tests[\"JSON response key 'lastName' not Null\"] = item.lastName;",
											"    tests[\"JSON response has key 'email'\"] = item.hasOwnProperty('email');",
											"    tests[\"JSON response key 'email' not Null\"] = item.email;",
											"    tests[\"JSON response has key 'address'\"] = item.hasOwnProperty('address');",
											"    // tests[\"JSON response key 'address' not Null\"] = item.address;",
											"    if (item.roles.length > 0) {",
											"        var role = item.roles[0];",
											"        tests[\"JSON response has key 'role annotationValue'\"] = role.hasOwnProperty('annotationValue');",
											"        tests[\"JSON response key 'role annotationValue' not Null\"] = role.annotationValue !== null;",
											"    }",
											"}"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "16cd3cf1-7dc1-4c22-94bd-57995c04f5a5",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/contacts?email={{ContactID}}",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PrivStudyId}}",
										"contacts"
									],
									"query": [
										{
											"key": "email",
											"value": "{{ContactID}}",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": [
								{
									"id": "e45b316e-08a7-46a4-b2c0-e2bed4246c73",
									"name": "Delete Study Contact - Pub - Auth -> 200",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"disabled": false
											},
											{
												"key": "user_token",
												"value": "{{curator}}",
												"disabled": false
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/contacts?email={{ContactID}}",
											"host": [
												"{{ws-py-server}}{{ws-py-port}}"
											],
											"path": [
												"mtbls",
												"ws",
												"studies",
												"{{PubStudyId}}",
												"contacts"
											],
											"query": [
												{
													"key": "email",
													"value": "{{ContactID}}",
													"equals": true
												}
											]
										}
									},
									"status": "NOT FOUND",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "http://localhost.ebi.ac.uk:8080",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Content-Length",
											"value": "366",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Tue, 27 Feb 2018 15:34:11 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Server",
											"value": "Werkzeug/0.12.2 Python/3.5.4",
											"name": "Server",
											"description": "A name for the server"
										},
										{
											"key": "Vary",
											"value": "Origin",
											"name": "Vary",
											"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
										}
									],
									"cookie": [],
									"body": "{\n    \"message\": \"The requested URL was not found on the server.  If you entered the URL manually please check your spelling and try again. You have requested this URI [/mtbls/ws/studies/MTBLS10/contacts] but did you mean /mtbls/ws/studies/<string:study_id>/contacts or /mtbls/ws/studies/<string:study_id>/contacts/ or /mtbls/ws/studies/<string:study_id>/title ?\"\n}\n"
								},
								{
									"id": "57a73dab-d9cd-475b-8fea-b4cde9f42b22",
									"name": "Delete Study Contact - Pub - Auth -> 200",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"disabled": false
											},
											{
												"key": "user_token",
												"value": "{{curator}}",
												"disabled": false
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/contacts?email={{ContactID}}",
											"host": [
												"{{ws-py-server}}{{ws-py-port}}"
											],
											"path": [
												"mtbls",
												"ws",
												"studies",
												"{{PubStudyId}}",
												"contacts"
											],
											"query": [
												{
													"key": "email",
													"value": "{{ContactID}}",
													"equals": true
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "http://localhost.ebi.ac.uk:8080",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Content-Length",
											"value": "790",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Tue, 27 Feb 2018 15:31:42 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Server",
											"value": "Werkzeug/0.12.2 Python/3.5.4",
											"name": "Server",
											"description": "A name for the server"
										},
										{
											"key": "Vary",
											"value": "Origin",
											"name": "Vary",
											"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
										}
									],
									"cookie": [],
									"body": "{\n    \"contact\": {\n        \"firstName\": \"John\",\n        \"lastName\": \"Doe\",\n        \"email\": \"doej@a.mail.com\",\n        \"affiliation\": \"EMBL-EBI\",\n        \"comments\": [],\n        \"address\": \"Wellcome Genome Campus, Hinxton, Cambridgeshire, CB10 1SD, UK\",\n        \"fax\": \"012345678902\",\n        \"midInitials\": \"A\",\n        \"phone\": \"012345678901\",\n        \"roles\": [\n            {\n                \"annotationValue\": \"investigator\",\n                \"termSource\": null,\n                \"termAccession\": \"http://www.ebi.ac.uk/efo/EFO_0001739\",\n                \"comments\": []\n            },\n            {\n                \"annotationValue\": \"Bioinformatician\",\n                \"termSource\": null,\n                \"termAccession\": \"\",\n                \"comments\": []\n            }\n        ]\n    }\n}\n"
								}
							]
						},
						{
							"name": "12 - Delete Study Contact - Priv - NoToken -> 401",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "95b45da1-610a-4394-a8df-406c66650f3e",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 401\"] = responseCode.code === 401;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain contacts\"] = !(responseBody.has('\"contacts\":'));",
											"tests[\"Body does NOT contain contact\"] = !(responseBody.has('\"contact\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/contacts?email={{ContactID}}",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PrivStudyId}}",
										"contacts"
									],
									"query": [
										{
											"key": "email",
											"value": "{{ContactID}}",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": [
								{
									"id": "e346a1f5-a4f0-4cd3-bb8a-8b02b608b856",
									"name": "Delete Study Contact - Pub - NoToken -> 401",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"disabled": false
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": false
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/contacts?email={{ContactID}}",
											"host": [
												"{{ws-py-server}}{{ws-py-port}}"
											],
											"path": [
												"mtbls",
												"ws",
												"studies",
												"{{PubStudyId}}",
												"contacts"
											],
											"query": [
												{
													"key": "email",
													"value": "{{ContactID}}",
													"equals": true
												}
											]
										}
									},
									"status": "UNAUTHORIZED",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "http://localhost.ebi.ac.uk:8080",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Content-Length",
											"value": "243",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Tue, 27 Feb 2018 15:33:47 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Server",
											"value": "Werkzeug/0.12.2 Python/3.5.4",
											"name": "Server",
											"description": "A name for the server"
										},
										{
											"key": "Vary",
											"value": "Origin",
											"name": "Vary",
											"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
										}
									],
									"cookie": [],
									"body": "{\n    \"message\": \"The server could not verify that you are authorized to access the URL requested.  You either supplied the wrong credentials (e.g. a bad password), or your browser doesn't understand how to supply the credentials required.\"\n}\n"
								}
							]
						},
						{
							"name": "13 - Delete Study Contact - Priv - NoAuth -> 403",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6fbccea7-78ea-4363-8fd2-e125ee6207aa",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 403\"] = responseCode.code === 403;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain contacts\"] = !(responseBody.has('\"contacts\":'));",
											"tests[\"Body does NOT contain contact\"] = !(responseBody.has('\"contact\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{WrongAuth}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/contacts?email={{ContactID}}",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PrivStudyId}}",
										"contacts"
									],
									"query": [
										{
											"key": "email",
											"value": "{{ContactID}}",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "14 - Delete Study Contact - Priv - Auth - NoParams -> 404",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "26853878-fc36-4dd5-b67a-932193b9c605",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 404\"] = responseCode.code === 404;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain contacts\"] = !(responseBody.has('\"contacts\":'));",
											"tests[\"Body does NOT contain contact\"] = !(responseBody.has('\"contact\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/contacts",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PrivStudyId}}",
										"contacts"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "15 - Delete Study Contact - Priv - Auth - NoData -> 404",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3e3d43bf-c708-48a6-b995-75ad161a698b",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 404\"] = responseCode.code === 404;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain contacts\"] = !(responseBody.has('\"contacts\":'));",
											"tests[\"Body does NOT contain contact\"] = !(responseBody.has('\"contact\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/contacts?email=''",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PrivStudyId}}",
										"contacts"
									],
									"query": [
										{
											"key": "email",
											"value": "''",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "16 - Delete Study Contact - Priv - Auth - unknownContact -> 404",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "74c2580e-3e46-48da-9e64-77706307d2dc",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 404\"] = responseCode.code === 404;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain contacts\"] = !(responseBody.has('\"contacts\":'));",
											"tests[\"Body does NOT contain contact\"] = !(responseBody.has('\"contact\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/contacts?email={{BadContactId}}",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PrivStudyId}}",
										"contacts"
									],
									"query": [
										{
											"key": "email",
											"value": "{{BadContactId}}",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				}
			]
		},
		{
			"name": "DELETE Study Protocol",
			"description": null,
			"item": [
				{
					"name": "Pub",
					"description": "",
					"item": [
						{
							"name": "0 - New Study Protocol - Pub - Auth - NewData -> 200",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6c01a969-7e25-488b-a849-c296bf6e616c",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Body has protocol\"] = responseBody.has('\"protocol\":');",
											"var jsonData = JSON.parse(responseBody);",
											"if (jsonData.protocol) {",
											"    var item = jsonData.protocol",
											"    tests[\"JSON response has key 'name'\"] = item.hasOwnProperty('name');",
											"    tests[\"JSON response key 'name' not Null\"] = item.name;",
											"    tests[\"JSON response has key 'description'\"] = item.hasOwnProperty('description');",
											"    tests[\"JSON response key 'description' not Null\"] = item.description;",
											"    tests[\"JSON response has key 'protocolType'\"] = item.hasOwnProperty('protocolType');",
											"    tests[\"JSON response key 'protocolType' not Null\"] = item.protocolType;",
											"    tests[\"JSON response has key 'components'\"] = item.hasOwnProperty('components');",
											"    tests[\"JSON response key 'components' not Null\"] = item.components;",
											"    tests[\"JSON response has key 'parameters'\"] = item.hasOwnProperty('parameters');",
											"    tests[\"JSON response key 'parameters' not Null\"] = item.parameters;",
											"    tests[\"JSON response has key 'uri'\"] = item.hasOwnProperty('uri');",
											"    // tests[\"JSON response key 'uri' not Null\"] = item.uri;",
											"    tests[\"JSON response has key 'version'\"] = item.hasOwnProperty('version');",
											"    tests[\"JSON response key 'version' not Null\"] = item.version;",
											"    tests[\"JSON response has key 'comments'\"] = item.hasOwnProperty('comments');",
											"    tests[\"JSON response key 'comments' not Null\"] = item.comments;",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"protocol\": {\n      \"comments\": [\n      \t{\n      \t  \"name\": \"Updated\",\n      \t  \"value\": \"Updated with MtblsWs-Py\"\n      \t}\n      ],\n      \"components\": [],\n      \"description\": \"Test-Protocol description.\",\n      \"name\": \"Test-Protocol-Name\",\n      \"parameters\": [\n        {\n          \"comments\": [],\n          \"parameterName\": {\n            \"comments\": [],\n            \"annotationValue\": \"Test-Protocol-Parameter-Name\",\n            \"termAccession\": \"\",\n            \"termSource\": null\n          }        }\n      ],\n      \"protocolType\": {\n        \"comments\": [],\n        \"annotationValue\": \"Test-Protocol-Type\",\n        \"termAccession\": \"\",\n        \"termSource\": null\n      },\n      \"uri\": \"\",\n      \"version\": \"0.1\"\n    }\n}\n"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/protocols",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PubStudyId}}",
										"protocols"
									]
								},
								"description": null
							},
							"response": [
								{
									"id": "73d5c6d1-f73a-4abd-adcb-f720654e61e8",
									"name": "New Study Contact - Pub - Auth - NewData -> 200",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"disabled": false
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": false
											},
											{
												"key": "user_token",
												"value": "{{curator}}",
												"disabled": false
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"contact\": {\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\",\n    \"email\": \"doej@a.mail.com\",\n    \"affiliation\": \"EMBL-EBI\",\n    \"comments\": [],\n    \"address\": \"Wellcome Genome Campus, Hinxton, Cambridgeshire, CB10 1SD, UK\",\n    \"fax\": \"012345678902\",\n    \"midInitials\": \"A\",\n    \"phone\": \"012345678901\",\n    \"roles\": [\n      {\n        \"annotationValue\": \"investigator\",\n        \"termSource\": null,\n        \"termAccession\": \"http://www.ebi.ac.uk/efo/EFO_0001739\",\n        \"comments\": []\n      },\n      {\n        \"annotationValue\": \"Bioinformatician\",\n        \"termSource\": null,\n        \"termAccession\": \"\",\n        \"comments\": []\n      }\n    ]\n  }\n}\n"
										},
										"url": {
											"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/contacts",
											"host": [
												"{{ws-py-server}}{{ws-py-port}}"
											],
											"path": [
												"mtbls",
												"ws",
												"studies",
												"{{PubStudyId}}",
												"contacts"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "http://localhost.ebi.ac.uk:8080",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Content-Length",
											"value": "790",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Tue, 27 Feb 2018 14:46:35 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Server",
											"value": "Werkzeug/0.12.2 Python/3.5.4",
											"name": "Server",
											"description": "A name for the server"
										},
										{
											"key": "Vary",
											"value": "Origin",
											"name": "Vary",
											"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
										}
									],
									"cookie": [],
									"body": "{\n    \"contact\": {\n        \"firstName\": \"John\",\n        \"lastName\": \"Doe\",\n        \"email\": \"doej@a.mail.com\",\n        \"affiliation\": \"EMBL-EBI\",\n        \"comments\": [],\n        \"address\": \"Wellcome Genome Campus, Hinxton, Cambridgeshire, CB10 1SD, UK\",\n        \"fax\": \"012345678902\",\n        \"midInitials\": \"A\",\n        \"phone\": \"012345678901\",\n        \"roles\": [\n            {\n                \"annotationValue\": \"investigator\",\n                \"termSource\": null,\n                \"termAccession\": \"http://www.ebi.ac.uk/efo/EFO_0001739\",\n                \"comments\": []\n            },\n            {\n                \"annotationValue\": \"Bioinformatician\",\n                \"termSource\": null,\n                \"termAccession\": \"\",\n                \"comments\": []\n            }\n        ]\n    }\n}\n"
								}
							]
						},
						{
							"name": "1 - Delete Study Protocol - Pub - Auth -> 200",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1dfccd40-d436-4a54-a12a-2843f0e3e458",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Body has protocol\"] = responseBody.has('\"protocol\":');",
											"var jsonData = JSON.parse(responseBody);",
											"if (jsonData.protocol) {",
											"    var item = jsonData.protocol",
											"    tests[\"JSON response has key 'name'\"] = item.hasOwnProperty('name');",
											"    tests[\"JSON response key 'name' not Null\"] = item.name;",
											"    tests[\"JSON response has key 'description'\"] = item.hasOwnProperty('description');",
											"    tests[\"JSON response key 'description' not Null\"] = item.description;",
											"    tests[\"JSON response has key 'protocolType'\"] = item.hasOwnProperty('protocolType');",
											"    tests[\"JSON response key 'protocolType' not Null\"] = item.protocolType;",
											"    tests[\"JSON response has key 'components'\"] = item.hasOwnProperty('components');",
											"    tests[\"JSON response key 'components' not Null\"] = item.components;",
											"    tests[\"JSON response has key 'parameters'\"] = item.hasOwnProperty('parameters');",
											"    tests[\"JSON response key 'parameters' not Null\"] = item.parameters;",
											"    tests[\"JSON response has key 'uri'\"] = item.hasOwnProperty('uri');",
											"    // tests[\"JSON response key 'uri' not Null\"] = item.uri;",
											"    tests[\"JSON response has key 'version'\"] = item.hasOwnProperty('version');",
											"    tests[\"JSON response key 'version' not Null\"] = item.version;",
											"    tests[\"JSON response has key 'comments'\"] = item.hasOwnProperty('comments');",
											"    tests[\"JSON response key 'comments' not Null\"] = item.comments;",
											"}",
											""
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "16cd3cf1-7dc1-4c22-94bd-57995c04f5a5",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/protocols?name={{ValidProtocolId}}",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PubStudyId}}",
										"protocols"
									],
									"query": [
										{
											"key": "name",
											"value": "{{ValidProtocolId}}",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": [
								{
									"id": "64301393-17b6-4548-a781-2d2b0343bab8",
									"name": "Delete Study Contact - Pub - Auth -> 200",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"disabled": false
											},
											{
												"key": "user_token",
												"value": "{{curator}}",
												"disabled": false
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/contacts?email={{ContactID}}",
											"host": [
												"{{ws-py-server}}{{ws-py-port}}"
											],
											"path": [
												"mtbls",
												"ws",
												"studies",
												"{{PubStudyId}}",
												"contacts"
											],
											"query": [
												{
													"key": "email",
													"value": "{{ContactID}}",
													"equals": true
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "http://localhost.ebi.ac.uk:8080",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Content-Length",
											"value": "790",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Tue, 27 Feb 2018 15:31:42 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Server",
											"value": "Werkzeug/0.12.2 Python/3.5.4",
											"name": "Server",
											"description": "A name for the server"
										},
										{
											"key": "Vary",
											"value": "Origin",
											"name": "Vary",
											"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
										}
									],
									"cookie": [],
									"body": "{\n    \"contact\": {\n        \"firstName\": \"John\",\n        \"lastName\": \"Doe\",\n        \"email\": \"doej@a.mail.com\",\n        \"affiliation\": \"EMBL-EBI\",\n        \"comments\": [],\n        \"address\": \"Wellcome Genome Campus, Hinxton, Cambridgeshire, CB10 1SD, UK\",\n        \"fax\": \"012345678902\",\n        \"midInitials\": \"A\",\n        \"phone\": \"012345678901\",\n        \"roles\": [\n            {\n                \"annotationValue\": \"investigator\",\n                \"termSource\": null,\n                \"termAccession\": \"http://www.ebi.ac.uk/efo/EFO_0001739\",\n                \"comments\": []\n            },\n            {\n                \"annotationValue\": \"Bioinformatician\",\n                \"termSource\": null,\n                \"termAccession\": \"\",\n                \"comments\": []\n            }\n        ]\n    }\n}\n"
								},
								{
									"id": "015c89b3-a5f1-4caa-8d87-8ed4abd34d93",
									"name": "Delete Study Contact - Pub - Auth -> 200",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"disabled": false
											},
											{
												"key": "user_token",
												"value": "{{curator}}",
												"disabled": false
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/contacts?email={{ContactID}}",
											"host": [
												"{{ws-py-server}}{{ws-py-port}}"
											],
											"path": [
												"mtbls",
												"ws",
												"studies",
												"{{PubStudyId}}",
												"contacts"
											],
											"query": [
												{
													"key": "email",
													"value": "{{ContactID}}",
													"equals": true
												}
											]
										}
									},
									"status": "NOT FOUND",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "http://localhost.ebi.ac.uk:8080",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Content-Length",
											"value": "366",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Tue, 27 Feb 2018 15:34:11 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Server",
											"value": "Werkzeug/0.12.2 Python/3.5.4",
											"name": "Server",
											"description": "A name for the server"
										},
										{
											"key": "Vary",
											"value": "Origin",
											"name": "Vary",
											"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
										}
									],
									"cookie": [],
									"body": "{\n    \"message\": \"The requested URL was not found on the server.  If you entered the URL manually please check your spelling and try again. You have requested this URI [/mtbls/ws/studies/MTBLS10/contacts] but did you mean /mtbls/ws/studies/<string:study_id>/contacts or /mtbls/ws/studies/<string:study_id>/contacts/ or /mtbls/ws/studies/<string:study_id>/title ?\"\n}\n"
								}
							]
						},
						{
							"name": "2 - Delete Study Protocol - Pub - NoToken -> 401",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7880ceb1-4e0c-4b95-95f9-054aa7efa4b5",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 401\"] = responseCode.code === 401;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain protocols\"] = !(responseBody.has('\"protocols\":'));",
											"tests[\"Body does NOT contain protocol\"] = !(responseBody.has('\"protocol\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/protocols?name={{ValidProtocolId}}",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PubStudyId}}",
										"protocols"
									],
									"query": [
										{
											"key": "name",
											"value": "{{ValidProtocolId}}",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": [
								{
									"id": "9f940200-45b2-4c2f-9f22-74352cb55348",
									"name": "Delete Study Contact - Pub - NoToken -> 401",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"disabled": false
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": false
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/contacts?email={{ContactID}}",
											"host": [
												"{{ws-py-server}}{{ws-py-port}}"
											],
											"path": [
												"mtbls",
												"ws",
												"studies",
												"{{PubStudyId}}",
												"contacts"
											],
											"query": [
												{
													"key": "email",
													"value": "{{ContactID}}",
													"equals": true
												}
											]
										}
									},
									"status": "UNAUTHORIZED",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "http://localhost.ebi.ac.uk:8080",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Content-Length",
											"value": "243",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Tue, 27 Feb 2018 15:33:47 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Server",
											"value": "Werkzeug/0.12.2 Python/3.5.4",
											"name": "Server",
											"description": "A name for the server"
										},
										{
											"key": "Vary",
											"value": "Origin",
											"name": "Vary",
											"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
										}
									],
									"cookie": [],
									"body": "{\n    \"message\": \"The server could not verify that you are authorized to access the URL requested.  You either supplied the wrong credentials (e.g. a bad password), or your browser doesn't understand how to supply the credentials required.\"\n}\n"
								}
							]
						},
						{
							"name": "3 - Delete Study Protocol - Pub - NoAuth -> 403",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "437ba2db-4248-4154-a6bb-22e797f21ad2",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 403\"] = responseCode.code === 403;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain protocols\"] = !(responseBody.has('\"protocols\":'));",
											"tests[\"Body does NOT contain protocol\"] = !(responseBody.has('\"protocol\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{WrongAuth}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/protocols?name={{ValidProtocolId}}",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PubStudyId}}",
										"protocols"
									],
									"query": [
										{
											"key": "name",
											"value": "{{ValidProtocolId}}",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "4 - Delete Study Protocol - Pub - Auth - NoParams -> 404",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "af273d92-9643-4cdd-96d4-b44151faf919",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 404\"] = responseCode.code === 404;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain protocols\"] = !(responseBody.has('\"protocols\":'));",
											"tests[\"Body does NOT contain protocol\"] = !(responseBody.has('\"protocol\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/protocols",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PubStudyId}}",
										"protocols"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "5 - Delete Study Protocol - Pub - Auth - NoData -> 404",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3be9e775-e5ad-4404-a84c-50b80a7fe01a",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 404\"] = responseCode.code === 404;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain protocols\"] = !(responseBody.has('\"protocols\":'));",
											"tests[\"Body does NOT contain protocol\"] = !(responseBody.has('\"protocol\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/protocols?name=''",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PubStudyId}}",
										"protocols"
									],
									"query": [
										{
											"key": "name",
											"value": "''",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "6 - Delete Study Protocol - Pub - Auth - unknown -> 404",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a061796b-e665-4857-b547-8f236e7b9fbd",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 404\"] = responseCode.code === 404;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain protocols\"] = !(responseBody.has('\"protocols\":'));",
											"tests[\"Body does NOT contain protocol\"] = !(responseBody.has('\"protocol\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/protocols?name={{BadProtocolId}}",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PubStudyId}}",
										"protocols"
									],
									"query": [
										{
											"key": "name",
											"value": "{{BadProtocolId}}",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Priv",
					"description": "",
					"item": [
						{
							"name": "10 - New Study Protocol - Priv - Auth - NewData -> 200",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "62a806cf-8314-4921-96bc-2550637138e5",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Body has protocol\"] = responseBody.has('\"protocol\":');",
											"var jsonData = JSON.parse(responseBody);",
											"if (jsonData.protocol) {",
											"    var item = jsonData.protocol",
											"    tests[\"JSON response has key 'name'\"] = item.hasOwnProperty('name');",
											"    tests[\"JSON response key 'name' not Null\"] = item.name;",
											"    tests[\"JSON response has key 'description'\"] = item.hasOwnProperty('description');",
											"    tests[\"JSON response key 'description' not Null\"] = item.description;",
											"    tests[\"JSON response has key 'protocolType'\"] = item.hasOwnProperty('protocolType');",
											"    tests[\"JSON response key 'protocolType' not Null\"] = item.protocolType;",
											"    tests[\"JSON response has key 'components'\"] = item.hasOwnProperty('components');",
											"    tests[\"JSON response key 'components' not Null\"] = item.components;",
											"    tests[\"JSON response has key 'parameters'\"] = item.hasOwnProperty('parameters');",
											"    tests[\"JSON response key 'parameters' not Null\"] = item.parameters;",
											"    tests[\"JSON response has key 'uri'\"] = item.hasOwnProperty('uri');",
											"    // tests[\"JSON response key 'uri' not Null\"] = item.uri;",
											"    tests[\"JSON response has key 'version'\"] = item.hasOwnProperty('version');",
											"    tests[\"JSON response key 'version' not Null\"] = item.version;",
											"    tests[\"JSON response has key 'comments'\"] = item.hasOwnProperty('comments');",
											"    tests[\"JSON response key 'comments' not Null\"] = item.comments;",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"protocol\": {\n      \"comments\": [\n      \t{\n      \t  \"name\": \"Updated\",\n      \t  \"value\": \"Updated with MtblsWs-Py\"\n      \t}\n      ],\n      \"components\": [],\n      \"description\": \"Test-Protocol description.\",\n      \"name\": \"Test-Protocol-Name\",\n      \"parameters\": [\n        {\n          \"comments\": [],\n          \"parameterName\": {\n            \"comments\": [],\n            \"annotationValue\": \"Test-Protocol-Parameter-Name\",\n            \"termAccession\": \"\",\n            \"termSource\": null\n          }        }\n      ],\n      \"protocolType\": {\n        \"comments\": [],\n        \"annotationValue\": \"Test-Protocol-Type\",\n        \"termAccession\": \"\",\n        \"termSource\": null\n      },\n      \"uri\": \"\",\n      \"version\": \"0.1\"\n    }\n}\n"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/protocols",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PrivStudyId}}",
										"protocols"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "11 - Delete Study Protocol - Priv - Auth -> 200",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "546eaced-91be-49a8-b26a-97c16e4598da",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Body has protocol\"] = responseBody.has('\"protocol\":');",
											"var jsonData = JSON.parse(responseBody);",
											"if (jsonData.protocol) {",
											"    var item = jsonData.protocol",
											"    tests[\"JSON response has key 'name'\"] = item.hasOwnProperty('name');",
											"    tests[\"JSON response key 'name' not Null\"] = item.name;",
											"    tests[\"JSON response has key 'description'\"] = item.hasOwnProperty('description');",
											"    tests[\"JSON response key 'description' not Null\"] = item.description;",
											"    tests[\"JSON response has key 'protocolType'\"] = item.hasOwnProperty('protocolType');",
											"    tests[\"JSON response key 'protocolType' not Null\"] = item.protocolType;",
											"    tests[\"JSON response has key 'components'\"] = item.hasOwnProperty('components');",
											"    tests[\"JSON response key 'components' not Null\"] = item.components;",
											"    tests[\"JSON response has key 'parameters'\"] = item.hasOwnProperty('parameters');",
											"    tests[\"JSON response key 'parameters' not Null\"] = item.parameters;",
											"    tests[\"JSON response has key 'uri'\"] = item.hasOwnProperty('uri');",
											"    // tests[\"JSON response key 'uri' not Null\"] = item.uri;",
											"    tests[\"JSON response has key 'version'\"] = item.hasOwnProperty('version');",
											"    tests[\"JSON response key 'version' not Null\"] = item.version;",
											"    tests[\"JSON response has key 'comments'\"] = item.hasOwnProperty('comments');",
											"    tests[\"JSON response key 'comments' not Null\"] = item.comments;",
											"}",
											""
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "16cd3cf1-7dc1-4c22-94bd-57995c04f5a5",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/protocols?name={{ValidProtocolId}}",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PrivStudyId}}",
										"protocols"
									],
									"query": [
										{
											"key": "name",
											"value": "{{ValidProtocolId}}",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": [
								{
									"id": "5873f0d6-3419-4d15-8df2-be49906eb11b",
									"name": "Delete Study Contact - Pub - Auth -> 200",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"disabled": false
											},
											{
												"key": "user_token",
												"value": "{{curator}}",
												"disabled": false
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/contacts?email={{ContactID}}",
											"host": [
												"{{ws-py-server}}{{ws-py-port}}"
											],
											"path": [
												"mtbls",
												"ws",
												"studies",
												"{{PubStudyId}}",
												"contacts"
											],
											"query": [
												{
													"key": "email",
													"value": "{{ContactID}}",
													"equals": true
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "http://localhost.ebi.ac.uk:8080",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Content-Length",
											"value": "790",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Tue, 27 Feb 2018 15:31:42 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Server",
											"value": "Werkzeug/0.12.2 Python/3.5.4",
											"name": "Server",
											"description": "A name for the server"
										},
										{
											"key": "Vary",
											"value": "Origin",
											"name": "Vary",
											"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
										}
									],
									"cookie": [],
									"body": "{\n    \"contact\": {\n        \"firstName\": \"John\",\n        \"lastName\": \"Doe\",\n        \"email\": \"doej@a.mail.com\",\n        \"affiliation\": \"EMBL-EBI\",\n        \"comments\": [],\n        \"address\": \"Wellcome Genome Campus, Hinxton, Cambridgeshire, CB10 1SD, UK\",\n        \"fax\": \"012345678902\",\n        \"midInitials\": \"A\",\n        \"phone\": \"012345678901\",\n        \"roles\": [\n            {\n                \"annotationValue\": \"investigator\",\n                \"termSource\": null,\n                \"termAccession\": \"http://www.ebi.ac.uk/efo/EFO_0001739\",\n                \"comments\": []\n            },\n            {\n                \"annotationValue\": \"Bioinformatician\",\n                \"termSource\": null,\n                \"termAccession\": \"\",\n                \"comments\": []\n            }\n        ]\n    }\n}\n"
								},
								{
									"id": "58aefaad-7430-4f8a-aac3-21071e044979",
									"name": "Delete Study Contact - Pub - Auth -> 200",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"disabled": false
											},
											{
												"key": "user_token",
												"value": "{{curator}}",
												"disabled": false
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/contacts?email={{ContactID}}",
											"host": [
												"{{ws-py-server}}{{ws-py-port}}"
											],
											"path": [
												"mtbls",
												"ws",
												"studies",
												"{{PubStudyId}}",
												"contacts"
											],
											"query": [
												{
													"key": "email",
													"value": "{{ContactID}}",
													"equals": true
												}
											]
										}
									},
									"status": "NOT FOUND",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "http://localhost.ebi.ac.uk:8080",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Content-Length",
											"value": "366",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Tue, 27 Feb 2018 15:34:11 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Server",
											"value": "Werkzeug/0.12.2 Python/3.5.4",
											"name": "Server",
											"description": "A name for the server"
										},
										{
											"key": "Vary",
											"value": "Origin",
											"name": "Vary",
											"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
										}
									],
									"cookie": [],
									"body": "{\n    \"message\": \"The requested URL was not found on the server.  If you entered the URL manually please check your spelling and try again. You have requested this URI [/mtbls/ws/studies/MTBLS10/contacts] but did you mean /mtbls/ws/studies/<string:study_id>/contacts or /mtbls/ws/studies/<string:study_id>/contacts/ or /mtbls/ws/studies/<string:study_id>/title ?\"\n}\n"
								}
							]
						},
						{
							"name": "12 - Delete Study Protocol - Priv - NoToken -> 401",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3a103199-c091-4e46-b460-dcda6700b5c4",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 401\"] = responseCode.code === 401;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain protocols\"] = !(responseBody.has('\"protocols\":'));",
											"tests[\"Body does NOT contain protocol\"] = !(responseBody.has('\"protocol\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/protocols?name={{ValidProtocolId}}",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PrivStudyId}}",
										"protocols"
									],
									"query": [
										{
											"key": "name",
											"value": "{{ValidProtocolId}}",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": [
								{
									"id": "706187ed-7a42-4e68-866c-5cb8c220aa34",
									"name": "Delete Study Contact - Pub - NoToken -> 401",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"disabled": false
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": false
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/contacts?email={{ContactID}}",
											"host": [
												"{{ws-py-server}}{{ws-py-port}}"
											],
											"path": [
												"mtbls",
												"ws",
												"studies",
												"{{PubStudyId}}",
												"contacts"
											],
											"query": [
												{
													"key": "email",
													"value": "{{ContactID}}",
													"equals": true
												}
											]
										}
									},
									"status": "UNAUTHORIZED",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "http://localhost.ebi.ac.uk:8080",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Content-Length",
											"value": "243",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Tue, 27 Feb 2018 15:33:47 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Server",
											"value": "Werkzeug/0.12.2 Python/3.5.4",
											"name": "Server",
											"description": "A name for the server"
										},
										{
											"key": "Vary",
											"value": "Origin",
											"name": "Vary",
											"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
										}
									],
									"cookie": [],
									"body": "{\n    \"message\": \"The server could not verify that you are authorized to access the URL requested.  You either supplied the wrong credentials (e.g. a bad password), or your browser doesn't understand how to supply the credentials required.\"\n}\n"
								}
							]
						},
						{
							"name": "13 - Delete Study Protocol - Priv - NoAuth -> 403",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3341cc31-4cdd-4306-a675-8189413ec068",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 403\"] = responseCode.code === 403;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain protocols\"] = !(responseBody.has('\"protocols\":'));",
											"tests[\"Body does NOT contain protocol\"] = !(responseBody.has('\"protocol\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{WrongAuth}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/protocols?name={{ValidProtocolId}}",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PrivStudyId}}",
										"protocols"
									],
									"query": [
										{
											"key": "name",
											"value": "{{ValidProtocolId}}",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "14 - Delete Study Protocol - Priv - Auth - NoParams -> 404",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0e5e079f-a790-4792-b6ec-90883d41976e",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 404\"] = responseCode.code === 404;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain protocols\"] = !(responseBody.has('\"protocols\":'));",
											"tests[\"Body does NOT contain protocol\"] = !(responseBody.has('\"protocol\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/protocols",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PrivStudyId}}",
										"protocols"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "15 - Delete Study Protocol - Priv - Auth - NoData -> 404",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "22e63bef-4ccc-4a3a-bbb3-f35c23102689",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 404\"] = responseCode.code === 404;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain protocols\"] = !(responseBody.has('\"protocols\":'));",
											"tests[\"Body does NOT contain protocol\"] = !(responseBody.has('\"protocol\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/protocols?name=''",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PrivStudyId}}",
										"protocols"
									],
									"query": [
										{
											"key": "name",
											"value": "''",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "16 - Delete Study Protocol - Priv - Auth - unknown -> 404",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f1561907-9ef5-4fda-8326-0451201485c7",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 404\"] = responseCode.code === 404;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain protocols\"] = !(responseBody.has('\"protocols\":'));",
											"tests[\"Body does NOT contain protocol\"] = !(responseBody.has('\"protocol\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/protocols?name={{BadProtocolId}}",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PrivStudyId}}",
										"protocols"
									],
									"query": [
										{
											"key": "name",
											"value": "{{BadProtocolId}}",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				}
			]
		},
		{
			"name": "DELETE Study Factor",
			"description": null,
			"item": [
				{
					"name": "Pub",
					"description": "",
					"item": [
						{
							"name": "0 - New Study Factor - Pub - Auth - NewData -> 200",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "660ed568-9b97-4daf-b91b-5689956ed7ae",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Body has factor\"] = responseBody.has('\"factor\":');",
											"var jsonData = JSON.parse(responseBody);",
											"if (jsonData.factor) {",
											"    var item = jsonData.factor",
											"    tests[\"JSON response has key 'factorName'\"] = item.hasOwnProperty('factorName');",
											"    tests[\"JSON response key 'factorName' not Null\"] = item.factorName;",
											"    tests[\"JSON response has key 'factorType'\"] = item.hasOwnProperty('factorType');",
											"    tests[\"JSON response key 'factorType' not Null\"] = item.factorType;",
											"    tests[\"JSON response has key 'comments'\"] = item.hasOwnProperty('comments');",
											"    tests[\"JSON response key 'comments' not Null\"] = item.comments;",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{  \n   \"factor\": \n    {\n      \"factorName\": \"Test-Timepoint\",\n      \"factorType\": {\n        \"annotationValue\": \"timepoint\",\n        \"termSource\": {\n          \"name\": \"EFO\",\n          \"file\": \"http://data.bioontology.org/ontologies/EFO\",\n          \"version\": \"132\",\n          \"description\": \"Experimental Factor Ontology\",\n          \"comments\": []\n        },\n        \"termAccession\": \"http://www.ebi.ac.uk/efo/EFO_0000724\",\n        \"comments\": []\n      },\n      \"comments\": []\n    }\n}\n"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/factors",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PubStudyId}}",
										"factors"
									]
								},
								"description": null
							},
							"response": [
								{
									"id": "2f3e01cf-fa91-4cae-9fed-d9c6b3dfbdfd",
									"name": "New Study Contact - Pub - Auth - NewData -> 200",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"disabled": false
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": false
											},
											{
												"key": "user_token",
												"value": "{{curator}}",
												"disabled": false
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"contact\": {\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\",\n    \"email\": \"doej@a.mail.com\",\n    \"affiliation\": \"EMBL-EBI\",\n    \"comments\": [],\n    \"address\": \"Wellcome Genome Campus, Hinxton, Cambridgeshire, CB10 1SD, UK\",\n    \"fax\": \"012345678902\",\n    \"midInitials\": \"A\",\n    \"phone\": \"012345678901\",\n    \"roles\": [\n      {\n        \"annotationValue\": \"investigator\",\n        \"termSource\": null,\n        \"termAccession\": \"http://www.ebi.ac.uk/efo/EFO_0001739\",\n        \"comments\": []\n      },\n      {\n        \"annotationValue\": \"Bioinformatician\",\n        \"termSource\": null,\n        \"termAccession\": \"\",\n        \"comments\": []\n      }\n    ]\n  }\n}\n"
										},
										"url": {
											"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/contacts",
											"host": [
												"{{ws-py-server}}{{ws-py-port}}"
											],
											"path": [
												"mtbls",
												"ws",
												"studies",
												"{{PubStudyId}}",
												"contacts"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "http://localhost.ebi.ac.uk:8080",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Content-Length",
											"value": "790",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Tue, 27 Feb 2018 14:46:35 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Server",
											"value": "Werkzeug/0.12.2 Python/3.5.4",
											"name": "Server",
											"description": "A name for the server"
										},
										{
											"key": "Vary",
											"value": "Origin",
											"name": "Vary",
											"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
										}
									],
									"cookie": [],
									"body": "{\n    \"contact\": {\n        \"firstName\": \"John\",\n        \"lastName\": \"Doe\",\n        \"email\": \"doej@a.mail.com\",\n        \"affiliation\": \"EMBL-EBI\",\n        \"comments\": [],\n        \"address\": \"Wellcome Genome Campus, Hinxton, Cambridgeshire, CB10 1SD, UK\",\n        \"fax\": \"012345678902\",\n        \"midInitials\": \"A\",\n        \"phone\": \"012345678901\",\n        \"roles\": [\n            {\n                \"annotationValue\": \"investigator\",\n                \"termSource\": null,\n                \"termAccession\": \"http://www.ebi.ac.uk/efo/EFO_0001739\",\n                \"comments\": []\n            },\n            {\n                \"annotationValue\": \"Bioinformatician\",\n                \"termSource\": null,\n                \"termAccession\": \"\",\n                \"comments\": []\n            }\n        ]\n    }\n}\n"
								}
							]
						},
						{
							"name": "1 - Delete Study Factor - Pub - Auth -> 200",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ee22ce24-7099-4aeb-b157-9b95eca1d383",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Body has factor\"] = responseBody.has('\"factor\":');",
											"var jsonData = JSON.parse(responseBody);",
											"if (jsonData.factor) {",
											"    var item = jsonData.factor",
											"    tests[\"JSON response has key 'factorName'\"] = item.hasOwnProperty('factorName');",
											"    tests[\"JSON response key 'factorName' not Null\"] = item.factorName;",
											"    tests[\"JSON response has key 'factorType'\"] = item.hasOwnProperty('factorType');",
											"    tests[\"JSON response key 'factorType' not Null\"] = item.factorType;",
											"    tests[\"JSON response has key 'comments'\"] = item.hasOwnProperty('comments');",
											"    tests[\"JSON response key 'comments' not Null\"] = item.comments;",
											"}",
											""
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "16cd3cf1-7dc1-4c22-94bd-57995c04f5a5",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/factors?name={{ValidFactorId}}",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PubStudyId}}",
										"factors"
									],
									"query": [
										{
											"key": "name",
											"value": "{{ValidFactorId}}",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": [
								{
									"id": "ad9df512-cc0c-4761-9800-903f7151d0f4",
									"name": "Delete Study Contact - Pub - Auth -> 200",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"disabled": false
											},
											{
												"key": "user_token",
												"value": "{{curator}}",
												"disabled": false
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/contacts?email={{ContactID}}",
											"host": [
												"{{ws-py-server}}{{ws-py-port}}"
											],
											"path": [
												"mtbls",
												"ws",
												"studies",
												"{{PubStudyId}}",
												"contacts"
											],
											"query": [
												{
													"key": "email",
													"value": "{{ContactID}}",
													"equals": true
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "http://localhost.ebi.ac.uk:8080",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Content-Length",
											"value": "790",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Tue, 27 Feb 2018 15:31:42 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Server",
											"value": "Werkzeug/0.12.2 Python/3.5.4",
											"name": "Server",
											"description": "A name for the server"
										},
										{
											"key": "Vary",
											"value": "Origin",
											"name": "Vary",
											"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
										}
									],
									"cookie": [],
									"body": "{\n    \"contact\": {\n        \"firstName\": \"John\",\n        \"lastName\": \"Doe\",\n        \"email\": \"doej@a.mail.com\",\n        \"affiliation\": \"EMBL-EBI\",\n        \"comments\": [],\n        \"address\": \"Wellcome Genome Campus, Hinxton, Cambridgeshire, CB10 1SD, UK\",\n        \"fax\": \"012345678902\",\n        \"midInitials\": \"A\",\n        \"phone\": \"012345678901\",\n        \"roles\": [\n            {\n                \"annotationValue\": \"investigator\",\n                \"termSource\": null,\n                \"termAccession\": \"http://www.ebi.ac.uk/efo/EFO_0001739\",\n                \"comments\": []\n            },\n            {\n                \"annotationValue\": \"Bioinformatician\",\n                \"termSource\": null,\n                \"termAccession\": \"\",\n                \"comments\": []\n            }\n        ]\n    }\n}\n"
								},
								{
									"id": "81f1f2b3-eb2e-4ad9-b49f-4a4788e84986",
									"name": "Delete Study Contact - Pub - Auth -> 200",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"disabled": false
											},
											{
												"key": "user_token",
												"value": "{{curator}}",
												"disabled": false
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/contacts?email={{ContactID}}",
											"host": [
												"{{ws-py-server}}{{ws-py-port}}"
											],
											"path": [
												"mtbls",
												"ws",
												"studies",
												"{{PubStudyId}}",
												"contacts"
											],
											"query": [
												{
													"key": "email",
													"value": "{{ContactID}}",
													"equals": true
												}
											]
										}
									},
									"status": "NOT FOUND",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "http://localhost.ebi.ac.uk:8080",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Content-Length",
											"value": "366",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Tue, 27 Feb 2018 15:34:11 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Server",
											"value": "Werkzeug/0.12.2 Python/3.5.4",
											"name": "Server",
											"description": "A name for the server"
										},
										{
											"key": "Vary",
											"value": "Origin",
											"name": "Vary",
											"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
										}
									],
									"cookie": [],
									"body": "{\n    \"message\": \"The requested URL was not found on the server.  If you entered the URL manually please check your spelling and try again. You have requested this URI [/mtbls/ws/studies/MTBLS10/contacts] but did you mean /mtbls/ws/studies/<string:study_id>/contacts or /mtbls/ws/studies/<string:study_id>/contacts/ or /mtbls/ws/studies/<string:study_id>/title ?\"\n}\n"
								}
							]
						},
						{
							"name": "2 - Delete Study Factor - Pub - NoToken -> 401",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "cc6b4709-a53b-4136-848c-26c2d0ea5a3f",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 401\"] = responseCode.code === 401;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain factors\"] = !(responseBody.has('\"factors\":'));",
											"tests[\"Body does NOT contain factor\"] = !(responseBody.has('\"factor\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/factors?name={{ValidFactorId}}",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PubStudyId}}",
										"factors"
									],
									"query": [
										{
											"key": "name",
											"value": "{{ValidFactorId}}",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": [
								{
									"id": "2782ce9b-f76d-4a1d-9ecc-9ca03b06383c",
									"name": "Delete Study Contact - Pub - NoToken -> 401",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"disabled": false
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": false
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/contacts?email={{ContactID}}",
											"host": [
												"{{ws-py-server}}{{ws-py-port}}"
											],
											"path": [
												"mtbls",
												"ws",
												"studies",
												"{{PubStudyId}}",
												"contacts"
											],
											"query": [
												{
													"key": "email",
													"value": "{{ContactID}}",
													"equals": true
												}
											]
										}
									},
									"status": "UNAUTHORIZED",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "http://localhost.ebi.ac.uk:8080",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Content-Length",
											"value": "243",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Tue, 27 Feb 2018 15:33:47 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Server",
											"value": "Werkzeug/0.12.2 Python/3.5.4",
											"name": "Server",
											"description": "A name for the server"
										},
										{
											"key": "Vary",
											"value": "Origin",
											"name": "Vary",
											"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
										}
									],
									"cookie": [],
									"body": "{\n    \"message\": \"The server could not verify that you are authorized to access the URL requested.  You either supplied the wrong credentials (e.g. a bad password), or your browser doesn't understand how to supply the credentials required.\"\n}\n"
								}
							]
						},
						{
							"name": "3 - Delete Study Factor - Pub - NoAuth -> 403",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5782655c-03e0-4123-a3bb-aa6ec8d7bb32",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 403\"] = responseCode.code === 403;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain factors\"] = !(responseBody.has('\"factors\":'));",
											"tests[\"Body does NOT contain factor\"] = !(responseBody.has('\"factor\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{WrongAuth}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/factors?name={{ValidFactorId}}",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PubStudyId}}",
										"factors"
									],
									"query": [
										{
											"key": "name",
											"value": "{{ValidFactorId}}",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "4 - Delete Study Factor - Pub - Auth - NoParams -> 404",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4dddfc0a-9ea1-4d2d-8ca7-c9b88e6d94a1",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 404\"] = responseCode.code === 404;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain factors\"] = !(responseBody.has('\"factors\":'));",
											"tests[\"Body does NOT contain factor\"] = !(responseBody.has('\"factor\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/factors",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PubStudyId}}",
										"factors"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "5 - Delete Study Factor - Pub - Auth - NoData -> 404",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "278baace-2a13-4950-939f-9a56c27c9b8d",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 404\"] = responseCode.code === 404;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain factors\"] = !(responseBody.has('\"factors\":'));",
											"tests[\"Body does NOT contain factor\"] = !(responseBody.has('\"factor\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/factors?name=''",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PubStudyId}}",
										"factors"
									],
									"query": [
										{
											"key": "name",
											"value": "''",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "6 - Delete Study Factor - Pub - Auth - unknown -> 404",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9e17a2fd-2d29-482e-95d4-55dfbab08690",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 404\"] = responseCode.code === 404;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain factors\"] = !(responseBody.has('\"factors\":'));",
											"tests[\"Body does NOT contain factor\"] = !(responseBody.has('\"factor\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/factors?name={{BadFactorId}}",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PubStudyId}}",
										"factors"
									],
									"query": [
										{
											"key": "name",
											"value": "{{BadFactorId}}",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Priv",
					"description": "",
					"item": [
						{
							"name": "10 - New Study Factor - Priv - Auth - NewData -> 200",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d794aa2d-c2c1-4fda-affd-4be06f5f1ce9",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Body has factor\"] = responseBody.has('\"factor\":');",
											"var jsonData = JSON.parse(responseBody);",
											"if (jsonData.factor) {",
											"    var item = jsonData.factor",
											"    tests[\"JSON response has key 'factorName'\"] = item.hasOwnProperty('factorName');",
											"    tests[\"JSON response key 'factorName' not Null\"] = item.factorName;",
											"    tests[\"JSON response has key 'factorType'\"] = item.hasOwnProperty('factorType');",
											"    tests[\"JSON response key 'factorType' not Null\"] = item.factorType;",
											"    tests[\"JSON response has key 'comments'\"] = item.hasOwnProperty('comments');",
											"    tests[\"JSON response key 'comments' not Null\"] = item.comments;",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{  \n   \"factor\": \n    {\n      \"factorName\": \"Test-Timepoint\",\n      \"factorType\": {\n        \"annotationValue\": \"timepoint\",\n        \"termSource\": {\n          \"name\": \"EFO\",\n          \"file\": \"http://data.bioontology.org/ontologies/EFO\",\n          \"version\": \"132\",\n          \"description\": \"Experimental Factor Ontology\",\n          \"comments\": []\n        },\n        \"termAccession\": \"http://www.ebi.ac.uk/efo/EFO_0000724\",\n        \"comments\": []\n      },\n      \"comments\": []\n    }\n}\n"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/factors",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PrivStudyId}}",
										"factors"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "11 - Delete Study Factor - Priv - Auth -> 200",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1f14b868-2acd-4341-b555-4da0675dfe09",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Body has factor\"] = responseBody.has('\"factor\":');",
											"var jsonData = JSON.parse(responseBody);",
											"if (jsonData.factor) {",
											"    var item = jsonData.factor",
											"    tests[\"JSON response has key 'factorName'\"] = item.hasOwnProperty('factorName');",
											"    tests[\"JSON response key 'factorName' not Null\"] = item.factorName;",
											"    tests[\"JSON response has key 'factorType'\"] = item.hasOwnProperty('factorType');",
											"    tests[\"JSON response key 'factorType' not Null\"] = item.factorType;",
											"    tests[\"JSON response has key 'comments'\"] = item.hasOwnProperty('comments');",
											"    tests[\"JSON response key 'comments' not Null\"] = item.comments;",
											"}",
											""
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "16cd3cf1-7dc1-4c22-94bd-57995c04f5a5",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/factors?name={{ValidFactorId}}",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PrivStudyId}}",
										"factors"
									],
									"query": [
										{
											"key": "name",
											"value": "{{ValidFactorId}}",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": [
								{
									"id": "6f87c1c9-434d-4877-a702-f91309484e83",
									"name": "Delete Study Contact - Pub - Auth -> 200",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"disabled": false
											},
											{
												"key": "user_token",
												"value": "{{curator}}",
												"disabled": false
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/contacts?email={{ContactID}}",
											"host": [
												"{{ws-py-server}}{{ws-py-port}}"
											],
											"path": [
												"mtbls",
												"ws",
												"studies",
												"{{PubStudyId}}",
												"contacts"
											],
											"query": [
												{
													"key": "email",
													"value": "{{ContactID}}",
													"equals": true
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "http://localhost.ebi.ac.uk:8080",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Content-Length",
											"value": "790",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Tue, 27 Feb 2018 15:31:42 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Server",
											"value": "Werkzeug/0.12.2 Python/3.5.4",
											"name": "Server",
											"description": "A name for the server"
										},
										{
											"key": "Vary",
											"value": "Origin",
											"name": "Vary",
											"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
										}
									],
									"cookie": [],
									"body": "{\n    \"contact\": {\n        \"firstName\": \"John\",\n        \"lastName\": \"Doe\",\n        \"email\": \"doej@a.mail.com\",\n        \"affiliation\": \"EMBL-EBI\",\n        \"comments\": [],\n        \"address\": \"Wellcome Genome Campus, Hinxton, Cambridgeshire, CB10 1SD, UK\",\n        \"fax\": \"012345678902\",\n        \"midInitials\": \"A\",\n        \"phone\": \"012345678901\",\n        \"roles\": [\n            {\n                \"annotationValue\": \"investigator\",\n                \"termSource\": null,\n                \"termAccession\": \"http://www.ebi.ac.uk/efo/EFO_0001739\",\n                \"comments\": []\n            },\n            {\n                \"annotationValue\": \"Bioinformatician\",\n                \"termSource\": null,\n                \"termAccession\": \"\",\n                \"comments\": []\n            }\n        ]\n    }\n}\n"
								},
								{
									"id": "f4dbf500-d5aa-4873-b9b4-30ce10fe74d7",
									"name": "Delete Study Contact - Pub - Auth -> 200",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"disabled": false
											},
											{
												"key": "user_token",
												"value": "{{curator}}",
												"disabled": false
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/contacts?email={{ContactID}}",
											"host": [
												"{{ws-py-server}}{{ws-py-port}}"
											],
											"path": [
												"mtbls",
												"ws",
												"studies",
												"{{PubStudyId}}",
												"contacts"
											],
											"query": [
												{
													"key": "email",
													"value": "{{ContactID}}",
													"equals": true
												}
											]
										}
									},
									"status": "NOT FOUND",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "http://localhost.ebi.ac.uk:8080",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Content-Length",
											"value": "366",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Tue, 27 Feb 2018 15:34:11 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Server",
											"value": "Werkzeug/0.12.2 Python/3.5.4",
											"name": "Server",
											"description": "A name for the server"
										},
										{
											"key": "Vary",
											"value": "Origin",
											"name": "Vary",
											"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
										}
									],
									"cookie": [],
									"body": "{\n    \"message\": \"The requested URL was not found on the server.  If you entered the URL manually please check your spelling and try again. You have requested this URI [/mtbls/ws/studies/MTBLS10/contacts] but did you mean /mtbls/ws/studies/<string:study_id>/contacts or /mtbls/ws/studies/<string:study_id>/contacts/ or /mtbls/ws/studies/<string:study_id>/title ?\"\n}\n"
								}
							]
						},
						{
							"name": "12 - Delete Study Factor - Priv - NoToken -> 401",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6f39b3a9-e55f-4d4c-b879-a7cf452a4c2a",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 401\"] = responseCode.code === 401;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain factors\"] = !(responseBody.has('\"factors\":'));",
											"tests[\"Body does NOT contain factor\"] = !(responseBody.has('\"factor\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/factors?name={{ValidFactorId}}",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PrivStudyId}}",
										"factors"
									],
									"query": [
										{
											"key": "name",
											"value": "{{ValidFactorId}}",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": [
								{
									"id": "8f6e2e16-4bf4-4060-affb-301dbf12726d",
									"name": "Delete Study Contact - Pub - NoToken -> 401",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"disabled": false
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": false
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/contacts?email={{ContactID}}",
											"host": [
												"{{ws-py-server}}{{ws-py-port}}"
											],
											"path": [
												"mtbls",
												"ws",
												"studies",
												"{{PubStudyId}}",
												"contacts"
											],
											"query": [
												{
													"key": "email",
													"value": "{{ContactID}}",
													"equals": true
												}
											]
										}
									},
									"status": "UNAUTHORIZED",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "http://localhost.ebi.ac.uk:8080",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Content-Length",
											"value": "243",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Tue, 27 Feb 2018 15:33:47 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Server",
											"value": "Werkzeug/0.12.2 Python/3.5.4",
											"name": "Server",
											"description": "A name for the server"
										},
										{
											"key": "Vary",
											"value": "Origin",
											"name": "Vary",
											"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
										}
									],
									"cookie": [],
									"body": "{\n    \"message\": \"The server could not verify that you are authorized to access the URL requested.  You either supplied the wrong credentials (e.g. a bad password), or your browser doesn't understand how to supply the credentials required.\"\n}\n"
								}
							]
						},
						{
							"name": "13 - Delete Study Factor - Priv - NoAuth -> 403",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5bdd2232-3cb4-45ca-ad08-05e6ab0eb650",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 403\"] = responseCode.code === 403;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain factors\"] = !(responseBody.has('\"factors\":'));",
											"tests[\"Body does NOT contain factor\"] = !(responseBody.has('\"factor\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{WrongAuth}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/factors?name={{ValidFactorId}}",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PrivStudyId}}",
										"factors"
									],
									"query": [
										{
											"key": "name",
											"value": "{{ValidFactorId}}",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "14 - Delete Study Factor - Priv - Auth - NoParams -> 404",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c082e238-4827-4588-b02c-921d4123d084",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 404\"] = responseCode.code === 404;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain factors\"] = !(responseBody.has('\"factors\":'));",
											"tests[\"Body does NOT contain factor\"] = !(responseBody.has('\"factor\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/factors",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PrivStudyId}}",
										"factors"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "15 - Delete Study Factor - Priv - Auth - NoData -> 404",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "89201f84-c6d7-4ca0-a9a9-9d295afdd584",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 404\"] = responseCode.code === 404;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain factors\"] = !(responseBody.has('\"factors\":'));",
											"tests[\"Body does NOT contain factor\"] = !(responseBody.has('\"factor\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/factors?name=''",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PrivStudyId}}",
										"factors"
									],
									"query": [
										{
											"key": "name",
											"value": "''",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "16 - Delete Study Factor - Priv - Auth - unknown -> 404",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "693f1db1-1218-444f-9278-ebcd9d15cd9b",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 404\"] = responseCode.code === 404;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain factors\"] = !(responseBody.has('\"factors\":'));",
											"tests[\"Body does NOT contain factor\"] = !(responseBody.has('\"factor\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/factors?name={{BadFactorId}}",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PrivStudyId}}",
										"factors"
									],
									"query": [
										{
											"key": "name",
											"value": "{{BadFactorId}}",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				}
			]
		},
		{
			"name": "DELETE Study Design Descriptor",
			"description": null,
			"item": [
				{
					"name": "Pub",
					"description": "",
					"item": [
						{
							"name": "0 - New Study Design Descriptor - Pub - Auth - NewData -> 200",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "597d413e-b1ea-4f5e-a6b6-7f9b07f66c20",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Body has studyDesignDescriptor\"] = responseBody.has('\"studyDesignDescriptor\":');",
											"var jsonData = JSON.parse(responseBody);",
											"if (jsonData.studyDesignDescriptor) {",
											"    var item = jsonData.studyDesignDescriptor",
											"    tests[\"JSON response has key 'annotationValue'\"] = item.hasOwnProperty('annotationValue');",
											"    tests[\"JSON response key 'annotationValue' not Null\"] = item.annotationValue;",
											"    tests[\"JSON response has key 'termSource'\"] = item.hasOwnProperty('termSource');",
											"    tests[\"JSON response key 'termSource' not Null\"] = item.termSource;",
											"    tests[\"JSON response has key 'termAccession'\"] = item.hasOwnProperty('termAccession');",
											"    tests[\"JSON response key 'termAccession' not Null\"] = item.termAccession;",
											"    tests[\"JSON response has key 'comments'\"] = item.hasOwnProperty('comments');",
											"    tests[\"JSON response key 'comments' not Null\"] = item.comments;",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{  \n   \"studyDesignDescriptor\":{  \n      \"annotationValue\":\"Test-time-series-design\",\n      \"termSource\":{  \n         \"name\":\"EFO\",\n         \"file\":\"http://data.bioontology.org/ontologies/EFO\",\n         \"version\":\"132\",\n         \"description\":\"Experimental Factor Ontology\",\n         \"comments\":[]\n      },\n      \"termAccession\":\"http://www.ebi.ac.uk/efo/EFO_0001779\",\n      \"comments\":[\n\t{\n      \t  \"name\": \"Updated\",\n      \t  \"value\": \"Updated with MtblsWs-Py\"\n      \t}\n      ]\n   }\n}"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/descriptors",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PubStudyId}}",
										"descriptors"
									]
								},
								"description": null
							},
							"response": [
								{
									"id": "211e13b1-47b4-477d-819e-3644d89539ab",
									"name": "New Study Contact - Pub - Auth - NewData -> 200",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"disabled": false
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": false
											},
											{
												"key": "user_token",
												"value": "{{curator}}",
												"disabled": false
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"contact\": {\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\",\n    \"email\": \"doej@a.mail.com\",\n    \"affiliation\": \"EMBL-EBI\",\n    \"comments\": [],\n    \"address\": \"Wellcome Genome Campus, Hinxton, Cambridgeshire, CB10 1SD, UK\",\n    \"fax\": \"012345678902\",\n    \"midInitials\": \"A\",\n    \"phone\": \"012345678901\",\n    \"roles\": [\n      {\n        \"annotationValue\": \"investigator\",\n        \"termSource\": null,\n        \"termAccession\": \"http://www.ebi.ac.uk/efo/EFO_0001739\",\n        \"comments\": []\n      },\n      {\n        \"annotationValue\": \"Bioinformatician\",\n        \"termSource\": null,\n        \"termAccession\": \"\",\n        \"comments\": []\n      }\n    ]\n  }\n}\n"
										},
										"url": {
											"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/contacts",
											"host": [
												"{{ws-py-server}}{{ws-py-port}}"
											],
											"path": [
												"mtbls",
												"ws",
												"studies",
												"{{PubStudyId}}",
												"contacts"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "http://localhost.ebi.ac.uk:8080",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Content-Length",
											"value": "790",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Tue, 27 Feb 2018 14:46:35 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Server",
											"value": "Werkzeug/0.12.2 Python/3.5.4",
											"name": "Server",
											"description": "A name for the server"
										},
										{
											"key": "Vary",
											"value": "Origin",
											"name": "Vary",
											"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
										}
									],
									"cookie": [],
									"body": "{\n    \"contact\": {\n        \"firstName\": \"John\",\n        \"lastName\": \"Doe\",\n        \"email\": \"doej@a.mail.com\",\n        \"affiliation\": \"EMBL-EBI\",\n        \"comments\": [],\n        \"address\": \"Wellcome Genome Campus, Hinxton, Cambridgeshire, CB10 1SD, UK\",\n        \"fax\": \"012345678902\",\n        \"midInitials\": \"A\",\n        \"phone\": \"012345678901\",\n        \"roles\": [\n            {\n                \"annotationValue\": \"investigator\",\n                \"termSource\": null,\n                \"termAccession\": \"http://www.ebi.ac.uk/efo/EFO_0001739\",\n                \"comments\": []\n            },\n            {\n                \"annotationValue\": \"Bioinformatician\",\n                \"termSource\": null,\n                \"termAccession\": \"\",\n                \"comments\": []\n            }\n        ]\n    }\n}\n"
								}
							]
						},
						{
							"name": "1 - Delete Study Design Descriptor - Pub - Auth -> 200",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bff7d77b-3a46-4555-879e-47109877b18f",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Body has studyDesignDescriptor\"] = responseBody.has('\"studyDesignDescriptor\":');",
											"var jsonData = JSON.parse(responseBody);",
											"if (jsonData.studyDesignDescriptor) {",
											"    var item = jsonData.studyDesignDescriptor",
											"    tests[\"JSON response has key 'annotationValue'\"] = item.hasOwnProperty('annotationValue');",
											"    tests[\"JSON response key 'annotationValue' not Null\"] = item.annotationValue;",
											"    tests[\"JSON response has key 'termSource'\"] = item.hasOwnProperty('termSource');",
											"    tests[\"JSON response key 'termSource' not Null\"] = item.termSource;",
											"    tests[\"JSON response has key 'termAccession'\"] = item.hasOwnProperty('termAccession');",
											"    tests[\"JSON response key 'termAccession' not Null\"] = item.termAccession;",
											"    tests[\"JSON response has key 'comments'\"] = item.hasOwnProperty('comments');",
											"    tests[\"JSON response key 'comments' not Null\"] = item.comments;",
											"}",
											""
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "16cd3cf1-7dc1-4c22-94bd-57995c04f5a5",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/descriptors?annotationValue={{ValidDescriptorId}}",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PubStudyId}}",
										"descriptors"
									],
									"query": [
										{
											"key": "annotationValue",
											"value": "{{ValidDescriptorId}}",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": [
								{
									"id": "c94865bd-0cda-409e-b554-a606338229e7",
									"name": "Delete Study Contact - Pub - Auth -> 200",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"disabled": false
											},
											{
												"key": "user_token",
												"value": "{{curator}}",
												"disabled": false
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/contacts?email={{ContactID}}",
											"host": [
												"{{ws-py-server}}{{ws-py-port}}"
											],
											"path": [
												"mtbls",
												"ws",
												"studies",
												"{{PubStudyId}}",
												"contacts"
											],
											"query": [
												{
													"key": "email",
													"value": "{{ContactID}}",
													"equals": true
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "http://localhost.ebi.ac.uk:8080",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Content-Length",
											"value": "790",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Tue, 27 Feb 2018 15:31:42 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Server",
											"value": "Werkzeug/0.12.2 Python/3.5.4",
											"name": "Server",
											"description": "A name for the server"
										},
										{
											"key": "Vary",
											"value": "Origin",
											"name": "Vary",
											"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
										}
									],
									"cookie": [],
									"body": "{\n    \"contact\": {\n        \"firstName\": \"John\",\n        \"lastName\": \"Doe\",\n        \"email\": \"doej@a.mail.com\",\n        \"affiliation\": \"EMBL-EBI\",\n        \"comments\": [],\n        \"address\": \"Wellcome Genome Campus, Hinxton, Cambridgeshire, CB10 1SD, UK\",\n        \"fax\": \"012345678902\",\n        \"midInitials\": \"A\",\n        \"phone\": \"012345678901\",\n        \"roles\": [\n            {\n                \"annotationValue\": \"investigator\",\n                \"termSource\": null,\n                \"termAccession\": \"http://www.ebi.ac.uk/efo/EFO_0001739\",\n                \"comments\": []\n            },\n            {\n                \"annotationValue\": \"Bioinformatician\",\n                \"termSource\": null,\n                \"termAccession\": \"\",\n                \"comments\": []\n            }\n        ]\n    }\n}\n"
								},
								{
									"id": "3aca422e-bcd2-4d4e-8701-a3f487742fb5",
									"name": "Delete Study Contact - Pub - Auth -> 200",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"disabled": false
											},
											{
												"key": "user_token",
												"value": "{{curator}}",
												"disabled": false
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/contacts?email={{ContactID}}",
											"host": [
												"{{ws-py-server}}{{ws-py-port}}"
											],
											"path": [
												"mtbls",
												"ws",
												"studies",
												"{{PubStudyId}}",
												"contacts"
											],
											"query": [
												{
													"key": "email",
													"value": "{{ContactID}}",
													"equals": true
												}
											]
										}
									},
									"status": "NOT FOUND",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "http://localhost.ebi.ac.uk:8080",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Content-Length",
											"value": "366",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Tue, 27 Feb 2018 15:34:11 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Server",
											"value": "Werkzeug/0.12.2 Python/3.5.4",
											"name": "Server",
											"description": "A name for the server"
										},
										{
											"key": "Vary",
											"value": "Origin",
											"name": "Vary",
											"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
										}
									],
									"cookie": [],
									"body": "{\n    \"message\": \"The requested URL was not found on the server.  If you entered the URL manually please check your spelling and try again. You have requested this URI [/mtbls/ws/studies/MTBLS10/contacts] but did you mean /mtbls/ws/studies/<string:study_id>/contacts or /mtbls/ws/studies/<string:study_id>/contacts/ or /mtbls/ws/studies/<string:study_id>/title ?\"\n}\n"
								}
							]
						},
						{
							"name": "2 - Delete Study Design Descriptor - Pub - NoToken -> 401",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e491694f-46bd-4660-a3b2-75fe6464fb09",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 401\"] = responseCode.code === 401;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain studyDesignDescriptor\"] = !(responseBody.has('\"studyDesignDescriptor\":'));",
											"tests[\"Body does NOT contain studyDesignDescriptor\"] = !(responseBody.has('\"studyDesignDescriptor\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/descriptors?annotationValue={{ValidDescriptorId}}",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PubStudyId}}",
										"descriptors"
									],
									"query": [
										{
											"key": "annotationValue",
											"value": "{{ValidDescriptorId}}",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": [
								{
									"id": "17a01a73-4d72-4990-87fa-f7ea6e13c778",
									"name": "Delete Study Contact - Pub - NoToken -> 401",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"disabled": false
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": false
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/contacts?email={{ContactID}}",
											"host": [
												"{{ws-py-server}}{{ws-py-port}}"
											],
											"path": [
												"mtbls",
												"ws",
												"studies",
												"{{PubStudyId}}",
												"contacts"
											],
											"query": [
												{
													"key": "email",
													"value": "{{ContactID}}",
													"equals": true
												}
											]
										}
									},
									"status": "UNAUTHORIZED",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "http://localhost.ebi.ac.uk:8080",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Content-Length",
											"value": "243",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Tue, 27 Feb 2018 15:33:47 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Server",
											"value": "Werkzeug/0.12.2 Python/3.5.4",
											"name": "Server",
											"description": "A name for the server"
										},
										{
											"key": "Vary",
											"value": "Origin",
											"name": "Vary",
											"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
										}
									],
									"cookie": [],
									"body": "{\n    \"message\": \"The server could not verify that you are authorized to access the URL requested.  You either supplied the wrong credentials (e.g. a bad password), or your browser doesn't understand how to supply the credentials required.\"\n}\n"
								}
							]
						},
						{
							"name": "3 - Delete Study Design Descriptor - Pub - NoAuth -> 403",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1e58ed13-db33-4532-9974-af3c4dd3e834",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 403\"] = responseCode.code === 403;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain studyDesignDescriptor\"] = !(responseBody.has('\"studyDesignDescriptor\":'));",
											"tests[\"Body does NOT contain studyDesignDescriptor\"] = !(responseBody.has('\"studyDesignDescriptor\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{WrongAuth}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/descriptors?annotationValue={{ValidDescriptorId}}",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PubStudyId}}",
										"descriptors"
									],
									"query": [
										{
											"key": "annotationValue",
											"value": "{{ValidDescriptorId}}",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "4 - Delete Study Design Descriptor - Pub - Auth - NoParams -> 404",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b9514d91-1fda-4039-9b0b-7518bbb7d8f7",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 404\"] = responseCode.code === 404;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain studyDesignDescriptor\"] = !(responseBody.has('\"studyDesignDescriptor\":'));",
											"tests[\"Body does NOT contain studyDesignDescriptor\"] = !(responseBody.has('\"studyDesignDescriptor\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/descriptors",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PubStudyId}}",
										"descriptors"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "5 - Delete Study Design Descriptor - Pub - Auth - NoData -> 404",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0651c4ca-3b59-4a47-9534-5505448dd5ae",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 404\"] = responseCode.code === 404;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain studyDesignDescriptor\"] = !(responseBody.has('\"studyDesignDescriptor\":'));",
											"tests[\"Body does NOT contain studyDesignDescriptor\"] = !(responseBody.has('\"studyDesignDescriptor\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/descriptors?annotationValue=''",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PubStudyId}}",
										"descriptors"
									],
									"query": [
										{
											"key": "annotationValue",
											"value": "''",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "6 - Delete Study Design Descriptor - Pub - Auth - unknown -> 404",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "446d32e2-5742-4ff1-9fd0-38d6c06473ff",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 404\"] = responseCode.code === 404;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain studyDesignDescriptor\"] = !(responseBody.has('\"studyDesignDescriptor\":'));",
											"tests[\"Body does NOT contain studyDesignDescriptor\"] = !(responseBody.has('\"studyDesignDescriptor\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/descriptors?annotationValue={{BadDescriptorId}}",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PubStudyId}}",
										"descriptors"
									],
									"query": [
										{
											"key": "annotationValue",
											"value": "{{BadDescriptorId}}",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Priv",
					"description": "",
					"item": [
						{
							"name": "10 - New Study Design Descriptor - Priv - Auth - NewData -> 200",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ba54ee83-f9ec-46ac-b2a2-9dcb2c13bc31",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Body has studyDesignDescriptor\"] = responseBody.has('\"studyDesignDescriptor\":');",
											"var jsonData = JSON.parse(responseBody);",
											"if (jsonData.studyDesignDescriptor) {",
											"    var item = jsonData.studyDesignDescriptor",
											"    tests[\"JSON response has key 'annotationValue'\"] = item.hasOwnProperty('annotationValue');",
											"    tests[\"JSON response key 'annotationValue' not Null\"] = item.annotationValue;",
											"    tests[\"JSON response has key 'termSource'\"] = item.hasOwnProperty('termSource');",
											"    tests[\"JSON response key 'termSource' not Null\"] = item.termSource;",
											"    tests[\"JSON response has key 'termAccession'\"] = item.hasOwnProperty('termAccession');",
											"    tests[\"JSON response key 'termAccession' not Null\"] = item.termAccession;",
											"    tests[\"JSON response has key 'comments'\"] = item.hasOwnProperty('comments');",
											"    tests[\"JSON response key 'comments' not Null\"] = item.comments;",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{  \n   \"studyDesignDescriptor\":{  \n      \"annotationValue\":\"Test-time-series-design\",\n      \"termSource\":{  \n         \"name\":\"EFO\",\n         \"file\":\"http://data.bioontology.org/ontologies/EFO\",\n         \"version\":\"132\",\n         \"description\":\"Experimental Factor Ontology\",\n         \"comments\":[]\n      },\n      \"termAccession\":\"http://www.ebi.ac.uk/efo/EFO_0001779\",\n      \"comments\":[\n\t{\n      \t  \"name\": \"Updated\",\n      \t  \"value\": \"Updated with MtblsWs-Py\"\n      \t}\n      ]\n   }\n}"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/descriptors",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PrivStudyId}}",
										"descriptors"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "11 - Delete Study Design Descriptor - Priv - Auth -> 200",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8137268b-e3b6-47ff-9432-dbb93a1c479b",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Body has studyDesignDescriptor\"] = responseBody.has('\"studyDesignDescriptor\":');",
											"var jsonData = JSON.parse(responseBody);",
											"if (jsonData.studyDesignDescriptor) {",
											"    var item = jsonData.studyDesignDescriptor",
											"    tests[\"JSON response has key 'annotationValue'\"] = item.hasOwnProperty('annotationValue');",
											"    tests[\"JSON response key 'annotationValue' not Null\"] = item.annotationValue;",
											"    tests[\"JSON response has key 'termSource'\"] = item.hasOwnProperty('termSource');",
											"    tests[\"JSON response key 'termSource' not Null\"] = item.termSource;",
											"    tests[\"JSON response has key 'termAccession'\"] = item.hasOwnProperty('termAccession');",
											"    tests[\"JSON response key 'termAccession' not Null\"] = item.termAccession;",
											"    tests[\"JSON response has key 'comments'\"] = item.hasOwnProperty('comments');",
											"    tests[\"JSON response key 'comments' not Null\"] = item.comments;",
											"}",
											""
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "16cd3cf1-7dc1-4c22-94bd-57995c04f5a5",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/descriptors?annotationValue={{ValidDescriptorId}}",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PrivStudyId}}",
										"descriptors"
									],
									"query": [
										{
											"key": "annotationValue",
											"value": "{{ValidDescriptorId}}",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": [
								{
									"id": "3611adb4-d959-4504-935f-91227d7fdddb",
									"name": "Delete Study Contact - Pub - Auth -> 200",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"disabled": false
											},
											{
												"key": "user_token",
												"value": "{{curator}}",
												"disabled": false
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/contacts?email={{ContactID}}",
											"host": [
												"{{ws-py-server}}{{ws-py-port}}"
											],
											"path": [
												"mtbls",
												"ws",
												"studies",
												"{{PubStudyId}}",
												"contacts"
											],
											"query": [
												{
													"key": "email",
													"value": "{{ContactID}}",
													"equals": true
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "http://localhost.ebi.ac.uk:8080",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Content-Length",
											"value": "790",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Tue, 27 Feb 2018 15:31:42 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Server",
											"value": "Werkzeug/0.12.2 Python/3.5.4",
											"name": "Server",
											"description": "A name for the server"
										},
										{
											"key": "Vary",
											"value": "Origin",
											"name": "Vary",
											"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
										}
									],
									"cookie": [],
									"body": "{\n    \"contact\": {\n        \"firstName\": \"John\",\n        \"lastName\": \"Doe\",\n        \"email\": \"doej@a.mail.com\",\n        \"affiliation\": \"EMBL-EBI\",\n        \"comments\": [],\n        \"address\": \"Wellcome Genome Campus, Hinxton, Cambridgeshire, CB10 1SD, UK\",\n        \"fax\": \"012345678902\",\n        \"midInitials\": \"A\",\n        \"phone\": \"012345678901\",\n        \"roles\": [\n            {\n                \"annotationValue\": \"investigator\",\n                \"termSource\": null,\n                \"termAccession\": \"http://www.ebi.ac.uk/efo/EFO_0001739\",\n                \"comments\": []\n            },\n            {\n                \"annotationValue\": \"Bioinformatician\",\n                \"termSource\": null,\n                \"termAccession\": \"\",\n                \"comments\": []\n            }\n        ]\n    }\n}\n"
								},
								{
									"id": "7e42094a-eb3a-4753-adfb-e1652e37467a",
									"name": "Delete Study Contact - Pub - Auth -> 200",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"disabled": false
											},
											{
												"key": "user_token",
												"value": "{{curator}}",
												"disabled": false
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/contacts?email={{ContactID}}",
											"host": [
												"{{ws-py-server}}{{ws-py-port}}"
											],
											"path": [
												"mtbls",
												"ws",
												"studies",
												"{{PubStudyId}}",
												"contacts"
											],
											"query": [
												{
													"key": "email",
													"value": "{{ContactID}}",
													"equals": true
												}
											]
										}
									},
									"status": "NOT FOUND",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "http://localhost.ebi.ac.uk:8080",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Content-Length",
											"value": "366",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Tue, 27 Feb 2018 15:34:11 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Server",
											"value": "Werkzeug/0.12.2 Python/3.5.4",
											"name": "Server",
											"description": "A name for the server"
										},
										{
											"key": "Vary",
											"value": "Origin",
											"name": "Vary",
											"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
										}
									],
									"cookie": [],
									"body": "{\n    \"message\": \"The requested URL was not found on the server.  If you entered the URL manually please check your spelling and try again. You have requested this URI [/mtbls/ws/studies/MTBLS10/contacts] but did you mean /mtbls/ws/studies/<string:study_id>/contacts or /mtbls/ws/studies/<string:study_id>/contacts/ or /mtbls/ws/studies/<string:study_id>/title ?\"\n}\n"
								}
							]
						},
						{
							"name": "12 - Delete Study Design Descriptor - Priv - NoToken -> 401",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7e4b902b-079b-467c-ba49-9c22afc0f308",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 401\"] = responseCode.code === 401;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain studyDesignDescriptor\"] = !(responseBody.has('\"studyDesignDescriptor\":'));",
											"tests[\"Body does NOT contain studyDesignDescriptor\"] = !(responseBody.has('\"studyDesignDescriptor\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/descriptors?annotationValue={{ValidDescriptorId}}",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PrivStudyId}}",
										"descriptors"
									],
									"query": [
										{
											"key": "annotationValue",
											"value": "{{ValidDescriptorId}}",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": [
								{
									"id": "d29e51e1-d8b8-4280-b117-639a24a4b07f",
									"name": "Delete Study Contact - Pub - NoToken -> 401",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"disabled": false
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": false
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/contacts?email={{ContactID}}",
											"host": [
												"{{ws-py-server}}{{ws-py-port}}"
											],
											"path": [
												"mtbls",
												"ws",
												"studies",
												"{{PubStudyId}}",
												"contacts"
											],
											"query": [
												{
													"key": "email",
													"value": "{{ContactID}}",
													"equals": true
												}
											]
										}
									},
									"status": "UNAUTHORIZED",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "http://localhost.ebi.ac.uk:8080",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Content-Length",
											"value": "243",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Tue, 27 Feb 2018 15:33:47 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Server",
											"value": "Werkzeug/0.12.2 Python/3.5.4",
											"name": "Server",
											"description": "A name for the server"
										},
										{
											"key": "Vary",
											"value": "Origin",
											"name": "Vary",
											"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
										}
									],
									"cookie": [],
									"body": "{\n    \"message\": \"The server could not verify that you are authorized to access the URL requested.  You either supplied the wrong credentials (e.g. a bad password), or your browser doesn't understand how to supply the credentials required.\"\n}\n"
								}
							]
						},
						{
							"name": "13 - Delete Study Design Descriptor - Priv - NoAuth -> 403",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "919d5dce-0343-4e3c-bb80-60baafc277a4",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 403\"] = responseCode.code === 403;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain studyDesignDescriptor\"] = !(responseBody.has('\"studyDesignDescriptor\":'));",
											"tests[\"Body does NOT contain studyDesignDescriptor\"] = !(responseBody.has('\"studyDesignDescriptor\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{WrongAuth}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/descriptors?annotationValue={{ValidDescriptorId}}",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PrivStudyId}}",
										"descriptors"
									],
									"query": [
										{
											"key": "annotationValue",
											"value": "{{ValidDescriptorId}}",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "14 - Delete Study Design Descriptor - Priv - Auth - NoParams -> 404",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5ff97a25-7358-4342-a2d6-28bd9de04794",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 404\"] = responseCode.code === 404;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain studyDesignDescriptor\"] = !(responseBody.has('\"studyDesignDescriptor\":'));",
											"tests[\"Body does NOT contain studyDesignDescriptor\"] = !(responseBody.has('\"studyDesignDescriptor\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/descriptors",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PrivStudyId}}",
										"descriptors"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "15 - Delete Study Design Descriptor - Priv - Auth - NoData -> 404",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "292334b5-b8c2-407a-ab83-5d8b4b5afd5e",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 404\"] = responseCode.code === 404;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain studyDesignDescriptor\"] = !(responseBody.has('\"studyDesignDescriptor\":'));",
											"tests[\"Body does NOT contain studyDesignDescriptor\"] = !(responseBody.has('\"studyDesignDescriptor\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/descriptors?annotationValue=''",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PrivStudyId}}",
										"descriptors"
									],
									"query": [
										{
											"key": "annotationValue",
											"value": "''",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "16 - Delete Study Design Descriptor - Priv - Auth - unknown -> 404",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "693f1db1-1218-444f-9278-ebcd9d15cd9b",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 404\"] = responseCode.code === 404;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain factors\"] = !(responseBody.has('\"factors\":'));",
											"tests[\"Body does NOT contain factor\"] = !(responseBody.has('\"factor\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/factors?name={{BadFactorId}}",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PrivStudyId}}",
										"factors"
									],
									"query": [
										{
											"key": "name",
											"value": "{{BadFactorId}}",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				}
			]
		},
		{
			"name": "DELETE Study Publication",
			"description": null,
			"item": [
				{
					"name": "Pub",
					"description": "",
					"item": [
						{
							"name": "0 - New Study Publication - Pub - Auth - NewData -> 200",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a688e45d-0da2-47a5-acc5-7b622dd46023",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Body has publication\"] = responseBody.has('\"publication\":');",
											"var jsonData = JSON.parse(responseBody);",
											"if (jsonData.publication) {",
											"    var item = jsonData.publication;",
											"    tests[\"JSON response has key 'title'\"] = item.hasOwnProperty('title');",
											"    tests[\"JSON response key 'title' not Null\"] = item.title;",
											"    tests[\"JSON response has key 'authorList'\"] = item.hasOwnProperty('authorList');",
											"    tests[\"JSON response key 'authorList' not Null\"] = item.authorList;",
											"    tests[\"JSON response has key 'pubMedID'\"] = item.hasOwnProperty('pubMedID');",
											"    tests[\"JSON response key 'pubMedID' not Null\"] = item.pubMedID;",
											"    tests[\"JSON response has key 'doi'\"] = item.hasOwnProperty('doi');",
											"    tests[\"JSON response key 'doi' not Null\"] = item.doi;",
											"    if (item.status) {",
											"        var item = item.status",
											"        tests[\"JSON response has key 'annotationValue'\"] = item.hasOwnProperty('annotationValue');",
											"        tests[\"JSON response key 'annotationValue' not Null\"] = item.annotationValue;",
											"        tests[\"JSON response has key 'termSource'\"] = item.hasOwnProperty('termSource');",
											"        // tests[\"JSON response key 'termSource' not Null\"] = item.termSource;",
											"        tests[\"JSON response has key 'termAccession'\"] = item.hasOwnProperty('termAccession');",
											"        // tests[\"JSON response key 'termAccession' not Null\"] = item.termAccession;",
											"        tests[\"JSON response has key 'comments'\"] = item.hasOwnProperty('comments');",
											"        tests[\"JSON response key 'comments' not Null\"] = item.comments;",
											"    }",
											"}",
											"// Body",
											"tests[\"Body has publication\"] = responseBody.has('\"publication\":');",
											"var jsonData = JSON.parse(responseBody);",
											"if (jsonData.publication) {",
											"    var item = jsonData.publication;",
											"    tests[\"JSON response has key 'title'\"] = item.hasOwnProperty('title');",
											"    tests[\"JSON response key 'title' not Null\"] = item.title;",
											"    tests[\"JSON response has key 'authorList'\"] = item.hasOwnProperty('authorList');",
											"    tests[\"JSON response key 'authorList' not Null\"] = item.authorList;",
											"    tests[\"JSON response has key 'pubMedID'\"] = item.hasOwnProperty('pubMedID');",
											"    tests[\"JSON response key 'pubMedID' not Null\"] = item.pubMedID;",
											"    tests[\"JSON response has key 'doi'\"] = item.hasOwnProperty('doi');",
											"    tests[\"JSON response key 'doi' not Null\"] = item.doi;",
											"    if (item.status) {",
											"        var item = item.status",
											"        tests[\"JSON response has key 'annotationValue'\"] = item.hasOwnProperty('annotationValue');",
											"        tests[\"JSON response key 'annotationValue' not Null\"] = item.annotationValue;",
											"        tests[\"JSON response has key 'termSource'\"] = item.hasOwnProperty('termSource');",
											"        // tests[\"JSON response key 'termSource' not Null\"] = item.termSource;",
											"        tests[\"JSON response has key 'termAccession'\"] = item.hasOwnProperty('termAccession');",
											"        // tests[\"JSON response key 'termAccession' not Null\"] = item.termAccession;",
											"        tests[\"JSON response has key 'comments'\"] = item.hasOwnProperty('comments');",
											"        tests[\"JSON response key 'comments' not Null\"] = item.comments;",
											"    }",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"publication\": {\n    \"title\": \"Test-Publication-Title\",\n    \"authorList\": \"Doe J, Smith B\",\n    \"pubMedID\": \"12345678\",\n    \"doi\": \"10.1234/12345678\",\n    \"status\": {\n      \"annotationValue\": \"Published\",\n      \"termSource\": null,\n      \"termAccession\": \"\",\n      \"comments\": []\n    },\n    \"comments\": []\n  }\n}\n"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/publications",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PubStudyId}}",
										"publications"
									]
								},
								"description": null
							},
							"response": [
								{
									"id": "1a7e599b-699b-454a-bfe1-65de54007c50",
									"name": "New Study Contact - Pub - Auth - NewData -> 200",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"disabled": false
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": false
											},
											{
												"key": "user_token",
												"value": "{{curator}}",
												"disabled": false
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"contact\": {\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\",\n    \"email\": \"doej@a.mail.com\",\n    \"affiliation\": \"EMBL-EBI\",\n    \"comments\": [],\n    \"address\": \"Wellcome Genome Campus, Hinxton, Cambridgeshire, CB10 1SD, UK\",\n    \"fax\": \"012345678902\",\n    \"midInitials\": \"A\",\n    \"phone\": \"012345678901\",\n    \"roles\": [\n      {\n        \"annotationValue\": \"investigator\",\n        \"termSource\": null,\n        \"termAccession\": \"http://www.ebi.ac.uk/efo/EFO_0001739\",\n        \"comments\": []\n      },\n      {\n        \"annotationValue\": \"Bioinformatician\",\n        \"termSource\": null,\n        \"termAccession\": \"\",\n        \"comments\": []\n      }\n    ]\n  }\n}\n"
										},
										"url": {
											"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/contacts",
											"host": [
												"{{ws-py-server}}{{ws-py-port}}"
											],
											"path": [
												"mtbls",
												"ws",
												"studies",
												"{{PubStudyId}}",
												"contacts"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "http://localhost.ebi.ac.uk:8080",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Content-Length",
											"value": "790",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Tue, 27 Feb 2018 14:46:35 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Server",
											"value": "Werkzeug/0.12.2 Python/3.5.4",
											"name": "Server",
											"description": "A name for the server"
										},
										{
											"key": "Vary",
											"value": "Origin",
											"name": "Vary",
											"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
										}
									],
									"cookie": [],
									"body": "{\n    \"contact\": {\n        \"firstName\": \"John\",\n        \"lastName\": \"Doe\",\n        \"email\": \"doej@a.mail.com\",\n        \"affiliation\": \"EMBL-EBI\",\n        \"comments\": [],\n        \"address\": \"Wellcome Genome Campus, Hinxton, Cambridgeshire, CB10 1SD, UK\",\n        \"fax\": \"012345678902\",\n        \"midInitials\": \"A\",\n        \"phone\": \"012345678901\",\n        \"roles\": [\n            {\n                \"annotationValue\": \"investigator\",\n                \"termSource\": null,\n                \"termAccession\": \"http://www.ebi.ac.uk/efo/EFO_0001739\",\n                \"comments\": []\n            },\n            {\n                \"annotationValue\": \"Bioinformatician\",\n                \"termSource\": null,\n                \"termAccession\": \"\",\n                \"comments\": []\n            }\n        ]\n    }\n}\n"
								}
							]
						},
						{
							"name": "1 - Delete Study Publication - Pub - Auth -> 200",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c0a675d6-d0cf-4692-a577-f253dae2e1a4",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Body has publication\"] = responseBody.has('\"publication\":');",
											"var jsonData = JSON.parse(responseBody);",
											"if (jsonData.publication) {",
											"    var item = jsonData.publication;",
											"    tests[\"JSON response has key 'title'\"] = item.hasOwnProperty('title');",
											"    tests[\"JSON response key 'title' not Null\"] = item.title;",
											"    tests[\"JSON response has key 'authorList'\"] = item.hasOwnProperty('authorList');",
											"    tests[\"JSON response key 'authorList' not Null\"] = item.authorList;",
											"    tests[\"JSON response has key 'pubMedID'\"] = item.hasOwnProperty('pubMedID');",
											"    tests[\"JSON response key 'pubMedID' not Null\"] = item.pubMedID;",
											"    tests[\"JSON response has key 'doi'\"] = item.hasOwnProperty('doi');",
											"    tests[\"JSON response key 'doi' not Null\"] = item.doi;",
											"    if (item.status) {",
											"        var item = item.status",
											"        tests[\"JSON response has key 'annotationValue'\"] = item.hasOwnProperty('annotationValue');",
											"        tests[\"JSON response key 'annotationValue' not Null\"] = item.annotationValue;",
											"        tests[\"JSON response has key 'termSource'\"] = item.hasOwnProperty('termSource');",
											"        // tests[\"JSON response key 'termSource' not Null\"] = item.termSource;",
											"        tests[\"JSON response has key 'termAccession'\"] = item.hasOwnProperty('termAccession');",
											"        // tests[\"JSON response key 'termAccession' not Null\"] = item.termAccession;",
											"        tests[\"JSON response has key 'comments'\"] = item.hasOwnProperty('comments');",
											"        tests[\"JSON response key 'comments' not Null\"] = item.comments;",
											"    }",
											"}",
											""
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "16cd3cf1-7dc1-4c22-94bd-57995c04f5a5",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/publications?title={{ValidPublicationId}}",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PubStudyId}}",
										"publications"
									],
									"query": [
										{
											"key": "title",
											"value": "{{ValidPublicationId}}",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": [
								{
									"id": "43e1db3b-afe5-4188-9902-6bde7c77a8a5",
									"name": "Delete Study Contact - Pub - Auth -> 200",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"disabled": false
											},
											{
												"key": "user_token",
												"value": "{{curator}}",
												"disabled": false
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/contacts?email={{ContactID}}",
											"host": [
												"{{ws-py-server}}{{ws-py-port}}"
											],
											"path": [
												"mtbls",
												"ws",
												"studies",
												"{{PubStudyId}}",
												"contacts"
											],
											"query": [
												{
													"key": "email",
													"value": "{{ContactID}}",
													"equals": true
												}
											]
										}
									},
									"status": "NOT FOUND",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "http://localhost.ebi.ac.uk:8080",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Content-Length",
											"value": "366",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Tue, 27 Feb 2018 15:34:11 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Server",
											"value": "Werkzeug/0.12.2 Python/3.5.4",
											"name": "Server",
											"description": "A name for the server"
										},
										{
											"key": "Vary",
											"value": "Origin",
											"name": "Vary",
											"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
										}
									],
									"cookie": [],
									"body": "{\n    \"message\": \"The requested URL was not found on the server.  If you entered the URL manually please check your spelling and try again. You have requested this URI [/mtbls/ws/studies/MTBLS10/contacts] but did you mean /mtbls/ws/studies/<string:study_id>/contacts or /mtbls/ws/studies/<string:study_id>/contacts/ or /mtbls/ws/studies/<string:study_id>/title ?\"\n}\n"
								},
								{
									"id": "95fac76e-8d8f-433b-bcc7-dd5dcc281400",
									"name": "Delete Study Contact - Pub - Auth -> 200",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"disabled": false
											},
											{
												"key": "user_token",
												"value": "{{curator}}",
												"disabled": false
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/contacts?email={{ContactID}}",
											"host": [
												"{{ws-py-server}}{{ws-py-port}}"
											],
											"path": [
												"mtbls",
												"ws",
												"studies",
												"{{PubStudyId}}",
												"contacts"
											],
											"query": [
												{
													"key": "email",
													"value": "{{ContactID}}",
													"equals": true
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "http://localhost.ebi.ac.uk:8080",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Content-Length",
											"value": "790",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Tue, 27 Feb 2018 15:31:42 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Server",
											"value": "Werkzeug/0.12.2 Python/3.5.4",
											"name": "Server",
											"description": "A name for the server"
										},
										{
											"key": "Vary",
											"value": "Origin",
											"name": "Vary",
											"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
										}
									],
									"cookie": [],
									"body": "{\n    \"contact\": {\n        \"firstName\": \"John\",\n        \"lastName\": \"Doe\",\n        \"email\": \"doej@a.mail.com\",\n        \"affiliation\": \"EMBL-EBI\",\n        \"comments\": [],\n        \"address\": \"Wellcome Genome Campus, Hinxton, Cambridgeshire, CB10 1SD, UK\",\n        \"fax\": \"012345678902\",\n        \"midInitials\": \"A\",\n        \"phone\": \"012345678901\",\n        \"roles\": [\n            {\n                \"annotationValue\": \"investigator\",\n                \"termSource\": null,\n                \"termAccession\": \"http://www.ebi.ac.uk/efo/EFO_0001739\",\n                \"comments\": []\n            },\n            {\n                \"annotationValue\": \"Bioinformatician\",\n                \"termSource\": null,\n                \"termAccession\": \"\",\n                \"comments\": []\n            }\n        ]\n    }\n}\n"
								}
							]
						},
						{
							"name": "2 - Delete Study Publication - Pub - NoToken -> 401",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a16bc784-6023-4f0f-bb35-be3e8c4e57f9",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 401\"] = responseCode.code === 401;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain publications\"] = !(responseBody.has('\"publications\":'));",
											"tests[\"Body does NOT contain publication\"] = !(responseBody.has('\"publication\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/publications?title={{ValidPublicationId}}",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PubStudyId}}",
										"publications"
									],
									"query": [
										{
											"key": "title",
											"value": "{{ValidPublicationId}}",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": [
								{
									"id": "3eb175d0-3139-490a-b571-bb9dd9d35174",
									"name": "Delete Study Contact - Pub - NoToken -> 401",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"disabled": false
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": false
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/contacts?email={{ContactID}}",
											"host": [
												"{{ws-py-server}}{{ws-py-port}}"
											],
											"path": [
												"mtbls",
												"ws",
												"studies",
												"{{PubStudyId}}",
												"contacts"
											],
											"query": [
												{
													"key": "email",
													"value": "{{ContactID}}",
													"equals": true
												}
											]
										}
									},
									"status": "UNAUTHORIZED",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "http://localhost.ebi.ac.uk:8080",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Content-Length",
											"value": "243",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Tue, 27 Feb 2018 15:33:47 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Server",
											"value": "Werkzeug/0.12.2 Python/3.5.4",
											"name": "Server",
											"description": "A name for the server"
										},
										{
											"key": "Vary",
											"value": "Origin",
											"name": "Vary",
											"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
										}
									],
									"cookie": [],
									"body": "{\n    \"message\": \"The server could not verify that you are authorized to access the URL requested.  You either supplied the wrong credentials (e.g. a bad password), or your browser doesn't understand how to supply the credentials required.\"\n}\n"
								}
							]
						},
						{
							"name": "3 - Delete Study Publication - Pub - NoAuth -> 403",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "cf01ce13-319a-4aef-8656-3b06a15a9186",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 403\"] = responseCode.code === 403;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain publications\"] = !(responseBody.has('\"publications\":'));",
											"tests[\"Body does NOT contain publication\"] = !(responseBody.has('\"publication\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{WrongAuth}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/publications?title={{ValidPublicationId}}",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PubStudyId}}",
										"publications"
									],
									"query": [
										{
											"key": "title",
											"value": "{{ValidPublicationId}}",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "4 - Delete Study Publication - Pub - Auth - NoParams -> 404",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7a216d78-cc19-4530-880f-d4a528748fbc",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 404\"] = responseCode.code === 404;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain publications\"] = !(responseBody.has('\"publications\":'));",
											"tests[\"Body does NOT contain publication\"] = !(responseBody.has('\"publication\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/publications",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PubStudyId}}",
										"publications"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "5 - Delete Study Publication - Pub - Auth - NoData -> 404",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "839eb1a6-d667-4f37-93b9-a5776c566332",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 404\"] = responseCode.code === 404;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain publications\"] = !(responseBody.has('\"publications\":'));",
											"tests[\"Body does NOT contain publication\"] = !(responseBody.has('\"publication\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/publications?title=''",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PubStudyId}}",
										"publications"
									],
									"query": [
										{
											"key": "title",
											"value": "''",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "6 - Delete Study Publication - Pub - Auth - unknown -> 404",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "60a889bc-10cc-4b52-9420-aaaf6d6d9587",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 404\"] = responseCode.code === 404;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain publications\"] = !(responseBody.has('\"publications\":'));",
											"tests[\"Body does NOT contain publication\"] = !(responseBody.has('\"publication\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/publications?title={{BadPubicationId}}",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PubStudyId}}",
										"publications"
									],
									"query": [
										{
											"key": "title",
											"value": "{{BadPubicationId}}",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Priv",
					"description": "",
					"item": [
						{
							"name": "10 - New Study Publication - Priv - Auth - NewData -> 200",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0f817cdf-9e9e-4927-b1c1-def22de51f9d",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Body has publication\"] = responseBody.has('\"publication\":');",
											"var jsonData = JSON.parse(responseBody);",
											"if (jsonData.publication) {",
											"    var item = jsonData.publication;",
											"    tests[\"JSON response has key 'title'\"] = item.hasOwnProperty('title');",
											"    tests[\"JSON response key 'title' not Null\"] = item.title;",
											"    tests[\"JSON response has key 'authorList'\"] = item.hasOwnProperty('authorList');",
											"    tests[\"JSON response key 'authorList' not Null\"] = item.authorList;",
											"    tests[\"JSON response has key 'pubMedID'\"] = item.hasOwnProperty('pubMedID');",
											"    tests[\"JSON response key 'pubMedID' not Null\"] = item.pubMedID;",
											"    tests[\"JSON response has key 'doi'\"] = item.hasOwnProperty('doi');",
											"    tests[\"JSON response key 'doi' not Null\"] = item.doi;",
											"    if (item.status) {",
											"        var item = item.status",
											"        tests[\"JSON response has key 'annotationValue'\"] = item.hasOwnProperty('annotationValue');",
											"        tests[\"JSON response key 'annotationValue' not Null\"] = item.annotationValue;",
											"        tests[\"JSON response has key 'termSource'\"] = item.hasOwnProperty('termSource');",
											"        // tests[\"JSON response key 'termSource' not Null\"] = item.termSource;",
											"        tests[\"JSON response has key 'termAccession'\"] = item.hasOwnProperty('termAccession');",
											"        // tests[\"JSON response key 'termAccession' not Null\"] = item.termAccession;",
											"        tests[\"JSON response has key 'comments'\"] = item.hasOwnProperty('comments');",
											"        tests[\"JSON response key 'comments' not Null\"] = item.comments;",
											"    }",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"publication\": {\n    \"title\": \"Test-Publication-Title\",\n    \"authorList\": \"Doe J, Smith B\",\n    \"pubMedID\": \"12345678\",\n    \"doi\": \"10.1234/12345678\",\n    \"status\": {\n      \"annotationValue\": \"Published\",\n      \"termSource\": null,\n      \"termAccession\": \"\",\n      \"comments\": []\n    },\n    \"comments\": []\n  }\n}\n"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/publications",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PrivStudyId}}",
										"publications"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "11 - Delete Study Publication - Priv - Auth -> 200",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8dac382b-943c-4356-a286-af4003213d7d",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Body has publication\"] = responseBody.has('\"publication\":');",
											"var jsonData = JSON.parse(responseBody);",
											"if (jsonData.publication) {",
											"    var item = jsonData.publication;",
											"    tests[\"JSON response has key 'title'\"] = item.hasOwnProperty('title');",
											"    tests[\"JSON response key 'title' not Null\"] = item.title;",
											"    tests[\"JSON response has key 'authorList'\"] = item.hasOwnProperty('authorList');",
											"    tests[\"JSON response key 'authorList' not Null\"] = item.authorList;",
											"    tests[\"JSON response has key 'pubMedID'\"] = item.hasOwnProperty('pubMedID');",
											"    tests[\"JSON response key 'pubMedID' not Null\"] = item.pubMedID;",
											"    tests[\"JSON response has key 'doi'\"] = item.hasOwnProperty('doi');",
											"    tests[\"JSON response key 'doi' not Null\"] = item.doi;",
											"    if (item.status) {",
											"        var item = item.status",
											"        tests[\"JSON response has key 'annotationValue'\"] = item.hasOwnProperty('annotationValue');",
											"        tests[\"JSON response key 'annotationValue' not Null\"] = item.annotationValue;",
											"        tests[\"JSON response has key 'termSource'\"] = item.hasOwnProperty('termSource');",
											"        // tests[\"JSON response key 'termSource' not Null\"] = item.termSource;",
											"        tests[\"JSON response has key 'termAccession'\"] = item.hasOwnProperty('termAccession');",
											"        // tests[\"JSON response key 'termAccession' not Null\"] = item.termAccession;",
											"        tests[\"JSON response has key 'comments'\"] = item.hasOwnProperty('comments');",
											"        tests[\"JSON response key 'comments' not Null\"] = item.comments;",
											"    }",
											"}",
											""
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "16cd3cf1-7dc1-4c22-94bd-57995c04f5a5",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/publications?title={{ValidPublicationId}}",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PrivStudyId}}",
										"publications"
									],
									"query": [
										{
											"key": "title",
											"value": "{{ValidPublicationId}}",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": [
								{
									"id": "e50e6da3-8a58-4085-85e6-8455cc1f0cc5",
									"name": "Delete Study Contact - Pub - Auth -> 200",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"disabled": false
											},
											{
												"key": "user_token",
												"value": "{{curator}}",
												"disabled": false
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/contacts?email={{ContactID}}",
											"host": [
												"{{ws-py-server}}{{ws-py-port}}"
											],
											"path": [
												"mtbls",
												"ws",
												"studies",
												"{{PubStudyId}}",
												"contacts"
											],
											"query": [
												{
													"key": "email",
													"value": "{{ContactID}}",
													"equals": true
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "http://localhost.ebi.ac.uk:8080",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Content-Length",
											"value": "790",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Tue, 27 Feb 2018 15:31:42 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Server",
											"value": "Werkzeug/0.12.2 Python/3.5.4",
											"name": "Server",
											"description": "A name for the server"
										},
										{
											"key": "Vary",
											"value": "Origin",
											"name": "Vary",
											"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
										}
									],
									"cookie": [],
									"body": "{\n    \"contact\": {\n        \"firstName\": \"John\",\n        \"lastName\": \"Doe\",\n        \"email\": \"doej@a.mail.com\",\n        \"affiliation\": \"EMBL-EBI\",\n        \"comments\": [],\n        \"address\": \"Wellcome Genome Campus, Hinxton, Cambridgeshire, CB10 1SD, UK\",\n        \"fax\": \"012345678902\",\n        \"midInitials\": \"A\",\n        \"phone\": \"012345678901\",\n        \"roles\": [\n            {\n                \"annotationValue\": \"investigator\",\n                \"termSource\": null,\n                \"termAccession\": \"http://www.ebi.ac.uk/efo/EFO_0001739\",\n                \"comments\": []\n            },\n            {\n                \"annotationValue\": \"Bioinformatician\",\n                \"termSource\": null,\n                \"termAccession\": \"\",\n                \"comments\": []\n            }\n        ]\n    }\n}\n"
								},
								{
									"id": "1058ffba-ca51-41ce-8295-349c43ffdafa",
									"name": "Delete Study Contact - Pub - Auth -> 200",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"disabled": false
											},
											{
												"key": "user_token",
												"value": "{{curator}}",
												"disabled": false
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/contacts?email={{ContactID}}",
											"host": [
												"{{ws-py-server}}{{ws-py-port}}"
											],
											"path": [
												"mtbls",
												"ws",
												"studies",
												"{{PubStudyId}}",
												"contacts"
											],
											"query": [
												{
													"key": "email",
													"value": "{{ContactID}}",
													"equals": true
												}
											]
										}
									},
									"status": "NOT FOUND",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "http://localhost.ebi.ac.uk:8080",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Content-Length",
											"value": "366",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Tue, 27 Feb 2018 15:34:11 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Server",
											"value": "Werkzeug/0.12.2 Python/3.5.4",
											"name": "Server",
											"description": "A name for the server"
										},
										{
											"key": "Vary",
											"value": "Origin",
											"name": "Vary",
											"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
										}
									],
									"cookie": [],
									"body": "{\n    \"message\": \"The requested URL was not found on the server.  If you entered the URL manually please check your spelling and try again. You have requested this URI [/mtbls/ws/studies/MTBLS10/contacts] but did you mean /mtbls/ws/studies/<string:study_id>/contacts or /mtbls/ws/studies/<string:study_id>/contacts/ or /mtbls/ws/studies/<string:study_id>/title ?\"\n}\n"
								}
							]
						},
						{
							"name": "12 - Delete Study Publication - Priv - NoToken -> 401",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "22569d65-f952-4cf8-897e-1f93ad9f6204",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 401\"] = responseCode.code === 401;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain publications\"] = !(responseBody.has('\"publications\":'));",
											"tests[\"Body does NOT contain publication\"] = !(responseBody.has('\"publication\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/publications?title={{ValidPublicationId}}",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PrivStudyId}}",
										"publications"
									],
									"query": [
										{
											"key": "title",
											"value": "{{ValidPublicationId}}",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": [
								{
									"id": "8b6424e5-3cfb-4aff-a7dd-2cd8a962e62a",
									"name": "Delete Study Contact - Pub - NoToken -> 401",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"disabled": false
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": false
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/contacts?email={{ContactID}}",
											"host": [
												"{{ws-py-server}}{{ws-py-port}}"
											],
											"path": [
												"mtbls",
												"ws",
												"studies",
												"{{PubStudyId}}",
												"contacts"
											],
											"query": [
												{
													"key": "email",
													"value": "{{ContactID}}",
													"equals": true
												}
											]
										}
									},
									"status": "UNAUTHORIZED",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "http://localhost.ebi.ac.uk:8080",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Content-Length",
											"value": "243",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Tue, 27 Feb 2018 15:33:47 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Server",
											"value": "Werkzeug/0.12.2 Python/3.5.4",
											"name": "Server",
											"description": "A name for the server"
										},
										{
											"key": "Vary",
											"value": "Origin",
											"name": "Vary",
											"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
										}
									],
									"cookie": [],
									"body": "{\n    \"message\": \"The server could not verify that you are authorized to access the URL requested.  You either supplied the wrong credentials (e.g. a bad password), or your browser doesn't understand how to supply the credentials required.\"\n}\n"
								}
							]
						},
						{
							"name": "13 - Delete Study Publication - Priv - NoAuth -> 403",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8985c158-3ab9-4137-8daa-4af668937a29",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 403\"] = responseCode.code === 403;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain publications\"] = !(responseBody.has('\"publications\":'));",
											"tests[\"Body does NOT contain publication\"] = !(responseBody.has('\"publication\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{WrongAuth}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/publications?title={{ValidPublicationId}}",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PrivStudyId}}",
										"publications"
									],
									"query": [
										{
											"key": "title",
											"value": "{{ValidPublicationId}}",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "14 - Delete Study Publication - Priv - Auth - NoParams -> 404",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "98dc8ffc-5c35-4371-9e98-4aea21314f0e",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 404\"] = responseCode.code === 404;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain publications\"] = !(responseBody.has('\"publications\":'));",
											"tests[\"Body does NOT contain publication\"] = !(responseBody.has('\"publication\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/publications",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PrivStudyId}}",
										"publications"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "15 - Delete Study Publication - Priv - Auth - NoData -> 404",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8fa385b8-5354-4ae0-977a-d6ed15bf7fe9",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 404\"] = responseCode.code === 404;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain publications\"] = !(responseBody.has('\"publications\":'));",
											"tests[\"Body does NOT contain publication\"] = !(responseBody.has('\"publication\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/publications?title=''",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PrivStudyId}}",
										"publications"
									],
									"query": [
										{
											"key": "title",
											"value": "''",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "16 - Delete Study Publication - Priv - Auth - unknown -> 404",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d827e115-aa70-492b-9ad2-f4152635937c",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 404\"] = responseCode.code === 404;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain publications\"] = !(responseBody.has('\"publications\":'));",
											"tests[\"Body does NOT contain publication\"] = !(responseBody.has('\"publication\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/publications?title={{BadPubicationId}}",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PrivStudyId}}",
										"publications"
									],
									"query": [
										{
											"key": "title",
											"value": "{{BadPubicationId}}",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "961933fd-3cf4-4d36-9946-80bbc6f04f4b",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "e0ddf6cb-2531-4492-8f8f-2914cc564690",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}