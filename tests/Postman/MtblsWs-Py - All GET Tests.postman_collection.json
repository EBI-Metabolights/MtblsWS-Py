{
	"info": {
		"name": "MtblsWs-Py - All GET Tests",
		"_postman_id": "0a0870b9-42ab-1db4-3102-55061fad2677",
		"description": "Only GET methods, those that can be run safely as they do not modify data in the server.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Get WS basic info",
			"description": "",
			"item": [
				{
					"name": "About WS -> 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2066887c-1c43-4a97-bf77-2cfecb1d47d5",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"/// Body",
									"tests[\"Body has AboutWS\"] = responseBody.has('\"AboutWS\":');",
									"var jsonData = JSON.parse(responseBody);",
									"if (jsonData.AboutWS) {",
									"    var item = jsonData.AboutWS",
									"    tests[\"JSON response has key 'WsApi'\"] = item.hasOwnProperty('WsApi');",
									"    tests[\"JSON response key 'WsApi' not Null\"] = item.WsApi;",
									"    var api = item.WsApi",
									"    if(api){",
									"        tests[\"JSON response has key 'ApiSpecification'\"] = api.hasOwnProperty('ApiSpecification');",
									"        tests[\"JSON response key 'ApiSpecification' not Null\"] = api.ApiSpecification;",
									"        tests[\"JSON response has key 'ApiVersion'\"] = api.hasOwnProperty('ApiVersion');",
									"        tests[\"JSON response key 'ApiVersion' not Null\"] = api.ApiVersion;",
									"        tests[\"JSON response has key 'ApiDocumentation'\"] = api.hasOwnProperty('ApiDocumentation');",
									"        tests[\"JSON response key 'ApiDocumentation' not Null\"] = api.ApiDocumentation;",
									"    }",
									"    tests[\"JSON response has key 'WsApp'\"] = item.hasOwnProperty('WsApp');",
									"    tests[\"JSON response key 'WsApp' not Null\"] = item.WsApp;",
									"    var app = item.WsApp",
									"    if(app){",
									"        tests[\"JSON response has key 'WsName'\"] = app.hasOwnProperty('WsName');",
									"        tests[\"JSON response key 'WsName' not Null\"] = app.WsName;",
									"        tests[\"JSON response has key 'WsVersion'\"] = app.hasOwnProperty('WsVersion');",
									"        tests[\"JSON response key 'WsVersion' not Null\"] = app.WsVersion;",
									"        tests[\"JSON response has key 'WsDescription'\"] = app.hasOwnProperty('WsDescription');",
									"        tests[\"JSON response key 'WsDescription' not Null\"] = app.WsDescription;",
									"        tests[\"JSON response has key 'WsURL'\"] = app.hasOwnProperty('WsURL');",
									"        tests[\"JSON response key 'WsURL' not Null\"] = app.WsURL;",
									"    }",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "3658a574-0809-452e-8424-55e7e1452871",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "f81f1bb1-e670-457e-8a70-762ff6cfd858",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Get Studies",
			"item": [
				{
					"name": "Get All Public Studies - Pub -> 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "89c4fe70-aab5-44e3-85d3-dac1711cd67e",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Body has Study-description\"] = responseBody.has('\"content\":');",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"JSON response key 'content' not Null\"] = jsonData.content;",
									"",
									"tests[\"No error reported\"] = responseBody.has('\"err\": null');",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Public Studies - Pub - Auth -> 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1a2c73b9-61ec-4ef2-b9b3-470214fd25be",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Body has Study-description\"] = responseBody.has('\"content\":');",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"JSON response key 'content' not Null\"] = jsonData.content;",
									"",
									"tests[\"No error reported\"] = responseBody.has('\"err\": null');",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "user_token",
								"value": "{{curator}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Public Studies - Pub - NoAuth -> 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "da861389-cc53-41b3-880b-af2cb90240aa",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Body has Study-description\"] = responseBody.has('\"content\":');",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"JSON response key 'content' not Null\"] = jsonData.content;",
									"",
									"tests[\"No error reported\"] = responseBody.has('\"err\": null');",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "user_token",
								"value": "{{WrongAuth}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Public Studies - BadId -> 404",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1ee6335c-3dae-444c-b594-51190ca027d6",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 401\"] = responseCode.code === 401;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
									"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
									"tests[\"Body does NOT contain Study-description\"] = !(responseBody.has('\"Study-description\":'));",
									"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{BadStudyId}}",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies",
								"{{BadStudyId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Get Single Study",
			"item": [
				{
					"name": "Get Single Study - Pub -> 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "79f8c551-8d0b-4e8a-ac7a-96a90f9f6d63",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Body has Title Investigation\"] = responseBody.has('\"title\": \"Investigation\"');",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"if (jsonData.investigation) {",
									"    var item = jsonData.investigation",
									"    tests[\"JSON response has key 'identifier'\"] = item.hasOwnProperty('identifier');",
									"    tests[\"JSON response key 'identifier' not Null\"] = item.identifier;",
									"    tests[\"JSON response has key 'title'\"] = item.hasOwnProperty('title');",
									"    tests[\"JSON response key 'title' === 'Investigation'\"] = item.title === 'Investigation';",
									"    tests[\"JSON response has key 'description'\"] = item.hasOwnProperty('description');",
									"    // tests[\"JSON response key 'description' not Null\"] = item.description;",
									"    tests[\"JSON response has key 'ontologySourceReferences'\"] = item.hasOwnProperty('ontologySourceReferences');",
									"    tests[\"JSON response key 'ontologySourceReferences' not Null\"] = item.ontologySourceReferences;",
									"    tests[\"JSON response has key 'people'\"] = item.hasOwnProperty('people');",
									"    tests[\"JSON response key 'people' not Null\"] = item.people;",
									"    tests[\"JSON response has key 'publicReleaseDate'\"] = item.hasOwnProperty('publicReleaseDate');",
									"    // tests[\"JSON response key 'publicReleaseDate' not Null\"] = item.publicReleaseDate;",
									"    tests[\"JSON response has key 'publications'\"] = item.hasOwnProperty('publications');",
									"    tests[\"JSON response key 'publications' not Null\"] = item.publications;",
									"    tests[\"JSON response has key 'submissionDate'\"] = item.hasOwnProperty('submissionDate');",
									"    // tests[\"JSON response key 'submissionDate' not Null\"] = item.submissionDate;",
									"    tests[\"JSON response has key 'comments'\"] = item.hasOwnProperty('comments');",
									"    tests[\"JSON response key 'comments' not Null\"] = item.comments",
									"    ",
									"    tests[\"JSON response has key 'studies'\"] = item.hasOwnProperty('studies');",
									"    tests[\"JSON response has key 'studies' not Null\"] = item.studies;",
									"    if (item.studies.length > 0) {",
									"        var std = item.studies[0]",
									"        tests[\"JSON response has key 'identifier'\"] = std.hasOwnProperty('identifier');",
									"        tests[\"JSON response has key 'identifier' not Null\"] = std.identifier;",
									"        tests[\"JSON response has key 'title'\"] = std.hasOwnProperty('title');",
									"        tests[\"JSON response has key 'title' not Null\"] = std.title;",
									"        tests[\"JSON response has key 'description'\"] = std.hasOwnProperty('description');",
									"        tests[\"JSON response has key 'description' not Null\"] = std.description;",
									"        tests[\"JSON response has key 'filename'\"] = std.hasOwnProperty('filename');",
									"        tests[\"JSON response has key 'filename' not Null\"] = std.filename;",
									"        tests[\"JSON response has key 'publicReleaseDate'\"] = std.hasOwnProperty('publicReleaseDate');",
									"        tests[\"JSON response has key 'publicReleaseDate' not Null\"] = std.publicReleaseDate;",
									"        tests[\"JSON response has key 'publicReleaseDate'\"] = std.hasOwnProperty('publicReleaseDate');",
									"        tests[\"JSON response has key 'publicReleaseDate' not Null\"] = std.publicReleaseDate;",
									"        tests[\"JSON response has key 'submissionDate'\"] = std.hasOwnProperty('submissionDate');",
									"        tests[\"JSON response has key 'submissionDate' not Null\"] = std.submissionDate;",
									"        tests[\"JSON response has key 'people'\"] = std.hasOwnProperty('people');",
									"        tests[\"JSON response has key 'people' not Null\"] = std.people;",
									"        tests[\"JSON response has key 'protocols'\"] = std.hasOwnProperty('protocols');",
									"        tests[\"JSON response has key 'protocols' not Null\"] = std.protocols;",
									"        tests[\"JSON response has key 'studyDesignDescriptors'\"] = std.hasOwnProperty('studyDesignDescriptors');",
									"        tests[\"JSON response has key 'studyDesignDescriptors' not Null\"] = std.studyDesignDescriptors;",
									"        tests[\"JSON response has key 'factors'\"] = std.hasOwnProperty('factors');",
									"        tests[\"JSON response has key 'factors' not Null\"] = std.factors;",
									"        tests[\"JSON response has key 'materials'\"] = std.hasOwnProperty('materials');",
									"        tests[\"JSON response has key 'materials' not Null\"] = std.materials;",
									"        tests[\"JSON response has key 'publications'\"] = std.hasOwnProperty('publications');",
									"        tests[\"JSON response has key 'publications' not Null\"] = std.publications;",
									"        tests[\"JSON response has key 'unitCategories'\"] = std.hasOwnProperty('unitCategories');",
									"        tests[\"JSON response has key 'unitCategories' not Null\"] = std.unitCategories;",
									"        tests[\"JSON response has key 'characteristicCategories'\"] = std.hasOwnProperty('characteristicCategories');",
									"        tests[\"JSON response has key 'characteristicCategories' not Null\"] = std.characteristicCategories;",
									"        tests[\"JSON response has key 'processSequence'\"] = std.hasOwnProperty('processSequence');",
									"        tests[\"JSON response has key 'processSequence' not Null\"] = std.processSequence;",
									"        tests[\"JSON response has key 'comments'\"] = std.hasOwnProperty('comments');",
									"    }",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies",
								"{{PubStudyId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Single Study - Pub - Auth -> 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c81cb3a8-6257-487f-b254-d0ee28bfc5cf",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Body has Title Investigation\"] = responseBody.has('\"title\": \"Investigation\"');",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"if (jsonData.investigation) {",
									"    var item = jsonData.investigation",
									"    tests[\"JSON response has key 'identifier'\"] = item.hasOwnProperty('identifier');",
									"    tests[\"JSON response key 'identifier' not Null\"] = item.identifier;",
									"    tests[\"JSON response has key 'title'\"] = item.hasOwnProperty('title');",
									"    tests[\"JSON response key 'title' === 'Investigation'\"] = item.title === 'Investigation';",
									"    tests[\"JSON response has key 'description'\"] = item.hasOwnProperty('description');",
									"    // tests[\"JSON response key 'description' not Null\"] = item.description;",
									"    tests[\"JSON response has key 'ontologySourceReferences'\"] = item.hasOwnProperty('ontologySourceReferences');",
									"    tests[\"JSON response key 'ontologySourceReferences' not Null\"] = item.ontologySourceReferences;",
									"    tests[\"JSON response has key 'people'\"] = item.hasOwnProperty('people');",
									"    tests[\"JSON response key 'people' not Null\"] = item.people;",
									"    tests[\"JSON response has key 'publicReleaseDate'\"] = item.hasOwnProperty('publicReleaseDate');",
									"    // tests[\"JSON response key 'publicReleaseDate' not Null\"] = item.publicReleaseDate;",
									"    tests[\"JSON response has key 'publications'\"] = item.hasOwnProperty('publications');",
									"    tests[\"JSON response key 'publications' not Null\"] = item.publications;",
									"    tests[\"JSON response has key 'submissionDate'\"] = item.hasOwnProperty('submissionDate');",
									"    // tests[\"JSON response key 'submissionDate' not Null\"] = item.submissionDate;",
									"    tests[\"JSON response has key 'comments'\"] = item.hasOwnProperty('comments');",
									"    tests[\"JSON response key 'comments' not Null\"] = item.comments",
									"    ",
									"    tests[\"JSON response has key 'studies'\"] = item.hasOwnProperty('studies');",
									"    tests[\"JSON response has key 'studies' not Null\"] = item.studies;",
									"    if (item.studies.length > 0) {",
									"        var std = item.studies[0]",
									"        tests[\"JSON response has key 'identifier'\"] = std.hasOwnProperty('identifier');",
									"        tests[\"JSON response has key 'identifier' not Null\"] = std.identifier;",
									"        tests[\"JSON response has key 'title'\"] = std.hasOwnProperty('title');",
									"        tests[\"JSON response has key 'title' not Null\"] = std.title;",
									"        tests[\"JSON response has key 'description'\"] = std.hasOwnProperty('description');",
									"        tests[\"JSON response has key 'description' not Null\"] = std.description;",
									"        tests[\"JSON response has key 'filename'\"] = std.hasOwnProperty('filename');",
									"        tests[\"JSON response has key 'filename' not Null\"] = std.filename;",
									"        tests[\"JSON response has key 'publicReleaseDate'\"] = std.hasOwnProperty('publicReleaseDate');",
									"        tests[\"JSON response has key 'publicReleaseDate' not Null\"] = std.publicReleaseDate;",
									"        tests[\"JSON response has key 'publicReleaseDate'\"] = std.hasOwnProperty('publicReleaseDate');",
									"        tests[\"JSON response has key 'publicReleaseDate' not Null\"] = std.publicReleaseDate;",
									"        tests[\"JSON response has key 'submissionDate'\"] = std.hasOwnProperty('submissionDate');",
									"        tests[\"JSON response has key 'submissionDate' not Null\"] = std.submissionDate;",
									"        tests[\"JSON response has key 'people'\"] = std.hasOwnProperty('people');",
									"        tests[\"JSON response has key 'people' not Null\"] = std.people;",
									"        tests[\"JSON response has key 'protocols'\"] = std.hasOwnProperty('protocols');",
									"        tests[\"JSON response has key 'protocols' not Null\"] = std.protocols;",
									"        tests[\"JSON response has key 'studyDesignDescriptors'\"] = std.hasOwnProperty('studyDesignDescriptors');",
									"        tests[\"JSON response has key 'studyDesignDescriptors' not Null\"] = std.studyDesignDescriptors;",
									"        tests[\"JSON response has key 'factors'\"] = std.hasOwnProperty('factors');",
									"        tests[\"JSON response has key 'factors' not Null\"] = std.factors;",
									"        tests[\"JSON response has key 'materials'\"] = std.hasOwnProperty('materials');",
									"        tests[\"JSON response has key 'materials' not Null\"] = std.materials;",
									"        tests[\"JSON response has key 'publications'\"] = std.hasOwnProperty('publications');",
									"        tests[\"JSON response has key 'publications' not Null\"] = std.publications;",
									"        tests[\"JSON response has key 'unitCategories'\"] = std.hasOwnProperty('unitCategories');",
									"        tests[\"JSON response has key 'unitCategories' not Null\"] = std.unitCategories;",
									"        tests[\"JSON response has key 'characteristicCategories'\"] = std.hasOwnProperty('characteristicCategories');",
									"        tests[\"JSON response has key 'characteristicCategories' not Null\"] = std.characteristicCategories;",
									"        tests[\"JSON response has key 'processSequence'\"] = std.hasOwnProperty('processSequence');",
									"        tests[\"JSON response has key 'processSequence' not Null\"] = std.processSequence;",
									"        tests[\"JSON response has key 'comments'\"] = std.hasOwnProperty('comments');",
									"    }",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "user_token",
								"value": "{{curator}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies",
								"{{PubStudyId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Single Study - Pub - NoAuth -> 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "369c02f5-0db3-42d3-ae75-958ba5b184c6",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Body has Title Investigation\"] = responseBody.has('\"title\": \"Investigation\"');",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"if (jsonData.investigation) {",
									"    var item = jsonData.investigation",
									"    tests[\"JSON response has key 'identifier'\"] = item.hasOwnProperty('identifier');",
									"    tests[\"JSON response key 'identifier' not Null\"] = item.identifier;",
									"    tests[\"JSON response has key 'title'\"] = item.hasOwnProperty('title');",
									"    tests[\"JSON response key 'title' === 'Investigation'\"] = item.title === 'Investigation';",
									"    tests[\"JSON response has key 'description'\"] = item.hasOwnProperty('description');",
									"    // tests[\"JSON response key 'description' not Null\"] = item.description;",
									"    tests[\"JSON response has key 'ontologySourceReferences'\"] = item.hasOwnProperty('ontologySourceReferences');",
									"    tests[\"JSON response key 'ontologySourceReferences' not Null\"] = item.ontologySourceReferences;",
									"    tests[\"JSON response has key 'people'\"] = item.hasOwnProperty('people');",
									"    tests[\"JSON response key 'people' not Null\"] = item.people;",
									"    tests[\"JSON response has key 'publicReleaseDate'\"] = item.hasOwnProperty('publicReleaseDate');",
									"    // tests[\"JSON response key 'publicReleaseDate' not Null\"] = item.publicReleaseDate;",
									"    tests[\"JSON response has key 'publications'\"] = item.hasOwnProperty('publications');",
									"    tests[\"JSON response key 'publications' not Null\"] = item.publications;",
									"    tests[\"JSON response has key 'submissionDate'\"] = item.hasOwnProperty('submissionDate');",
									"    // tests[\"JSON response key 'submissionDate' not Null\"] = item.submissionDate;",
									"    tests[\"JSON response has key 'comments'\"] = item.hasOwnProperty('comments');",
									"    tests[\"JSON response key 'comments' not Null\"] = item.comments",
									"    ",
									"    tests[\"JSON response has key 'studies'\"] = item.hasOwnProperty('studies');",
									"    tests[\"JSON response has key 'studies' not Null\"] = item.studies;",
									"    if (item.studies.length > 0) {",
									"        var std = item.studies[0]",
									"        tests[\"JSON response has key 'identifier'\"] = std.hasOwnProperty('identifier');",
									"        tests[\"JSON response has key 'identifier' not Null\"] = std.identifier;",
									"        tests[\"JSON response has key 'title'\"] = std.hasOwnProperty('title');",
									"        tests[\"JSON response has key 'title' not Null\"] = std.title;",
									"        tests[\"JSON response has key 'description'\"] = std.hasOwnProperty('description');",
									"        tests[\"JSON response has key 'description' not Null\"] = std.description;",
									"        tests[\"JSON response has key 'filename'\"] = std.hasOwnProperty('filename');",
									"        tests[\"JSON response has key 'filename' not Null\"] = std.filename;",
									"        tests[\"JSON response has key 'publicReleaseDate'\"] = std.hasOwnProperty('publicReleaseDate');",
									"        tests[\"JSON response has key 'publicReleaseDate' not Null\"] = std.publicReleaseDate;",
									"        tests[\"JSON response has key 'publicReleaseDate'\"] = std.hasOwnProperty('publicReleaseDate');",
									"        tests[\"JSON response has key 'publicReleaseDate' not Null\"] = std.publicReleaseDate;",
									"        tests[\"JSON response has key 'submissionDate'\"] = std.hasOwnProperty('submissionDate');",
									"        tests[\"JSON response has key 'submissionDate' not Null\"] = std.submissionDate;",
									"        tests[\"JSON response has key 'people'\"] = std.hasOwnProperty('people');",
									"        tests[\"JSON response has key 'people' not Null\"] = std.people;",
									"        tests[\"JSON response has key 'protocols'\"] = std.hasOwnProperty('protocols');",
									"        tests[\"JSON response has key 'protocols' not Null\"] = std.protocols;",
									"        tests[\"JSON response has key 'studyDesignDescriptors'\"] = std.hasOwnProperty('studyDesignDescriptors');",
									"        tests[\"JSON response has key 'studyDesignDescriptors' not Null\"] = std.studyDesignDescriptors;",
									"        tests[\"JSON response has key 'factors'\"] = std.hasOwnProperty('factors');",
									"        tests[\"JSON response has key 'factors' not Null\"] = std.factors;",
									"        tests[\"JSON response has key 'materials'\"] = std.hasOwnProperty('materials');",
									"        tests[\"JSON response has key 'materials' not Null\"] = std.materials;",
									"        tests[\"JSON response has key 'publications'\"] = std.hasOwnProperty('publications');",
									"        tests[\"JSON response has key 'publications' not Null\"] = std.publications;",
									"        tests[\"JSON response has key 'unitCategories'\"] = std.hasOwnProperty('unitCategories');",
									"        tests[\"JSON response has key 'unitCategories' not Null\"] = std.unitCategories;",
									"        tests[\"JSON response has key 'characteristicCategories'\"] = std.hasOwnProperty('characteristicCategories');",
									"        tests[\"JSON response has key 'characteristicCategories' not Null\"] = std.characteristicCategories;",
									"        tests[\"JSON response has key 'processSequence'\"] = std.hasOwnProperty('processSequence');",
									"        tests[\"JSON response has key 'processSequence' not Null\"] = std.processSequence;",
									"        tests[\"JSON response has key 'comments'\"] = std.hasOwnProperty('comments');",
									"    }",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "user_token",
								"value": "{{WrongAuth}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies",
								"{{PubStudyId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Single Study - Priv - Auth -> 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5b80845a-60a8-4399-aa0d-3bb998b9b675",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Body has Title Investigation\"] = responseBody.has('\"title\": \"Investigation\"');",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"if (jsonData.investigation) {",
									"    var item = jsonData.investigation",
									"    tests[\"JSON response has key 'identifier'\"] = item.hasOwnProperty('identifier');",
									"    tests[\"JSON response key 'identifier' not Null\"] = item.identifier;",
									"    tests[\"JSON response has key 'title'\"] = item.hasOwnProperty('title');",
									"    tests[\"JSON response key 'title' === 'Investigation'\"] = item.title === 'Investigation';",
									"    tests[\"JSON response has key 'description'\"] = item.hasOwnProperty('description');",
									"    // tests[\"JSON response key 'description' not Null\"] = item.description;",
									"    tests[\"JSON response has key 'ontologySourceReferences'\"] = item.hasOwnProperty('ontologySourceReferences');",
									"    tests[\"JSON response key 'ontologySourceReferences' not Null\"] = item.ontologySourceReferences;",
									"    tests[\"JSON response has key 'people'\"] = item.hasOwnProperty('people');",
									"    tests[\"JSON response key 'people' not Null\"] = item.people;",
									"    tests[\"JSON response has key 'publicReleaseDate'\"] = item.hasOwnProperty('publicReleaseDate');",
									"    // tests[\"JSON response key 'publicReleaseDate' not Null\"] = item.publicReleaseDate;",
									"    tests[\"JSON response has key 'publications'\"] = item.hasOwnProperty('publications');",
									"    tests[\"JSON response key 'publications' not Null\"] = item.publications;",
									"    tests[\"JSON response has key 'submissionDate'\"] = item.hasOwnProperty('submissionDate');",
									"    // tests[\"JSON response key 'submissionDate' not Null\"] = item.submissionDate;",
									"    tests[\"JSON response has key 'comments'\"] = item.hasOwnProperty('comments');",
									"    tests[\"JSON response key 'comments' not Null\"] = item.comments",
									"    ",
									"    tests[\"JSON response has key 'studies'\"] = item.hasOwnProperty('studies');",
									"    tests[\"JSON response has key 'studies' not Null\"] = item.studies;",
									"    if (item.studies.length > 0) {",
									"        var std = item.studies[0]",
									"        tests[\"JSON response has key 'identifier'\"] = std.hasOwnProperty('identifier');",
									"        tests[\"JSON response has key 'identifier' not Null\"] = std.identifier;",
									"        tests[\"JSON response has key 'title'\"] = std.hasOwnProperty('title');",
									"        tests[\"JSON response has key 'title' not Null\"] = std.title;",
									"        tests[\"JSON response has key 'description'\"] = std.hasOwnProperty('description');",
									"        tests[\"JSON response has key 'description' not Null\"] = std.description;",
									"        tests[\"JSON response has key 'filename'\"] = std.hasOwnProperty('filename');",
									"        tests[\"JSON response has key 'filename' not Null\"] = std.filename;",
									"        tests[\"JSON response has key 'publicReleaseDate'\"] = std.hasOwnProperty('publicReleaseDate');",
									"        tests[\"JSON response has key 'publicReleaseDate' not Null\"] = std.publicReleaseDate;",
									"        tests[\"JSON response has key 'publicReleaseDate'\"] = std.hasOwnProperty('publicReleaseDate');",
									"        tests[\"JSON response has key 'publicReleaseDate' not Null\"] = std.publicReleaseDate;",
									"        tests[\"JSON response has key 'submissionDate'\"] = std.hasOwnProperty('submissionDate');",
									"        tests[\"JSON response has key 'submissionDate' not Null\"] = std.submissionDate;",
									"        tests[\"JSON response has key 'people'\"] = std.hasOwnProperty('people');",
									"        tests[\"JSON response has key 'people' not Null\"] = std.people;",
									"        tests[\"JSON response has key 'protocols'\"] = std.hasOwnProperty('protocols');",
									"        tests[\"JSON response has key 'protocols' not Null\"] = std.protocols;",
									"        tests[\"JSON response has key 'studyDesignDescriptors'\"] = std.hasOwnProperty('studyDesignDescriptors');",
									"        tests[\"JSON response has key 'studyDesignDescriptors' not Null\"] = std.studyDesignDescriptors;",
									"        tests[\"JSON response has key 'factors'\"] = std.hasOwnProperty('factors');",
									"        tests[\"JSON response has key 'factors' not Null\"] = std.factors;",
									"        tests[\"JSON response has key 'materials'\"] = std.hasOwnProperty('materials');",
									"        tests[\"JSON response has key 'materials' not Null\"] = std.materials;",
									"        tests[\"JSON response has key 'publications'\"] = std.hasOwnProperty('publications');",
									"        tests[\"JSON response has key 'publications' not Null\"] = std.publications;",
									"        tests[\"JSON response has key 'unitCategories'\"] = std.hasOwnProperty('unitCategories');",
									"        tests[\"JSON response has key 'unitCategories' not Null\"] = std.unitCategories;",
									"        tests[\"JSON response has key 'characteristicCategories'\"] = std.hasOwnProperty('characteristicCategories');",
									"        tests[\"JSON response has key 'characteristicCategories' not Null\"] = std.characteristicCategories;",
									"        tests[\"JSON response has key 'processSequence'\"] = std.hasOwnProperty('processSequence');",
									"        tests[\"JSON response has key 'processSequence' not Null\"] = std.processSequence;",
									"        tests[\"JSON response has key 'comments'\"] = std.hasOwnProperty('comments');",
									"    }",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "user_token",
								"value": "{{curator}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies",
								"{{PrivStudyId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Single Study - Priv -> 401",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 401\"] = responseCode.code === 401;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
									"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
									"tests[\"Body does NOT contain Title Investigation\"] = !(responseBody.has('\"title\": \"Investigation\"'));",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies",
								"{{PrivStudyId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Single Study - Priv - NoAuth -> 403",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 403\"] = responseCode.code === 403;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
									"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
									"tests[\"Body does NOT contain Title Investigation\"] = !(responseBody.has('\"title\": \"Investigation\"'));",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "user_token",
								"value": "{{WrongAuth}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies",
								"{{PrivStudyId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Single Study - NullId -> 404",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 404\"] = responseCode.code === 404;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
									"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
									"tests[\"Body does NOT contain Title Investigation\"] = !(responseBody.has('\"title\": \"Investigation\"'));",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Single Study - BadId -> 404",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "10811deb-87c9-4b70-b37c-9ec8d8b25baa",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 401\"] = responseCode.code === 401;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
									"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
									"tests[\"Body does NOT contain Title Investigation\"] = !(responseBody.has('\"title\": \"Investigation\"'));",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{BadStudyId}}",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies",
								"{{BadStudyId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Get Study Title",
			"item": [
				{
					"name": "Get Study Title - Pub -> 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "67c498e5-42bd-40dd-9568-4414793d86e2",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"JSON response has key 'title'\"] = responseBody.has('\"title\":');",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"JSON response key 'title' not null\"] = jsonData.title.length;",
									"",
									"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/title",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies",
								"{{PubStudyId}}",
								"title"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Study Title - Pub - Auth -> 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fe6d9c9b-8767-4bfc-86f8-46ef6668d383",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"JSON response has key 'title'\"] = responseBody.has('\"title\":');",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"JSON response key 'title' not null\"] = jsonData.title;",
									"",
									"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "user_token",
								"value": "{{curator}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/title",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies",
								"{{PubStudyId}}",
								"title"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Study Title - Pub - NoAuth -> 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6a43251c-4da3-4560-9976-516d388b6bfb",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"JSON response has key 'title'\"] = responseBody.has('\"title\":');",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"JSON response key 'title' not null\"] = jsonData.title;",
									"",
									"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "user_token",
								"value": "{{WrongAuth}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/title",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies",
								"{{PubStudyId}}",
								"title"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Study Title - Priv - Auth -> 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6953aa06-57e6-4156-bd99-ae46964e0c86",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"JSON response has key 'title'\"] = responseBody.has('\"title\":');",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"JSON response key 'title' not null\"] = jsonData.title;",
									"",
									"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "user_token",
								"value": "{{userTokenOK}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/title",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies",
								"{{PrivStudyId}}",
								"title"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Study Title - Priv -> 401",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 401\"] = responseCode.code === 401;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
									"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
									"tests[\"Body does NOT contain Study-title\"] = !(responseBody.has('\"Study-title\":'));",
									"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/title",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies",
								"{{PrivStudyId}}",
								"title"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Study Title - Priv - NoAuth -> 403",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 403\"] = responseCode.code === 403;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
									"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
									"tests[\"Body does NOT contain Study-title\"] = !(responseBody.has('\"Study-title\":'));",
									"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "user_token",
								"value": "{{WrongAuth}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/title",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies",
								"{{PrivStudyId}}",
								"title"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Study Title - NullId -> 404",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 404\"] = responseCode.code === 404;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
									"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
									"tests[\"Body does NOT contain Study-title\"] = !(responseBody.has('\"Study-title\":'));",
									"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies//title",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies",
								"",
								"title"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Study Title - BadId -> 404",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 404\"] = responseCode.code === 404;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
									"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
									"tests[\"Body does NOT contain Study-title\"] = !(responseBody.has('\"Study-title\":'));",
									"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "user_token",
								"value": "{{userTokenOK}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{BadStudyId}}/title",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies",
								"{{BadStudyId}}",
								"title"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Get Study Description",
			"item": [
				{
					"name": "Get Study Description - Pub -> 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4b86408b-ce96-47da-8be3-aec7ca4504d9",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"JSON response has key 'description'\"] = responseBody.has('\"description\":');",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"JSON response key 'description' not null\"] = jsonData.description;",
									"",
									"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/description",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies",
								"{{PubStudyId}}",
								"description"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Study Description - Pub - Auth -> 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "db14ca3d-5656-47c0-944c-c90f5ecc3a4c",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"JSON response has key 'description'\"] = responseBody.has('\"description\":');",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"JSON response key 'description' not null\"] = jsonData.description;",
									"",
									"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "user_token",
								"value": "{{curator}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/description",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies",
								"{{PubStudyId}}",
								"description"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Study Description - Pub - NoAuth -> 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0cd29e0f-cc40-410f-80b6-f93bec82216f",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"JSON response has key 'description'\"] = responseBody.has('\"description\":');",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"JSON response key 'description' not null\"] = jsonData.description;",
									"",
									"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "user_token",
								"value": "{{WrongAuth}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/description",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies",
								"{{PubStudyId}}",
								"description"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Study Description - Priv - Auth -> 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8c6aefbc-086a-428e-87a4-7d6634802ada",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"JSON response has key 'description'\"] = responseBody.has('\"description\":');",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"JSON response key 'description' not null\"] = jsonData.description;",
									"",
									"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "user_token",
								"value": "{{userTokenOK}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/description",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies",
								"{{PrivStudyId}}",
								"description"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Study Description - Priv -> 401",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a4776e35-d94b-49c5-8ef5-6e4d01b7afb2",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 401\"] = responseCode.code === 401;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
									"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
									"tests[\"Body does NOT contain description\"] = !(responseBody.has('\"description\":'));",
									"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/description",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies",
								"{{PrivStudyId}}",
								"description"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Study Description - Priv - NoAuth -> 403",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4f5e355b-0be2-4270-a391-c31503e023a3",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 403\"] = responseCode.code === 403;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
									"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
									"tests[\"Body does NOT contain description\"] = !(responseBody.has('\"description\":'));",
									"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "user_token",
								"value": "{{WrongAuth}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/description",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies",
								"{{PrivStudyId}}",
								"description"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Study Description - NullId -> 404",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "376b9c23-e27a-4cc0-aa47-60e8c34c4301",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 404\"] = responseCode.code === 404;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
									"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
									"tests[\"Body does NOT contain description\"] = !(responseBody.has('\"description\":'));",
									"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies//description",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies",
								"",
								"description"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Study Description - BadId -> 404",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d0f38fa9-f223-466d-bb35-595cf12440a0",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 404\"] = responseCode.code === 404;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
									"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
									"tests[\"Body does NOT contain description\"] = !(responseBody.has('\"description\":'));",
									"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "user_token",
								"value": "{{userTokenOK}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{BadStudyId}}/description",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies",
								"{{BadStudyId}}",
								"description"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Get Study Protocols",
			"item": [
				{
					"name": "Get Study Protocols - Pub -> 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "92cb86bd-228c-4903-b553-cd2baa3a3946",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"/// Body",
									"tests[\"Body has protocols\"] = responseBody.has('\"protocols\":');",
									"var jsonData = JSON.parse(responseBody);",
									"if (jsonData.protocols.length > 0) {",
									"    var item = jsonData.protocols[0]",
									"    tests[\"JSON response has key 'name'\"] = item.hasOwnProperty('name');",
									"    tests[\"JSON response key 'name' not Null\"] = item.name;",
									"    tests[\"JSON response has key 'description'\"] = item.hasOwnProperty('description');",
									"    tests[\"JSON response key 'description' not Null\"] = item.description;",
									"    tests[\"JSON response has key 'protocolType'\"] = item.hasOwnProperty('protocolType');",
									"    tests[\"JSON response key 'protocolType' not Null\"] = item.protocolType;",
									"    tests[\"JSON response has key 'uri'\"] = item.hasOwnProperty('uri');",
									"    // tests[\"JSON response key 'uri' not Null\"] = item.uri;",
									"    tests[\"JSON response has key 'version'\"] = item.hasOwnProperty('version');",
									"    // tests[\"JSON response key 'version' not Null\"] = item.version;",
									"    tests[\"JSON response has key 'parameters'\"] = item.hasOwnProperty('parameters');",
									"    tests[\"JSON response key 'parameters' not Null\"] = item.parameters;",
									"    tests[\"JSON response has key 'components'\"] = item.hasOwnProperty('components');",
									"    tests[\"JSON response key 'components' not Null\"] = item.components;",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/study/{{PubStudyId}}/protocols",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"study",
								"{{PubStudyId}}",
								"protocols"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Study Protocols - Pub - Auth -> 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "41c8a029-1e7a-42a6-9be8-99e96b5c6c12",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"/// Body",
									"tests[\"Body has protocols\"] = responseBody.has('\"protocols\":');",
									"var jsonData = JSON.parse(responseBody);",
									"if (jsonData.protocols.length > 0) {",
									"    var item = jsonData.protocols[0]",
									"    tests[\"JSON response has key 'name'\"] = item.hasOwnProperty('name');",
									"    tests[\"JSON response key 'name' not Null\"] = item.name;",
									"    tests[\"JSON response has key 'description'\"] = item.hasOwnProperty('description');",
									"    tests[\"JSON response key 'description' not Null\"] = item.description;",
									"    tests[\"JSON response has key 'protocolType'\"] = item.hasOwnProperty('protocolType');",
									"    tests[\"JSON response key 'protocolType' not Null\"] = item.protocolType;",
									"    tests[\"JSON response has key 'uri'\"] = item.hasOwnProperty('uri');",
									"    // tests[\"JSON response key 'uri' not Null\"] = item.uri;",
									"    tests[\"JSON response has key 'version'\"] = item.hasOwnProperty('version');",
									"    // tests[\"JSON response key 'version' not Null\"] = item.version;",
									"    tests[\"JSON response has key 'parameters'\"] = item.hasOwnProperty('parameters');",
									"    tests[\"JSON response key 'parameters' not Null\"] = item.parameters;",
									"    tests[\"JSON response has key 'components'\"] = item.hasOwnProperty('components');",
									"    tests[\"JSON response key 'components' not Null\"] = item.components;",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "user_token",
								"value": "{{curator}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/study/{{PubStudyId}}/protocols",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"study",
								"{{PubStudyId}}",
								"protocols"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Study Protocols - Pub - NoAuth -> 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7d8248b9-2e8c-4540-90e5-d8b9843a82d5",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"/// Body",
									"tests[\"Body has protocols\"] = responseBody.has('\"protocols\":');",
									"var jsonData = JSON.parse(responseBody);",
									"if (jsonData.protocols.length > 0) {",
									"    var item = jsonData.protocols[0]",
									"    tests[\"JSON response has key 'name'\"] = item.hasOwnProperty('name');",
									"    tests[\"JSON response key 'name' not Null\"] = item.name;",
									"    tests[\"JSON response has key 'description'\"] = item.hasOwnProperty('description');",
									"    tests[\"JSON response key 'description' not Null\"] = item.description;",
									"    tests[\"JSON response has key 'protocolType'\"] = item.hasOwnProperty('protocolType');",
									"    tests[\"JSON response key 'protocolType' not Null\"] = item.protocolType;",
									"    tests[\"JSON response has key 'uri'\"] = item.hasOwnProperty('uri');",
									"    // tests[\"JSON response key 'uri' not Null\"] = item.uri;",
									"    tests[\"JSON response has key 'version'\"] = item.hasOwnProperty('version');",
									"    // tests[\"JSON response key 'version' not Null\"] = item.version;",
									"    tests[\"JSON response has key 'parameters'\"] = item.hasOwnProperty('parameters');",
									"    tests[\"JSON response key 'parameters' not Null\"] = item.parameters;",
									"    tests[\"JSON response has key 'components'\"] = item.hasOwnProperty('components');",
									"    tests[\"JSON response key 'components' not Null\"] = item.components;",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "user_token",
								"value": "{{WrongAuth}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/study/{{PubStudyId}}/protocols",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"study",
								"{{PubStudyId}}",
								"protocols"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Study Protocols - Priv - Auth -> 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d3d6cd3a-09b7-4ecc-8995-77573d8276a1",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"/// Body",
									"tests[\"Body has protocols\"] = responseBody.has('\"protocols\":');",
									"var jsonData = JSON.parse(responseBody);",
									"if (jsonData.protocols.length > 0) {",
									"    var item = jsonData.protocols[0]",
									"    tests[\"JSON response has key 'name'\"] = item.hasOwnProperty('name');",
									"    tests[\"JSON response key 'name' not Null\"] = item.name;",
									"    tests[\"JSON response has key 'description'\"] = item.hasOwnProperty('description');",
									"    tests[\"JSON response key 'description' not Null\"] = item.description;",
									"    tests[\"JSON response has key 'protocolType'\"] = item.hasOwnProperty('protocolType');",
									"    tests[\"JSON response key 'protocolType' not Null\"] = item.protocolType;",
									"    tests[\"JSON response has key 'uri'\"] = item.hasOwnProperty('uri');",
									"    // tests[\"JSON response key 'uri' not Null\"] = item.uri;",
									"    tests[\"JSON response has key 'version'\"] = item.hasOwnProperty('version');",
									"    // tests[\"JSON response key 'version' not Null\"] = item.version;",
									"    tests[\"JSON response has key 'parameters'\"] = item.hasOwnProperty('parameters');",
									"    tests[\"JSON response key 'parameters' not Null\"] = item.parameters;",
									"    tests[\"JSON response has key 'components'\"] = item.hasOwnProperty('components');",
									"    tests[\"JSON response key 'components' not Null\"] = item.components;",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "user_token",
								"value": "{{curator}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/study/{{PrivStudyId}}/protocols",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"study",
								"{{PrivStudyId}}",
								"protocols"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Study Protocols - Priv -> 401",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 401\"] = responseCode.code === 401;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
									"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
									"tests[\"Body does NOT contain Study-protocols\"] = !(responseBody.has('\"Study-protocols\":'));",
									"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/study/{{PrivStudyId}}/protocols",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"study",
								"{{PrivStudyId}}",
								"protocols"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Study Protocols - Priv - NoAuth -> 403",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 403\"] = responseCode.code === 403;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
									"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
									"tests[\"Body does NOT contain Study-protocols\"] = !(responseBody.has('\"Study-protocols\":'));",
									"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "user_token",
								"value": "{{WrongAuth}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/study/{{PrivStudyId}}/protocols",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"study",
								"{{PrivStudyId}}",
								"protocols"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Study Protocols - NullId -> 404",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 404\"] = responseCode.code === 404;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
									"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
									"tests[\"Body does NOT contain Study-protocols\"] = !(responseBody.has('\"Study-protocols\":'));",
									"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/study//protocols",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"study",
								"",
								"protocols"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Study Protocols - BadId -> 404",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 404\"] = responseCode.code === 404;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
									"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
									"tests[\"Body does NOT contain Study-protocols\"] = !(responseBody.has('\"Study-protocols\":'));",
									"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "user_token",
								"value": "{{userTokenOK}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/study/{{BadStudyId}}/protocols",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"study",
								"{{BadStudyId}}",
								"protocols"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Get Study Contacts",
			"item": [
				{
					"name": "Get Study Contacts - Pub -> 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3018320d-27c3-43ad-a2a9-3487e529db14",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Body has contacts\"] = responseBody.has('\"contacts\":');",
									"var jsonData = JSON.parse(responseBody);",
									"if (jsonData.contacts.length > 0) {",
									"    var item = jsonData.contacts[0]",
									"    tests[\"JSON response has key 'firstName'\"] = item.hasOwnProperty('firstName');",
									"    tests[\"JSON response key 'firstName' not Null\"] = item.firstName;",
									"    tests[\"JSON response has key 'lastName'\"] = item.hasOwnProperty('lastName');",
									"    tests[\"JSON response key 'lastName' not Null\"] = item.lastName;",
									"    tests[\"JSON response has key 'email'\"] = item.hasOwnProperty('email');",
									"    tests[\"JSON response key 'email' not Null\"] = item.email;",
									"    tests[\"JSON response has key 'address'\"] = item.hasOwnProperty('address');",
									"    // tests[\"JSON response key 'address' not Null\"] = item.address;",
									"    if (item.roles.length > 0) {",
									"        var role = item.roles[0]",
									"        tests[\"JSON response has key 'role annotationValue'\"] = role.hasOwnProperty('annotationValue');",
									"        tests[\"JSON response key 'role annotationValue' not Null\"] = role.annotationValue !== null;",
									"    }",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/study/{{PubStudyId}}/contacts",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"study",
								"{{PubStudyId}}",
								"contacts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Study Contacts - Pub - Auth -> 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a7ce0561-925e-4cce-ac58-bc47c17b3b14",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Body has contacts\"] = responseBody.has('\"contacts\":');",
									"var jsonData = JSON.parse(responseBody);",
									"if (jsonData.contacts.length > 0) {",
									"    var item = jsonData.contacts[0]",
									"    tests[\"JSON response has key 'firstName'\"] = item.hasOwnProperty('firstName');",
									"    tests[\"JSON response key 'firstName' not Null\"] = item.firstName;",
									"    tests[\"JSON response has key 'lastName'\"] = item.hasOwnProperty('lastName');",
									"    tests[\"JSON response key 'lastName' not Null\"] = item.lastName;",
									"    tests[\"JSON response has key 'email'\"] = item.hasOwnProperty('email');",
									"    tests[\"JSON response key 'email' not Null\"] = item.email;",
									"    tests[\"JSON response has key 'address'\"] = item.hasOwnProperty('address');",
									"    // tests[\"JSON response key 'address' not Null\"] = item.address;",
									"    if (item.roles.length > 0) {",
									"        var role = item.roles[0]",
									"        tests[\"JSON response has key 'role annotationValue'\"] = role.hasOwnProperty('annotationValue');",
									"        tests[\"JSON response key 'role annotationValue' not Null\"] = role.annotationValue !== null;",
									"    }",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "user_token",
								"value": "{{curator}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/study/{{PubStudyId}}/contacts",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"study",
								"{{PubStudyId}}",
								"contacts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Study Contacts - Pub - NoAuth -> 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "528faf2c-e330-40a6-995f-517854bd49a4",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Body has contacts\"] = responseBody.has('\"contacts\":');",
									"var jsonData = JSON.parse(responseBody);",
									"if (jsonData.contacts.length > 0) {",
									"    var item = jsonData.contacts[0]",
									"    tests[\"JSON response has key 'firstName'\"] = item.hasOwnProperty('firstName');",
									"    tests[\"JSON response key 'firstName' not Null\"] = item.firstName;",
									"    tests[\"JSON response has key 'lastName'\"] = item.hasOwnProperty('lastName');",
									"    tests[\"JSON response key 'lastName' not Null\"] = item.lastName;",
									"    tests[\"JSON response has key 'email'\"] = item.hasOwnProperty('email');",
									"    tests[\"JSON response key 'email' not Null\"] = item.email;",
									"    tests[\"JSON response has key 'address'\"] = item.hasOwnProperty('address');",
									"    // tests[\"JSON response key 'address' not Null\"] = item.address;",
									"    if (item.roles.length > 0) {",
									"        var role = item.roles[0]",
									"        tests[\"JSON response has key 'role annotationValue'\"] = role.hasOwnProperty('annotationValue');",
									"        tests[\"JSON response key 'role annotationValue' not Null\"] = role.annotationValue !== null;",
									"    }",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "user_token",
								"value": "{{WrongAuth}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/study/{{PubStudyId}}/contacts",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"study",
								"{{PubStudyId}}",
								"contacts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Study Contacts - Priv - Auth -> 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fda77a12-e5bd-4df0-a3df-ab0c32b456de",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Body has contacts\"] = responseBody.has('\"contacts\":');",
									"var jsonData = JSON.parse(responseBody);",
									"if (jsonData.contacts.length > 0) {",
									"    var item = jsonData.contacts[0]",
									"    tests[\"JSON response has key 'firstName'\"] = item.hasOwnProperty('firstName');",
									"    tests[\"JSON response key 'firstName' not Null\"] = item.firstName;",
									"    tests[\"JSON response has key 'lastName'\"] = item.hasOwnProperty('lastName');",
									"    tests[\"JSON response key 'lastName' not Null\"] = item.lastName;",
									"    tests[\"JSON response has key 'email'\"] = item.hasOwnProperty('email');",
									"    tests[\"JSON response key 'email' not Null\"] = item.email;",
									"    tests[\"JSON response has key 'address'\"] = item.hasOwnProperty('address');",
									"    // tests[\"JSON response key 'address' not Null\"] = item.address;",
									"    if (item.roles.length > 0) {",
									"        var role = item.roles[0]",
									"        tests[\"JSON response has key 'role annotationValue'\"] = role.hasOwnProperty('annotationValue');",
									"        tests[\"JSON response key 'role annotationValue' not Null\"] = role.annotationValue !== null;",
									"    }",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "user_token",
								"value": "{{userTokenOK}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/study/{{PrivStudyId}}/contacts",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"study",
								"{{PrivStudyId}}",
								"contacts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Study Contacts - Priv -> 401",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 401\"] = responseCode.code === 401;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
									"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
									"tests[\"Body does NOT contain Study-title\"] = !(responseBody.has('\"StudyContacts\":'));",
									"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/study/{{PrivStudyId}}/contacts",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"study",
								"{{PrivStudyId}}",
								"contacts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Study Contacts - Priv - NoAuth -> 403",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 403\"] = responseCode.code === 403;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
									"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
									"tests[\"Body does NOT contain Study-title\"] = !(responseBody.has('\"StudyContacts\":'));",
									"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "user_token",
								"value": "{{WrongAuth}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/study/{{PrivStudyId}}/contacts",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"study",
								"{{PrivStudyId}}",
								"contacts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Study Contacts - NullId -> 404",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 404\"] = responseCode.code === 404;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
									"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
									"tests[\"Body does NOT contain Study-title\"] = !(responseBody.has('\"StudyContacts\":'));",
									"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/study//contacts",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"study",
								"",
								"contacts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Study Contacts - BadId -> 404",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 404\"] = responseCode.code === 404;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
									"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
									"tests[\"Body does NOT contain Study-title\"] = !(responseBody.has('\"StudyContacts\":'));",
									"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "user_token",
								"value": "{{userTokenOK}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/study/{{BadStudyId}}/contacts",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"study",
								"{{BadStudyId}}",
								"contacts"
							]
						},
						"description": null
					},
					"response": []
				}
			]
		},
		{
			"name": "Get Study Factors",
			"item": [
				{
					"name": "Get Study Factors - Pub -> 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1e464bd8-1a3d-483c-af6b-5d10ebbcb402",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"/// Body",
									"tests[\"Body has factors\"] = responseBody.has('\"factors\":');",
									"var jsonData = JSON.parse(responseBody);",
									"if (jsonData.factors.length > 0) {",
									"    var item = jsonData.factors[0]",
									"    tests[\"JSON response has key 'factorName'\"] = item.hasOwnProperty('factorName');",
									"    tests[\"JSON response key 'factorName' not Null\"] = item.factorName;",
									"    tests[\"JSON response has key 'factorType'\"] = item.hasOwnProperty('factorType');",
									"    tests[\"JSON response key 'factorType' not Null\"] = item.factorType;",
									"    tests[\"JSON response has key 'comments'\"] = item.hasOwnProperty('comments');",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/study/{{PubStudyId}}/factors",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"study",
								"{{PubStudyId}}",
								"factors"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Study Factors - Pub - Auth -> 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "499fc840-59fe-45d3-9485-a2f06b507be3",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"/// Body",
									"tests[\"Body has factors\"] = responseBody.has('\"factors\":');",
									"var jsonData = JSON.parse(responseBody);",
									"if (jsonData.factors.length > 0) {",
									"    var item = jsonData.factors[0]",
									"    tests[\"JSON response has key 'factorName'\"] = item.hasOwnProperty('factorName');",
									"    tests[\"JSON response key 'factorName' not Null\"] = item.factorName;",
									"    tests[\"JSON response has key 'factorType'\"] = item.hasOwnProperty('factorType');",
									"    tests[\"JSON response key 'factorType' not Null\"] = item.factorType;",
									"    tests[\"JSON response has key 'comments'\"] = item.hasOwnProperty('comments');",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "user_token",
								"value": "{{curator}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/study/{{PubStudyId}}/factors",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"study",
								"{{PubStudyId}}",
								"factors"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Study Factors - Pub - NoAuth -> 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8db3fab3-4c57-43fd-81ee-d691eb0b976e",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"/// Body",
									"tests[\"Body has factors\"] = responseBody.has('\"factors\":');",
									"var jsonData = JSON.parse(responseBody);",
									"if (jsonData.factors.length > 0) {",
									"    var item = jsonData.factors[0]",
									"    tests[\"JSON response has key 'factorName'\"] = item.hasOwnProperty('factorName');",
									"    tests[\"JSON response key 'factorName' not Null\"] = item.factorName;",
									"    tests[\"JSON response has key 'factorType'\"] = item.hasOwnProperty('factorType');",
									"    tests[\"JSON response key 'factorType' not Null\"] = item.factorType;",
									"    tests[\"JSON response has key 'comments'\"] = item.hasOwnProperty('comments');",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "user_token",
								"value": "{{WrongAuth}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/study/{{PubStudyId}}/factors",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"study",
								"{{PubStudyId}}",
								"factors"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Study Factors - Priv - Auth -> 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c254eb44-8450-4b02-aa48-c80ab7f75ee9",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"/// Body",
									"tests[\"Body has factors\"] = responseBody.has('\"factors\":');",
									"var jsonData = JSON.parse(responseBody);",
									"if (jsonData.factors.length > 0) {",
									"    var item = jsonData.factors[0]",
									"    tests[\"JSON response has key 'factorName'\"] = item.hasOwnProperty('factorName');",
									"    tests[\"JSON response key 'factorName' not Null\"] = item.factorName;",
									"    tests[\"JSON response has key 'factorType'\"] = item.hasOwnProperty('factorType');",
									"    tests[\"JSON response key 'factorType' not Null\"] = item.factorType;",
									"    tests[\"JSON response has key 'comments'\"] = item.hasOwnProperty('comments');",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "user_token",
								"value": "{{curator}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/study/{{PrivStudyId}}/factors",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"study",
								"{{PrivStudyId}}",
								"factors"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Study Factors - Priv -> 401",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 401\"] = responseCode.code === 401;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
									"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
									"tests[\"Body does NOT contain StudyFactors\"] = !(responseBody.has('\"StudyFactors\":'));",
									"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/study/{{PrivStudyId}}/factors",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"study",
								"{{PrivStudyId}}",
								"factors"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Study Factors - Priv - NoAuth -> 403",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 403\"] = responseCode.code === 403;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
									"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
									"tests[\"Body does NOT contain StudyFactors\"] = !(responseBody.has('\"StudyFactors\":'));",
									"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "user_token",
								"value": "{{WrongAuth}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/study/{{PrivStudyId}}/factors",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"study",
								"{{PrivStudyId}}",
								"factors"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Study Factors - NullId -> 404",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 404\"] = responseCode.code === 404;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
									"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
									"tests[\"Body does NOT contain StudyFactors\"] = !(responseBody.has('\"StudyFactors\":'));",
									"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/study//factors",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"study",
								"",
								"factors"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Study Factors - BadId -> 404",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 404\"] = responseCode.code === 404;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
									"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
									"tests[\"Body does NOT contain StudyFactors\"] = !(responseBody.has('\"StudyFactors\":'));",
									"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "user_token",
								"value": "{{userTokenOK}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/study/{{BadStudyId}}/factors",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"study",
								"{{BadStudyId}}",
								"factors"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Get Study Descriptors",
			"item": [
				{
					"name": "Get Study Descriptors - Pub -> 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ba57992d-d01f-41bb-baa5-2e7d16339caa",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"/// Body",
									"tests[\"Body has descriptors\"] = responseBody.has('\"descriptors\":');",
									"var jsonData = JSON.parse(responseBody);",
									"if (jsonData.descriptors.length > 0) {",
									"    var item = jsonData.descriptors[0]",
									"    tests[\"JSON response has key 'annotationValue'\"] = item.hasOwnProperty('annotationValue');",
									"    tests[\"JSON response key 'annotationValue' not Null\"] = item.annotationValue;",
									"    tests[\"JSON response has key 'termAccession'\"] = item.hasOwnProperty('termAccession');",
									"    tests[\"JSON response key 'termAccession' not Null\"] = item.termAccession;",
									"    tests[\"JSON response has key 'termSource'\"] = item.hasOwnProperty('termSource');",
									"    tests[\"JSON response key 'termSource' not Null\"] = item.termSource;",
									"    tests[\"JSON response has key 'comments'\"] = item.hasOwnProperty('comments');",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/study/{{PubStudyId}}/descriptors",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"study",
								"{{PubStudyId}}",
								"descriptors"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Study Descriptors - Pub - Auth -> 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "52348e5a-ab98-4020-a7dc-c55e7740bbc2",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"/// Body",
									"tests[\"Body has descriptors\"] = responseBody.has('\"descriptors\":');",
									"var jsonData = JSON.parse(responseBody);",
									"if (jsonData.descriptors.length > 0) {",
									"    var item = jsonData.descriptors[0]",
									"    tests[\"JSON response has key 'annotationValue'\"] = item.hasOwnProperty('annotationValue');",
									"    tests[\"JSON response key 'annotationValue' not Null\"] = item.annotationValue;",
									"    tests[\"JSON response has key 'termAccession'\"] = item.hasOwnProperty('termAccession');",
									"    tests[\"JSON response key 'termAccession' not Null\"] = item.termAccession;",
									"    tests[\"JSON response has key 'termSource'\"] = item.hasOwnProperty('termSource');",
									"    tests[\"JSON response key 'termSource' not Null\"] = item.termSource;",
									"    tests[\"JSON response has key 'comments'\"] = item.hasOwnProperty('comments');",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "user_token",
								"value": "{{curator}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/study/{{PubStudyId}}/descriptors",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"study",
								"{{PubStudyId}}",
								"descriptors"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Study Descriptors - Pub - NoAuth -> 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "16c61364-a6f8-46e4-8917-6fbdc7d8c9ed",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"/// Body",
									"tests[\"Body has descriptors\"] = responseBody.has('\"descriptors\":');",
									"var jsonData = JSON.parse(responseBody);",
									"if (jsonData.descriptors.length > 0) {",
									"    var item = jsonData.descriptors[0]",
									"    tests[\"JSON response has key 'annotationValue'\"] = item.hasOwnProperty('annotationValue');",
									"    tests[\"JSON response key 'annotationValue' not Null\"] = item.annotationValue;",
									"    tests[\"JSON response has key 'termAccession'\"] = item.hasOwnProperty('termAccession');",
									"    tests[\"JSON response key 'termAccession' not Null\"] = item.termAccession;",
									"    tests[\"JSON response has key 'termSource'\"] = item.hasOwnProperty('termSource');",
									"    tests[\"JSON response key 'termSource' not Null\"] = item.termSource;",
									"    tests[\"JSON response has key 'comments'\"] = item.hasOwnProperty('comments');",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "user_token",
								"value": "{{WrongAuth}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/study/{{PubStudyId}}/descriptors",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"study",
								"{{PubStudyId}}",
								"descriptors"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Study Descriptors - Priv - Auth -> 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5ec5e923-ce05-4293-b452-2cb3b223c270",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"/// Body",
									"tests[\"Body has descriptors\"] = responseBody.has('\"descriptors\":');",
									"var jsonData = JSON.parse(responseBody);",
									"if (jsonData.descriptors.length > 0) {",
									"    var item = jsonData.descriptors[0]",
									"    tests[\"JSON response has key 'annotationValue'\"] = item.hasOwnProperty('annotationValue');",
									"    tests[\"JSON response key 'annotationValue' not Null\"] = item.annotationValue;",
									"    tests[\"JSON response has key 'termAccession'\"] = item.hasOwnProperty('termAccession');",
									"    tests[\"JSON response key 'termAccession' not Null\"] = item.termAccession;",
									"    tests[\"JSON response has key 'termSource'\"] = item.hasOwnProperty('termSource');",
									"    tests[\"JSON response key 'termSource' not Null\"] = item.termSource;",
									"    tests[\"JSON response has key 'comments'\"] = item.hasOwnProperty('comments');",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "user_token",
								"value": "{{curator}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/study/{{PrivStudyId}}/descriptors",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"study",
								"{{PrivStudyId}}",
								"descriptors"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Study Descriptors - Priv -> 401",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 401\"] = responseCode.code === 401;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
									"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
									"tests[\"Body does NOT contain StudyDescriptors\"] = !(responseBody.has('\"StudyDescriptors\":'));",
									"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/study/{{PrivStudyId}}/descriptors",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"study",
								"{{PrivStudyId}}",
								"descriptors"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Study Descriptors - Priv - NoAuth -> 403",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 403\"] = responseCode.code === 403;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
									"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
									"tests[\"Body does NOT contain StudyDescriptors\"] = !(responseBody.has('\"StudyDescriptors\":'));",
									"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "user_token",
								"value": "{{WrongAuth}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/study/{{PrivStudyId}}/descriptors",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"study",
								"{{PrivStudyId}}",
								"descriptors"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Study Descriptors - NullId -> 404",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 404\"] = responseCode.code === 404;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
									"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
									"tests[\"Body does NOT contain StudyDescriptors\"] = !(responseBody.has('\"StudyDescriptors\":'));",
									"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/study//descriptors",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"study",
								"",
								"descriptors"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Study Descriptors - BadId -> 404",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 404\"] = responseCode.code === 404;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
									"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
									"tests[\"Body does NOT contain StudyDescriptors\"] = !(responseBody.has('\"StudyDescriptors\":'));",
									"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "user_token",
								"value": "{{userTokenOK}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/study/{{BadStudyId}}/descriptors",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"study",
								"{{BadStudyId}}",
								"descriptors"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Get Study Publications",
			"item": [
				{
					"name": "Get Study Publications - Pub -> 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "92b52d68-ce84-442a-89eb-cf46d2c29d8b",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"/// Body",
									"tests[\"Body has publications\"] = responseBody.has('\"publications\":');",
									"var jsonData = JSON.parse(responseBody);",
									"if (jsonData.publications.length > 0) {",
									"    var item = jsonData.publications[0]",
									"    tests[\"JSON response has key 'authorList'\"] = item.hasOwnProperty('authorList');",
									"    tests[\"JSON response key 'authorList' not Null\"] = item.authorList;",
									"    tests[\"JSON response has key 'pubMedID'\"] = item.hasOwnProperty('pubMedID');",
									"    tests[\"JSON response key 'annotationValue' not Null\"] = item.annotationValue;",
									"    tests[\"JSON response has key 'title'\"] = item.hasOwnProperty('title');",
									"    tests[\"JSON response key 'annotationValue' not Null\"] = item.annotationValue;",
									"    tests[\"JSON response has key 'doi'\"] = item.hasOwnProperty('doi');",
									"    tests[\"JSON response key 'annotationValue' not Null\"] = item.annotationValue;",
									"    tests[\"JSON response has key 'comments'\"] = item.hasOwnProperty('comments');",
									"    tests[\"JSON response key 'annotationValue' not Null\"] = item.status;",
									"    tests[\"JSON response has key 'status.annotationValue'\"] = item.status.hasOwnProperty('annotationValue');",
									"    tests[\"JSON response has key 'status.termAccession'\"] = item.status.hasOwnProperty('termAccession');",
									"    tests[\"JSON response has key 'status.termSource'\"] = item.status.hasOwnProperty('termSource');",
									"    tests[\"JSON response has key 'status.comments'\"] = item.status.hasOwnProperty('comments');",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/study/{{PubStudyId}}/publications",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"study",
								"{{PubStudyId}}",
								"publications"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Study Publications - Pub - Auth -> 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "85895a9f-65e3-4e36-8eb0-a40ada173a45",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"/// Body",
									"tests[\"Body has publications\"] = responseBody.has('\"publications\":');",
									"var jsonData = JSON.parse(responseBody);",
									"if (jsonData.publications.length > 0) {",
									"    var item = jsonData.publications[0]",
									"    tests[\"JSON response has key 'authorList'\"] = item.hasOwnProperty('authorList');",
									"    tests[\"JSON response key 'authorList' not Null\"] = item.authorList;",
									"    tests[\"JSON response has key 'pubMedID'\"] = item.hasOwnProperty('pubMedID');",
									"    tests[\"JSON response key 'annotationValue' not Null\"] = item.annotationValue;",
									"    tests[\"JSON response has key 'title'\"] = item.hasOwnProperty('title');",
									"    tests[\"JSON response key 'annotationValue' not Null\"] = item.annotationValue;",
									"    tests[\"JSON response has key 'doi'\"] = item.hasOwnProperty('doi');",
									"    tests[\"JSON response key 'annotationValue' not Null\"] = item.annotationValue;",
									"    tests[\"JSON response has key 'comments'\"] = item.hasOwnProperty('comments');",
									"    tests[\"JSON response key 'annotationValue' not Null\"] = item.status;",
									"    tests[\"JSON response has key 'status.annotationValue'\"] = item.status.hasOwnProperty('annotationValue');",
									"    tests[\"JSON response has key 'status.termAccession'\"] = item.status.hasOwnProperty('termAccession');",
									"    tests[\"JSON response has key 'status.termSource'\"] = item.status.hasOwnProperty('termSource');",
									"    tests[\"JSON response has key 'status.comments'\"] = item.status.hasOwnProperty('comments');",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "user_token",
								"value": "{{curator}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/study/{{PubStudyId}}/publications",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"study",
								"{{PubStudyId}}",
								"publications"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Study Publications - Pub - NoAuth -> 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "abfaf322-37ad-4c5c-9c69-34b59e93a2b1",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"/// Body",
									"tests[\"Body has publications\"] = responseBody.has('\"publications\":');",
									"var jsonData = JSON.parse(responseBody);",
									"if (jsonData.publications.length > 0) {",
									"    var item = jsonData.publications[0]",
									"    tests[\"JSON response has key 'authorList'\"] = item.hasOwnProperty('authorList');",
									"    tests[\"JSON response key 'authorList' not Null\"] = item.authorList;",
									"    tests[\"JSON response has key 'pubMedID'\"] = item.hasOwnProperty('pubMedID');",
									"    tests[\"JSON response key 'annotationValue' not Null\"] = item.annotationValue;",
									"    tests[\"JSON response has key 'title'\"] = item.hasOwnProperty('title');",
									"    tests[\"JSON response key 'annotationValue' not Null\"] = item.annotationValue;",
									"    tests[\"JSON response has key 'doi'\"] = item.hasOwnProperty('doi');",
									"    tests[\"JSON response key 'annotationValue' not Null\"] = item.annotationValue;",
									"    tests[\"JSON response has key 'comments'\"] = item.hasOwnProperty('comments');",
									"    tests[\"JSON response key 'annotationValue' not Null\"] = item.status;",
									"    tests[\"JSON response has key 'status.annotationValue'\"] = item.status.hasOwnProperty('annotationValue');",
									"    tests[\"JSON response has key 'status.termAccession'\"] = item.status.hasOwnProperty('termAccession');",
									"    tests[\"JSON response has key 'status.termSource'\"] = item.status.hasOwnProperty('termSource');",
									"    tests[\"JSON response has key 'status.comments'\"] = item.status.hasOwnProperty('comments');",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "user_token",
								"value": "{{WrongAuth}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/study/{{PubStudyId}}/publications",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"study",
								"{{PubStudyId}}",
								"publications"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Study Publications - Priv - Auth -> 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3c98ee00-3539-4afe-9b69-f5510b6d4b8e",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"/// Body",
									"tests[\"Body has publications\"] = responseBody.has('\"publications\":');",
									"var jsonData = JSON.parse(responseBody);",
									"if (jsonData.publications.length > 0) {",
									"    var item = jsonData.publications[0]",
									"    tests[\"JSON response has key 'authorList'\"] = item.hasOwnProperty('authorList');",
									"    tests[\"JSON response key 'authorList' not Null\"] = item.authorList;",
									"    tests[\"JSON response has key 'pubMedID'\"] = item.hasOwnProperty('pubMedID');",
									"    tests[\"JSON response key 'annotationValue' not Null\"] = item.annotationValue;",
									"    tests[\"JSON response has key 'title'\"] = item.hasOwnProperty('title');",
									"    tests[\"JSON response key 'annotationValue' not Null\"] = item.annotationValue;",
									"    tests[\"JSON response has key 'doi'\"] = item.hasOwnProperty('doi');",
									"    tests[\"JSON response key 'annotationValue' not Null\"] = item.annotationValue;",
									"    tests[\"JSON response has key 'comments'\"] = item.hasOwnProperty('comments');",
									"    tests[\"JSON response key 'annotationValue' not Null\"] = item.status;",
									"    tests[\"JSON response has key 'status.annotationValue'\"] = item.status.hasOwnProperty('annotationValue');",
									"    tests[\"JSON response has key 'status.termAccession'\"] = item.status.hasOwnProperty('termAccession');",
									"    tests[\"JSON response has key 'status.termSource'\"] = item.status.hasOwnProperty('termSource');",
									"    tests[\"JSON response has key 'status.comments'\"] = item.status.hasOwnProperty('comments');",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "user_token",
								"value": "{{curator}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/study/{{PrivStudyId}}/publications",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"study",
								"{{PrivStudyId}}",
								"publications"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Study Publications - Priv -> 401",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 401\"] = responseCode.code === 401;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
									"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
									"tests[\"Body does NOT contain StudyDescriptors\"] = !(responseBody.has('\"StudyDescriptors\":'));",
									"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/study/{{PrivStudyId}}/publications",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"study",
								"{{PrivStudyId}}",
								"publications"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Study Publications - Priv - NoAuth -> 403",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 403\"] = responseCode.code === 403;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
									"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
									"tests[\"Body does NOT contain StudyDescriptors\"] = !(responseBody.has('\"StudyDescriptors\":'));",
									"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "user_token",
								"value": "{{WrongAuth}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/study/{{PrivStudyId}}/publications",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"study",
								"{{PrivStudyId}}",
								"publications"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Study Publications - NullId -> 404",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 404\"] = responseCode.code === 404;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
									"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
									"tests[\"Body does NOT contain StudyDescriptors\"] = !(responseBody.has('\"StudyDescriptors\":'));",
									"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/study//publications",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"study",
								"",
								"publications"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Study Publications - BadId -> 404",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 404\"] = responseCode.code === 404;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
									"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
									"tests[\"Body does NOT contain StudyDescriptors\"] = !(responseBody.has('\"StudyDescriptors\":'));",
									"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "user_token",
								"value": "{{userTokenOK}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/study/{{BadStudyId}}/publications",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"study",
								"{{BadStudyId}}",
								"publications"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Get Study Sources",
			"item": [
				{
					"name": "Get Study Sources - Pub -> 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c5438d9a-dd09-4379-aa9b-a6c1009cb41d",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"/// Body",
									"tests[\"JSON response has key 'sources'\"] = responseBody.has('\"sources\":');",
									"var jsonData = JSON.parse(responseBody);",
									"if (jsonData.sources.length > 0) {",
									"    var item = jsonData.sources[0]",
									"    tests[\"JSON response has key 'name'\"] = item.hasOwnProperty('name');",
									"    tests[\"JSON response key 'name' not Null\"] = item.name;",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/study/{{PubStudyId}}/sources",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"study",
								"{{PubStudyId}}",
								"sources"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Study Sources - Pub - Auth -> 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6b2075e4-44f3-4cf8-b0b2-f8cc4415fb59",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"/// Body",
									"tests[\"JSON response has key 'sources'\"] = responseBody.has('\"sources\":');",
									"var jsonData = JSON.parse(responseBody);",
									"if (jsonData.sources.length > 0) {",
									"    var item = jsonData.sources[0]",
									"    tests[\"JSON response has key 'name'\"] = item.hasOwnProperty('name');",
									"    tests[\"JSON response key 'name' not Null\"] = item.name;",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "user_token",
								"value": "{{curator}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/study/{{PubStudyId}}/sources",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"study",
								"{{PubStudyId}}",
								"sources"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Study Sources - Pub - NoAuth -> 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1f8cc996-3ac5-4290-bd29-59cf4c8267cb",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"/// Body",
									"tests[\"JSON response has key 'sources'\"] = responseBody.has('\"sources\":');",
									"var jsonData = JSON.parse(responseBody);",
									"if (jsonData.sources.length > 0) {",
									"    var item = jsonData.sources[0]",
									"    tests[\"JSON response has key 'name'\"] = item.hasOwnProperty('name');",
									"    tests[\"JSON response key 'name' not Null\"] = item.name;",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "user_token",
								"value": "{{WrongAuth}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/study/{{PubStudyId}}/sources",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"study",
								"{{PubStudyId}}",
								"sources"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Study Sources - Priv - Auth -> 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "03677820-48ff-4113-be4e-042f0612088c",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"/// Body",
									"tests[\"JSON response has key 'sources'\"] = responseBody.has('\"sources\":');",
									"var jsonData = JSON.parse(responseBody);",
									"if (jsonData.sources.length > 0) {",
									"    var item = jsonData.sources[0]",
									"    tests[\"JSON response has key 'name'\"] = item.hasOwnProperty('name');",
									"    tests[\"JSON response key 'name' not Null\"] = item.name;",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "user_token",
								"value": "{{curator}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/study/{{PrivStudyId}}/sources",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"study",
								"{{PrivStudyId}}",
								"sources"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Study Sources - Priv -> 401",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 401\"] = responseCode.code === 401;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
									"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
									"tests[\"Body does NOT contain StudyDescriptors\"] = !(responseBody.has('\"StudyDescriptors\":'));",
									"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/study/{{PrivStudyId}}/sources",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"study",
								"{{PrivStudyId}}",
								"sources"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Study Sources - Priv - NoAuth -> 403",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 403\"] = responseCode.code === 403;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
									"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
									"tests[\"Body does NOT contain StudyDescriptors\"] = !(responseBody.has('\"StudyDescriptors\":'));",
									"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "user_token",
								"value": "{{WrongAuth}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/study/{{PrivStudyId}}/sources",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"study",
								"{{PrivStudyId}}",
								"sources"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Study Sources - NullId -> 404",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 404\"] = responseCode.code === 404;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
									"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
									"tests[\"Body does NOT contain StudyDescriptors\"] = !(responseBody.has('\"StudyDescriptors\":'));",
									"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/study//sources",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"study",
								"",
								"sources"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Study Sources - BadId -> 404",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 404\"] = responseCode.code === 404;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
									"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
									"tests[\"Body does NOT contain StudyDescriptors\"] = !(responseBody.has('\"StudyDescriptors\":'));",
									"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "user_token",
								"value": "{{userTokenOK}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/study/{{BadStudyId}}/sources",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"study",
								"{{BadStudyId}}",
								"sources"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Get Study Source",
			"item": [
				{
					"name": "Get Study Source - Pub -> 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "396921a2-936c-454a-a34e-c0ef58c39fda",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"/// Body",
									"tests[\"Body has source\"] = responseBody.has('\"source\":');",
									"var jsonData = JSON.parse(responseBody);",
									"if (jsonData.source) {",
									"    var item = jsonData.source",
									"    tests[\"JSON response has key 'name'\"] = item.hasOwnProperty('name');",
									"    tests[\"JSON response key 'name' not Null\"] = item.name;",
									"    tests[\"JSON response has key 'characteristics'\"] = item.hasOwnProperty('characteristics');",
									"    tests[\"JSON response key 'characteristics' not Null\"] = item.characteristics;",
									"    tests[\"JSON response has key 'comments'\"] = item.hasOwnProperty('comments');",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/study/{{PubStudyId}}/sources/{{PubSourceName}}",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"study",
								"{{PubStudyId}}",
								"sources",
								"{{PubSourceName}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Study Source - Pub - Auth -> 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cff3b718-1b48-4ea4-9d91-1dbf2fcf051d",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"/// Body",
									"tests[\"Body has source\"] = responseBody.has('\"source\":');",
									"var jsonData = JSON.parse(responseBody);",
									"if (jsonData.source) {",
									"    var item = jsonData.source",
									"    tests[\"JSON response has key 'name'\"] = item.hasOwnProperty('name');",
									"    tests[\"JSON response key 'name' not Null\"] = item.name;",
									"    tests[\"JSON response has key 'characteristics'\"] = item.hasOwnProperty('characteristics');",
									"    tests[\"JSON response key 'characteristics' not Null\"] = item.characteristics;",
									"    tests[\"JSON response has key 'comments'\"] = item.hasOwnProperty('comments');",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "user_token",
								"value": "{{curator}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/study/{{PubStudyId}}/sources/{{PubSourceName}}",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"study",
								"{{PubStudyId}}",
								"sources",
								"{{PubSourceName}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Study Source - Pub - NoAuth -> 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fc808722-082f-407b-a60a-4fde2806f9bd",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"/// Body",
									"tests[\"Body has source\"] = responseBody.has('\"source\":');",
									"var jsonData = JSON.parse(responseBody);",
									"if (jsonData.source) {",
									"    var item = jsonData.source",
									"    tests[\"JSON response has key 'name'\"] = item.hasOwnProperty('name');",
									"    tests[\"JSON response key 'name' not Null\"] = item.name;",
									"    tests[\"JSON response has key 'characteristics'\"] = item.hasOwnProperty('characteristics');",
									"    tests[\"JSON response key 'characteristics' not Null\"] = item.characteristics;",
									"    tests[\"JSON response has key 'comments'\"] = item.hasOwnProperty('comments');",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "user_token",
								"value": "{{WrongAuth}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/study/{{PubStudyId}}/sources/{{PubSourceName}}",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"study",
								"{{PubStudyId}}",
								"sources",
								"{{PubSourceName}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Study Source - Priv - Auth -> 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b583b0e1-8d01-47e9-8d8a-a83275050213",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"/// Body",
									"tests[\"Body has source\"] = responseBody.has('\"source\":');",
									"var jsonData = JSON.parse(responseBody);",
									"if (jsonData.source) {",
									"    var item = jsonData.source",
									"    tests[\"JSON response has key 'name'\"] = item.hasOwnProperty('name');",
									"    tests[\"JSON response key 'name' not Null\"] = item.name;",
									"    tests[\"JSON response has key 'characteristics'\"] = item.hasOwnProperty('characteristics');",
									"    tests[\"JSON response key 'characteristics' not Null\"] = item.characteristics;",
									"    tests[\"JSON response has key 'comments'\"] = item.hasOwnProperty('comments');",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "user_token",
								"value": "{{curator}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/study/{{PrivStudyId}}/sources/{{PrivSourceName}}",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"study",
								"{{PrivStudyId}}",
								"sources",
								"{{PrivSourceName}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Study Source - Priv -> 401",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 401\"] = responseCode.code === 401;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
									"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
									"tests[\"Body does NOT contain StudyDescriptors\"] = !(responseBody.has('\"StudyDescriptors\":'));",
									"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/study/{{PrivStudyId}}/sources/{{PrivSourceName}}",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"study",
								"{{PrivStudyId}}",
								"sources",
								"{{PrivSourceName}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Study Source - Priv - NoAuth -> 403",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 403\"] = responseCode.code === 403;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
									"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
									"tests[\"Body does NOT contain StudyDescriptors\"] = !(responseBody.has('\"StudyDescriptors\":'));",
									"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "user_token",
								"value": "{{WrongAuth}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/study/{{PrivStudyId}}/sources/{{PrivSourceName}}",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"study",
								"{{PrivStudyId}}",
								"sources",
								"{{PrivSourceName}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Study Source - NullId -> 404",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 404\"] = responseCode.code === 404;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
									"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
									"tests[\"Body does NOT contain StudyDescriptors\"] = !(responseBody.has('\"StudyDescriptors\":'));",
									"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/study/{{PubSourceName}}/sources/",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"study",
								"{{PubSourceName}}",
								"sources",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Study Source - BadId -> 404",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 404\"] = responseCode.code === 404;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
									"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
									"tests[\"Body does NOT contain StudyDescriptors\"] = !(responseBody.has('\"StudyDescriptors\":'));",
									"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/study/{{PubStudyId}}/sources/{{BadSourceName}}",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"study",
								"{{PubStudyId}}",
								"sources",
								"{{BadSourceName}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Get Study Samples",
			"item": [
				{
					"name": "Get Study Samples - Pub -> 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "556b7c49-07b6-46be-a016-658346a91cd6",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"/// Body",
									"tests[\"JSON response has key 'samples'\"] = responseBody.has('\"samples\":');",
									"var jsonData = JSON.parse(responseBody);",
									"if (jsonData.samples.length > 0) {",
									"    var item = jsonData.samples[0]",
									"    tests[\"JSON response has key 'name'\"] = item.hasOwnProperty('name');",
									"    tests[\"JSON response key 'name' not Null\"] = item.name;",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/study/{{PubStudyId}}/samples",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"study",
								"{{PubStudyId}}",
								"samples"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Study Samples - Pub - Auth -> 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9fb9fada-119b-4c82-963e-dcb601181c02",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"/// Body",
									"tests[\"JSON response has key 'samples'\"] = responseBody.has('\"samples\":');",
									"var jsonData = JSON.parse(responseBody);",
									"if (jsonData.samples.length > 0) {",
									"    var item = jsonData.samples[0]",
									"    tests[\"JSON response has key 'name'\"] = item.hasOwnProperty('name');",
									"    tests[\"JSON response key 'name' not Null\"] = item.name;",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "user_token",
								"value": "{{curator}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/study/{{PubStudyId}}/samples",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"study",
								"{{PubStudyId}}",
								"samples"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Study Samples - Pub - NoAuth -> 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "375db50f-33d1-4aae-993a-1a85d2805f91",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"/// Body",
									"tests[\"JSON response has key 'samples'\"] = responseBody.has('\"samples\":');",
									"var jsonData = JSON.parse(responseBody);",
									"if (jsonData.samples.length > 0) {",
									"    var item = jsonData.samples[0]",
									"    tests[\"JSON response has key 'name'\"] = item.hasOwnProperty('name');",
									"    tests[\"JSON response key 'name' not Null\"] = item.name;",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "user_token",
								"value": "{{WrongAuth}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/study/{{PubStudyId}}/samples",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"study",
								"{{PubStudyId}}",
								"samples"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Study Samples - Priv - Auth -> 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1f3f0f11-9cf4-419b-832d-f14ac40c23db",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"/// Body",
									"tests[\"JSON response has key 'samples'\"] = responseBody.has('\"samples\":');",
									"var jsonData = JSON.parse(responseBody);",
									"if (jsonData.samples.length > 0) {",
									"    var item = jsonData.samples[0]",
									"    tests[\"JSON response has key 'name'\"] = item.hasOwnProperty('name');",
									"    tests[\"JSON response key 'name' not Null\"] = item.name;",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "user_token",
								"value": "{{curator}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/study/{{PrivStudyId}}/samples",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"study",
								"{{PrivStudyId}}",
								"samples"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Study Samples - Priv -> 401",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 401\"] = responseCode.code === 401;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
									"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
									"tests[\"Body does NOT contain StudyDescriptors\"] = !(responseBody.has('\"StudyDescriptors\":'));",
									"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/study/{{PrivStudyId}}/samples",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"study",
								"{{PrivStudyId}}",
								"samples"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Study Samples - Priv - NoAuth -> 403",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 403\"] = responseCode.code === 403;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
									"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
									"tests[\"Body does NOT contain StudyDescriptors\"] = !(responseBody.has('\"StudyDescriptors\":'));",
									"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "user_token",
								"value": "{{WrongAuth}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/study/{{PrivStudyId}}/samples",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"study",
								"{{PrivStudyId}}",
								"samples"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Study Samples - NullId -> 404",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 404\"] = responseCode.code === 404;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
									"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
									"tests[\"Body does NOT contain StudyDescriptors\"] = !(responseBody.has('\"StudyDescriptors\":'));",
									"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/study//samples",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"study",
								"",
								"samples"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Study Samples - BadId -> 404",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 404\"] = responseCode.code === 404;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
									"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
									"tests[\"Body does NOT contain StudyDescriptors\"] = !(responseBody.has('\"StudyDescriptors\":'));",
									"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "user_token",
								"value": "{{userTokenOK}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/study/{{BadStudyId}}/samples",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"study",
								"{{BadStudyId}}",
								"samples"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Get Study Sample",
			"item": [
				{
					"name": "Get Study Sample - Pub -> 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9102067a-5ebe-4581-b99e-ba3bb877676f",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"/// Body",
									"tests[\"JSON response has key 'sample'\"] = responseBody.has('\"sample\":');",
									"var jsonData = JSON.parse(responseBody);",
									"if (jsonData.sample) {",
									"    var item = jsonData.sample",
									"    tests[\"JSON response has key 'name'\"] = item.hasOwnProperty('name');",
									"    tests[\"JSON response key 'name' not Null\"] = item.name;",
									"    tests[\"JSON response has key 'characteristics'\"] = item.hasOwnProperty('characteristics');",
									"    tests[\"JSON response key 'characteristics' not Null\"] = item.characteristics;",
									"    tests[\"JSON response has key 'factorValues'\"] = item.hasOwnProperty('factorValues');",
									"    tests[\"JSON response key 'factorValues' not Null\"] = item.factorValues;",
									"    tests[\"JSON response has key 'derives_from'\"] = item.hasOwnProperty('derives_from');",
									"    tests[\"JSON response key 'derives_from' not Null\"] = item.derives_from;",
									"    tests[\"JSON response has key 'comments'\"] = item.hasOwnProperty('comments');",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/study/{{PubStudyId}}/samples/{{PubSourceName}}",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"study",
								"{{PubStudyId}}",
								"samples",
								"{{PubSourceName}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Study Sample - Pub - Auth -> 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f604a53c-5d2a-4f99-aff8-81813df05aaa",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"/// Body",
									"tests[\"JSON response has key 'sample'\"] = responseBody.has('\"sample\":');",
									"var jsonData = JSON.parse(responseBody);",
									"if (jsonData.sample) {",
									"    var item = jsonData.sample",
									"    tests[\"JSON response has key 'name'\"] = item.hasOwnProperty('name');",
									"    tests[\"JSON response key 'name' not Null\"] = item.name;",
									"    tests[\"JSON response has key 'characteristics'\"] = item.hasOwnProperty('characteristics');",
									"    tests[\"JSON response key 'characteristics' not Null\"] = item.characteristics;",
									"    tests[\"JSON response has key 'factorValues'\"] = item.hasOwnProperty('factorValues');",
									"    tests[\"JSON response key 'factorValues' not Null\"] = item.factorValues;",
									"    tests[\"JSON response has key 'derives_from'\"] = item.hasOwnProperty('derives_from');",
									"    tests[\"JSON response key 'derives_from' not Null\"] = item.derives_from;",
									"    tests[\"JSON response has key 'comments'\"] = item.hasOwnProperty('comments');",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "user_token",
								"value": "{{curator}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/study/{{PubStudyId}}/samples/{{PubSourceName}}",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"study",
								"{{PubStudyId}}",
								"samples",
								"{{PubSourceName}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Study Sample - Pub - NoAuth -> 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "de573763-fbcb-4e84-8322-047353978e3a",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"/// Body",
									"tests[\"JSON response has key 'sample'\"] = responseBody.has('\"sample\":');",
									"var jsonData = JSON.parse(responseBody);",
									"if (jsonData.sample) {",
									"    var item = jsonData.sample",
									"    tests[\"JSON response has key 'name'\"] = item.hasOwnProperty('name');",
									"    tests[\"JSON response key 'name' not Null\"] = item.name;",
									"    tests[\"JSON response has key 'characteristics'\"] = item.hasOwnProperty('characteristics');",
									"    tests[\"JSON response key 'characteristics' not Null\"] = item.characteristics;",
									"    tests[\"JSON response has key 'factorValues'\"] = item.hasOwnProperty('factorValues');",
									"    tests[\"JSON response key 'factorValues' not Null\"] = item.factorValues;",
									"    tests[\"JSON response has key 'derives_from'\"] = item.hasOwnProperty('derives_from');",
									"    tests[\"JSON response key 'derives_from' not Null\"] = item.derives_from;",
									"    tests[\"JSON response has key 'comments'\"] = item.hasOwnProperty('comments');",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "user_token",
								"value": "{{WrongAuth}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/study/{{PubStudyId}}/samples/{{PubSourceName}}",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"study",
								"{{PubStudyId}}",
								"samples",
								"{{PubSourceName}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Study Sample - Priv - Auth -> 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cd9f63b3-646e-4861-875d-8c6b07486e9e",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"/// Body",
									"tests[\"JSON response has key 'sample'\"] = responseBody.has('\"sample\":');",
									"var jsonData = JSON.parse(responseBody);",
									"if (jsonData.sample) {",
									"    var item = jsonData.sample",
									"    tests[\"JSON response has key 'name'\"] = item.hasOwnProperty('name');",
									"    tests[\"JSON response key 'name' not Null\"] = item.name;",
									"    tests[\"JSON response has key 'characteristics'\"] = item.hasOwnProperty('characteristics');",
									"    tests[\"JSON response key 'characteristics' not Null\"] = item.characteristics;",
									"    tests[\"JSON response has key 'factorValues'\"] = item.hasOwnProperty('factorValues');",
									"    tests[\"JSON response key 'factorValues' not Null\"] = item.factorValues;",
									"    tests[\"JSON response has key 'derives_from'\"] = item.hasOwnProperty('derives_from');",
									"    tests[\"JSON response key 'derives_from' not Null\"] = item.derives_from;",
									"    tests[\"JSON response has key 'comments'\"] = item.hasOwnProperty('comments');",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "user_token",
								"value": "{{curator}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/study/{{PrivStudyId}}/samples/{{PrivSampleName}}",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"study",
								"{{PrivStudyId}}",
								"samples",
								"{{PrivSampleName}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Study Sample - Priv -> 401",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 401\"] = responseCode.code === 401;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
									"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
									"tests[\"Body does NOT contain StudyDescriptors\"] = !(responseBody.has('\"StudyDescriptors\":'));",
									"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/study/{{PrivStudyId}}/samples/{{PrivSourceName}}",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"study",
								"{{PrivStudyId}}",
								"samples",
								"{{PrivSourceName}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Study Sample - Priv - NoAuth -> 403",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 403\"] = responseCode.code === 403;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
									"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
									"tests[\"Body does NOT contain StudyDescriptors\"] = !(responseBody.has('\"StudyDescriptors\":'));",
									"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "user_token",
								"value": "{{WrongAuth}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/study/{{PrivStudyId}}/samples/{{PrivSourceName}}",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"study",
								"{{PrivStudyId}}",
								"samples",
								"{{PrivSourceName}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Study Sample - NullId -> 404",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 404\"] = responseCode.code === 404;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
									"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
									"tests[\"Body does NOT contain StudyDescriptors\"] = !(responseBody.has('\"StudyDescriptors\":'));",
									"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/study/{{PubSourceName}}/samples/",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"study",
								"{{PubSourceName}}",
								"samples",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Study Sample - BadId -> 404",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 404\"] = responseCode.code === 404;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
									"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
									"tests[\"Body does NOT contain StudyDescriptors\"] = !(responseBody.has('\"StudyDescriptors\":'));",
									"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/study/{{PubStudyId}}/samples/{{BadSourceName}}",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"study",
								"{{PubStudyId}}",
								"samples",
								"{{BadSourceName}}"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "dcaa500f-aec0-4e6a-b155-aff881b0d56e",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "42ac4b2e-79cd-40cb-979b-6ef7c4017555",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}