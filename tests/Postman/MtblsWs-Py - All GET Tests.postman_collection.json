{
	"info": {
		"name": "MtblsWs-Py - All GET Tests",
		"_postman_id": "0a0870b9-42ab-1db4-3102-55061fad2677",
		"description": "Only GET methods, those that can be run safely as they do not modify data in the server.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Get WS basic info",
			"description": "",
			"item": [
				{
					"name": "About WS -> 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2066887c-1c43-4a97-bf77-2cfecb1d47d5",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"/// Body",
									"tests[\"Body has AboutWS\"] = responseBody.has('\"AboutWS\":');",
									"var jsonData = JSON.parse(responseBody);",
									"if (jsonData.AboutWS) {",
									"    var item = jsonData.AboutWS",
									"    tests[\"JSON response has key 'WsApi'\"] = item.hasOwnProperty('WsApi');",
									"    tests[\"JSON response key 'WsApi' not Null\"] = item.WsApi;",
									"    var api = item.WsApi",
									"    if(api){",
									"        tests[\"JSON response has key 'ApiSpecification'\"] = api.hasOwnProperty('ApiSpecification');",
									"        tests[\"JSON response key 'ApiSpecification' not Null\"] = api.ApiSpecification;",
									"        tests[\"JSON response has key 'ApiVersion'\"] = api.hasOwnProperty('ApiVersion');",
									"        tests[\"JSON response key 'ApiVersion' not Null\"] = api.ApiVersion;",
									"        tests[\"JSON response has key 'ApiDocumentation'\"] = api.hasOwnProperty('ApiDocumentation');",
									"        tests[\"JSON response key 'ApiDocumentation' not Null\"] = api.ApiDocumentation;",
									"    }",
									"    tests[\"JSON response has key 'WsApp'\"] = item.hasOwnProperty('WsApp');",
									"    tests[\"JSON response key 'WsApp' not Null\"] = item.WsApp;",
									"    var app = item.WsApp",
									"    if(app){",
									"        tests[\"JSON response has key 'WsName'\"] = app.hasOwnProperty('WsName');",
									"        tests[\"JSON response key 'WsName' not Null\"] = app.WsName;",
									"        tests[\"JSON response has key 'WsVersion'\"] = app.hasOwnProperty('WsVersion');",
									"        tests[\"JSON response key 'WsVersion' not Null\"] = app.WsVersion;",
									"        tests[\"JSON response has key 'WsDescription'\"] = app.hasOwnProperty('WsDescription');",
									"        tests[\"JSON response key 'WsDescription' not Null\"] = app.WsDescription;",
									"        tests[\"JSON response has key 'WsURL'\"] = app.hasOwnProperty('WsURL');",
									"        tests[\"JSON response key 'WsURL' not Null\"] = app.WsURL;",
									"    }",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws"
							]
						},
						"description": null
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "3658a574-0809-452e-8424-55e7e1452871",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "f81f1bb1-e670-457e-8a70-762ff6cfd858",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Get Studies",
			"description": null,
			"item": [
				{
					"name": "Get All Public Studies - Pub -> 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "89c4fe70-aab5-44e3-85d3-dac1711cd67e",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Body has Study-description\"] = responseBody.has('\"content\":');",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"JSON response key 'content' not Null\"] = jsonData.content;",
									"",
									"tests[\"No error reported\"] = responseBody.has('\"err\": null');",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "Get All Public Studies - Pub - Auth -> 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1a2c73b9-61ec-4ef2-b9b3-470214fd25be",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Body has Study-description\"] = responseBody.has('\"content\":');",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"JSON response key 'content' not Null\"] = jsonData.content;",
									"",
									"tests[\"No error reported\"] = responseBody.has('\"err\": null');",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "user_token",
								"value": "{{curator}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "Get All Public Studies - Pub - NoAuth -> 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "da861389-cc53-41b3-880b-af2cb90240aa",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Body has Study-description\"] = responseBody.has('\"content\":');",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"JSON response key 'content' not Null\"] = jsonData.content;",
									"",
									"tests[\"No error reported\"] = responseBody.has('\"err\": null');",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "user_token",
								"value": "{{WrongAuth}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "Get All Public Studies - BadId -> 404",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0b58817a-af64-4f46-a087-4561e0fe07b0",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 404\"] = responseCode.code === 404;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
									"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
									"tests[\"Body does NOT contain Study-description\"] = !(responseBody.has('\"Study-description\":'));",
									"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies",
								""
							]
						},
						"description": null
					},
					"response": []
				}
			]
		},
		{
			"name": "Get Single Study",
			"description": null,
			"item": [
				{
					"name": "Get Single Study - Pub -> 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "79f8c551-8d0b-4e8a-ac7a-96a90f9f6d63",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Body has Title Investigation\"] = responseBody.has('\"title\": \"Investigation\"');",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"if (jsonData.investigation) {",
									"    var item = jsonData.investigation",
									"    tests[\"JSON response has key 'identifier'\"] = item.hasOwnProperty('identifier');",
									"    tests[\"JSON response key 'identifier' not Null\"] = item.identifier;",
									"    tests[\"JSON response has key 'title'\"] = item.hasOwnProperty('title');",
									"    tests[\"JSON response key 'title' === 'Investigation'\"] = item.title === 'Investigation';",
									"    tests[\"JSON response has key 'description'\"] = item.hasOwnProperty('description');",
									"    // tests[\"JSON response key 'description' not Null\"] = item.description;",
									"    tests[\"JSON response has key 'ontologySourceReferences'\"] = item.hasOwnProperty('ontologySourceReferences');",
									"    tests[\"JSON response key 'ontologySourceReferences' not Null\"] = item.ontologySourceReferences;",
									"    tests[\"JSON response has key 'people'\"] = item.hasOwnProperty('people');",
									"    tests[\"JSON response key 'people' not Null\"] = item.people;",
									"    tests[\"JSON response has key 'publicReleaseDate'\"] = item.hasOwnProperty('publicReleaseDate');",
									"    // tests[\"JSON response key 'publicReleaseDate' not Null\"] = item.publicReleaseDate;",
									"    tests[\"JSON response has key 'publications'\"] = item.hasOwnProperty('publications');",
									"    tests[\"JSON response key 'publications' not Null\"] = item.publications;",
									"    tests[\"JSON response has key 'submissionDate'\"] = item.hasOwnProperty('submissionDate');",
									"    // tests[\"JSON response key 'submissionDate' not Null\"] = item.submissionDate;",
									"    tests[\"JSON response has key 'comments'\"] = item.hasOwnProperty('comments');",
									"    tests[\"JSON response key 'comments' not Null\"] = item.comments",
									"    ",
									"    tests[\"JSON response has key 'studies'\"] = item.hasOwnProperty('studies');",
									"    tests[\"JSON response has key 'studies' not Null\"] = item.studies;",
									"    if (item.studies.length > 0) {",
									"        var std = item.studies[0]",
									"        tests[\"JSON response has key 'identifier'\"] = std.hasOwnProperty('identifier');",
									"        tests[\"JSON response has key 'identifier' not Null\"] = std.identifier;",
									"        tests[\"JSON response has key 'title'\"] = std.hasOwnProperty('title');",
									"        tests[\"JSON response has key 'title' not Null\"] = std.title;",
									"        tests[\"JSON response has key 'description'\"] = std.hasOwnProperty('description');",
									"        tests[\"JSON response has key 'description' not Null\"] = std.description;",
									"        tests[\"JSON response has key 'filename'\"] = std.hasOwnProperty('filename');",
									"        tests[\"JSON response has key 'filename' not Null\"] = std.filename;",
									"        tests[\"JSON response has key 'publicReleaseDate'\"] = std.hasOwnProperty('publicReleaseDate');",
									"        tests[\"JSON response has key 'publicReleaseDate' not Null\"] = std.publicReleaseDate;",
									"        tests[\"JSON response has key 'publicReleaseDate'\"] = std.hasOwnProperty('publicReleaseDate');",
									"        tests[\"JSON response has key 'publicReleaseDate' not Null\"] = std.publicReleaseDate;",
									"        tests[\"JSON response has key 'submissionDate'\"] = std.hasOwnProperty('submissionDate');",
									"        tests[\"JSON response has key 'submissionDate' not Null\"] = std.submissionDate;",
									"        tests[\"JSON response has key 'people'\"] = std.hasOwnProperty('people');",
									"        tests[\"JSON response has key 'people' not Null\"] = std.people;",
									"        tests[\"JSON response has key 'protocols'\"] = std.hasOwnProperty('protocols');",
									"        tests[\"JSON response has key 'protocols' not Null\"] = std.protocols;",
									"        tests[\"JSON response has key 'studyDesignDescriptors'\"] = std.hasOwnProperty('studyDesignDescriptors');",
									"        tests[\"JSON response has key 'studyDesignDescriptors' not Null\"] = std.studyDesignDescriptors;",
									"        tests[\"JSON response has key 'factors'\"] = std.hasOwnProperty('factors');",
									"        tests[\"JSON response has key 'factors' not Null\"] = std.factors;",
									"        tests[\"JSON response has key 'materials'\"] = std.hasOwnProperty('materials');",
									"        tests[\"JSON response has key 'materials' not Null\"] = std.materials;",
									"        tests[\"JSON response has key 'publications'\"] = std.hasOwnProperty('publications');",
									"        tests[\"JSON response has key 'publications' not Null\"] = std.publications;",
									"        tests[\"JSON response has key 'unitCategories'\"] = std.hasOwnProperty('unitCategories');",
									"        tests[\"JSON response has key 'unitCategories' not Null\"] = std.unitCategories;",
									"        tests[\"JSON response has key 'characteristicCategories'\"] = std.hasOwnProperty('characteristicCategories');",
									"        tests[\"JSON response has key 'characteristicCategories' not Null\"] = std.characteristicCategories;",
									"        tests[\"JSON response has key 'processSequence'\"] = std.hasOwnProperty('processSequence');",
									"        tests[\"JSON response has key 'processSequence' not Null\"] = std.processSequence;",
									"        tests[\"JSON response has key 'comments'\"] = std.hasOwnProperty('comments');",
									"    }",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies",
								"{{PubStudyId}}"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "Get Single Study - Pub - Auth -> 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c81cb3a8-6257-487f-b254-d0ee28bfc5cf",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Body has Title Investigation\"] = responseBody.has('\"title\": \"Investigation\"');",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"if (jsonData.investigation) {",
									"    var item = jsonData.investigation",
									"    tests[\"JSON response has key 'identifier'\"] = item.hasOwnProperty('identifier');",
									"    tests[\"JSON response key 'identifier' not Null\"] = item.identifier;",
									"    tests[\"JSON response has key 'title'\"] = item.hasOwnProperty('title');",
									"    tests[\"JSON response key 'title' === 'Investigation'\"] = item.title === 'Investigation';",
									"    tests[\"JSON response has key 'description'\"] = item.hasOwnProperty('description');",
									"    // tests[\"JSON response key 'description' not Null\"] = item.description;",
									"    tests[\"JSON response has key 'ontologySourceReferences'\"] = item.hasOwnProperty('ontologySourceReferences');",
									"    tests[\"JSON response key 'ontologySourceReferences' not Null\"] = item.ontologySourceReferences;",
									"    tests[\"JSON response has key 'people'\"] = item.hasOwnProperty('people');",
									"    tests[\"JSON response key 'people' not Null\"] = item.people;",
									"    tests[\"JSON response has key 'publicReleaseDate'\"] = item.hasOwnProperty('publicReleaseDate');",
									"    // tests[\"JSON response key 'publicReleaseDate' not Null\"] = item.publicReleaseDate;",
									"    tests[\"JSON response has key 'publications'\"] = item.hasOwnProperty('publications');",
									"    tests[\"JSON response key 'publications' not Null\"] = item.publications;",
									"    tests[\"JSON response has key 'submissionDate'\"] = item.hasOwnProperty('submissionDate');",
									"    // tests[\"JSON response key 'submissionDate' not Null\"] = item.submissionDate;",
									"    tests[\"JSON response has key 'comments'\"] = item.hasOwnProperty('comments');",
									"    tests[\"JSON response key 'comments' not Null\"] = item.comments",
									"    ",
									"    tests[\"JSON response has key 'studies'\"] = item.hasOwnProperty('studies');",
									"    tests[\"JSON response has key 'studies' not Null\"] = item.studies;",
									"    if (item.studies.length > 0) {",
									"        var std = item.studies[0]",
									"        tests[\"JSON response has key 'identifier'\"] = std.hasOwnProperty('identifier');",
									"        tests[\"JSON response has key 'identifier' not Null\"] = std.identifier;",
									"        tests[\"JSON response has key 'title'\"] = std.hasOwnProperty('title');",
									"        tests[\"JSON response has key 'title' not Null\"] = std.title;",
									"        tests[\"JSON response has key 'description'\"] = std.hasOwnProperty('description');",
									"        tests[\"JSON response has key 'description' not Null\"] = std.description;",
									"        tests[\"JSON response has key 'filename'\"] = std.hasOwnProperty('filename');",
									"        tests[\"JSON response has key 'filename' not Null\"] = std.filename;",
									"        tests[\"JSON response has key 'publicReleaseDate'\"] = std.hasOwnProperty('publicReleaseDate');",
									"        tests[\"JSON response has key 'publicReleaseDate' not Null\"] = std.publicReleaseDate;",
									"        tests[\"JSON response has key 'publicReleaseDate'\"] = std.hasOwnProperty('publicReleaseDate');",
									"        tests[\"JSON response has key 'publicReleaseDate' not Null\"] = std.publicReleaseDate;",
									"        tests[\"JSON response has key 'submissionDate'\"] = std.hasOwnProperty('submissionDate');",
									"        tests[\"JSON response has key 'submissionDate' not Null\"] = std.submissionDate;",
									"        tests[\"JSON response has key 'people'\"] = std.hasOwnProperty('people');",
									"        tests[\"JSON response has key 'people' not Null\"] = std.people;",
									"        tests[\"JSON response has key 'protocols'\"] = std.hasOwnProperty('protocols');",
									"        tests[\"JSON response has key 'protocols' not Null\"] = std.protocols;",
									"        tests[\"JSON response has key 'studyDesignDescriptors'\"] = std.hasOwnProperty('studyDesignDescriptors');",
									"        tests[\"JSON response has key 'studyDesignDescriptors' not Null\"] = std.studyDesignDescriptors;",
									"        tests[\"JSON response has key 'factors'\"] = std.hasOwnProperty('factors');",
									"        tests[\"JSON response has key 'factors' not Null\"] = std.factors;",
									"        tests[\"JSON response has key 'materials'\"] = std.hasOwnProperty('materials');",
									"        tests[\"JSON response has key 'materials' not Null\"] = std.materials;",
									"        tests[\"JSON response has key 'publications'\"] = std.hasOwnProperty('publications');",
									"        tests[\"JSON response has key 'publications' not Null\"] = std.publications;",
									"        tests[\"JSON response has key 'unitCategories'\"] = std.hasOwnProperty('unitCategories');",
									"        tests[\"JSON response has key 'unitCategories' not Null\"] = std.unitCategories;",
									"        tests[\"JSON response has key 'characteristicCategories'\"] = std.hasOwnProperty('characteristicCategories');",
									"        tests[\"JSON response has key 'characteristicCategories' not Null\"] = std.characteristicCategories;",
									"        tests[\"JSON response has key 'processSequence'\"] = std.hasOwnProperty('processSequence');",
									"        tests[\"JSON response has key 'processSequence' not Null\"] = std.processSequence;",
									"        tests[\"JSON response has key 'comments'\"] = std.hasOwnProperty('comments');",
									"    }",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "user_token",
								"value": "{{curator}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies",
								"{{PubStudyId}}"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "Get Single Study - Pub - NoAuth -> 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "369c02f5-0db3-42d3-ae75-958ba5b184c6",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Body has Title Investigation\"] = responseBody.has('\"title\": \"Investigation\"');",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"if (jsonData.investigation) {",
									"    var item = jsonData.investigation",
									"    tests[\"JSON response has key 'identifier'\"] = item.hasOwnProperty('identifier');",
									"    tests[\"JSON response key 'identifier' not Null\"] = item.identifier;",
									"    tests[\"JSON response has key 'title'\"] = item.hasOwnProperty('title');",
									"    tests[\"JSON response key 'title' === 'Investigation'\"] = item.title === 'Investigation';",
									"    tests[\"JSON response has key 'description'\"] = item.hasOwnProperty('description');",
									"    // tests[\"JSON response key 'description' not Null\"] = item.description;",
									"    tests[\"JSON response has key 'ontologySourceReferences'\"] = item.hasOwnProperty('ontologySourceReferences');",
									"    tests[\"JSON response key 'ontologySourceReferences' not Null\"] = item.ontologySourceReferences;",
									"    tests[\"JSON response has key 'people'\"] = item.hasOwnProperty('people');",
									"    tests[\"JSON response key 'people' not Null\"] = item.people;",
									"    tests[\"JSON response has key 'publicReleaseDate'\"] = item.hasOwnProperty('publicReleaseDate');",
									"    // tests[\"JSON response key 'publicReleaseDate' not Null\"] = item.publicReleaseDate;",
									"    tests[\"JSON response has key 'publications'\"] = item.hasOwnProperty('publications');",
									"    tests[\"JSON response key 'publications' not Null\"] = item.publications;",
									"    tests[\"JSON response has key 'submissionDate'\"] = item.hasOwnProperty('submissionDate');",
									"    // tests[\"JSON response key 'submissionDate' not Null\"] = item.submissionDate;",
									"    tests[\"JSON response has key 'comments'\"] = item.hasOwnProperty('comments');",
									"    tests[\"JSON response key 'comments' not Null\"] = item.comments",
									"    ",
									"    tests[\"JSON response has key 'studies'\"] = item.hasOwnProperty('studies');",
									"    tests[\"JSON response has key 'studies' not Null\"] = item.studies;",
									"    if (item.studies.length > 0) {",
									"        var std = item.studies[0]",
									"        tests[\"JSON response has key 'identifier'\"] = std.hasOwnProperty('identifier');",
									"        tests[\"JSON response has key 'identifier' not Null\"] = std.identifier;",
									"        tests[\"JSON response has key 'title'\"] = std.hasOwnProperty('title');",
									"        tests[\"JSON response has key 'title' not Null\"] = std.title;",
									"        tests[\"JSON response has key 'description'\"] = std.hasOwnProperty('description');",
									"        tests[\"JSON response has key 'description' not Null\"] = std.description;",
									"        tests[\"JSON response has key 'filename'\"] = std.hasOwnProperty('filename');",
									"        tests[\"JSON response has key 'filename' not Null\"] = std.filename;",
									"        tests[\"JSON response has key 'publicReleaseDate'\"] = std.hasOwnProperty('publicReleaseDate');",
									"        tests[\"JSON response has key 'publicReleaseDate' not Null\"] = std.publicReleaseDate;",
									"        tests[\"JSON response has key 'publicReleaseDate'\"] = std.hasOwnProperty('publicReleaseDate');",
									"        tests[\"JSON response has key 'publicReleaseDate' not Null\"] = std.publicReleaseDate;",
									"        tests[\"JSON response has key 'submissionDate'\"] = std.hasOwnProperty('submissionDate');",
									"        tests[\"JSON response has key 'submissionDate' not Null\"] = std.submissionDate;",
									"        tests[\"JSON response has key 'people'\"] = std.hasOwnProperty('people');",
									"        tests[\"JSON response has key 'people' not Null\"] = std.people;",
									"        tests[\"JSON response has key 'protocols'\"] = std.hasOwnProperty('protocols');",
									"        tests[\"JSON response has key 'protocols' not Null\"] = std.protocols;",
									"        tests[\"JSON response has key 'studyDesignDescriptors'\"] = std.hasOwnProperty('studyDesignDescriptors');",
									"        tests[\"JSON response has key 'studyDesignDescriptors' not Null\"] = std.studyDesignDescriptors;",
									"        tests[\"JSON response has key 'factors'\"] = std.hasOwnProperty('factors');",
									"        tests[\"JSON response has key 'factors' not Null\"] = std.factors;",
									"        tests[\"JSON response has key 'materials'\"] = std.hasOwnProperty('materials');",
									"        tests[\"JSON response has key 'materials' not Null\"] = std.materials;",
									"        tests[\"JSON response has key 'publications'\"] = std.hasOwnProperty('publications');",
									"        tests[\"JSON response has key 'publications' not Null\"] = std.publications;",
									"        tests[\"JSON response has key 'unitCategories'\"] = std.hasOwnProperty('unitCategories');",
									"        tests[\"JSON response has key 'unitCategories' not Null\"] = std.unitCategories;",
									"        tests[\"JSON response has key 'characteristicCategories'\"] = std.hasOwnProperty('characteristicCategories');",
									"        tests[\"JSON response has key 'characteristicCategories' not Null\"] = std.characteristicCategories;",
									"        tests[\"JSON response has key 'processSequence'\"] = std.hasOwnProperty('processSequence');",
									"        tests[\"JSON response has key 'processSequence' not Null\"] = std.processSequence;",
									"        tests[\"JSON response has key 'comments'\"] = std.hasOwnProperty('comments');",
									"    }",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "user_token",
								"value": "{{WrongAuth}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies",
								"{{PubStudyId}}"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "Get Single Study - Priv - Auth -> 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5b80845a-60a8-4399-aa0d-3bb998b9b675",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Body has Title Investigation\"] = responseBody.has('\"title\": \"Investigation\"');",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"if (jsonData.investigation) {",
									"    var item = jsonData.investigation",
									"    tests[\"JSON response has key 'identifier'\"] = item.hasOwnProperty('identifier');",
									"    tests[\"JSON response key 'identifier' not Null\"] = item.identifier;",
									"    tests[\"JSON response has key 'title'\"] = item.hasOwnProperty('title');",
									"    tests[\"JSON response key 'title' === 'Investigation'\"] = item.title === 'Investigation';",
									"    tests[\"JSON response has key 'description'\"] = item.hasOwnProperty('description');",
									"    // tests[\"JSON response key 'description' not Null\"] = item.description;",
									"    tests[\"JSON response has key 'ontologySourceReferences'\"] = item.hasOwnProperty('ontologySourceReferences');",
									"    tests[\"JSON response key 'ontologySourceReferences' not Null\"] = item.ontologySourceReferences;",
									"    tests[\"JSON response has key 'people'\"] = item.hasOwnProperty('people');",
									"    tests[\"JSON response key 'people' not Null\"] = item.people;",
									"    tests[\"JSON response has key 'publicReleaseDate'\"] = item.hasOwnProperty('publicReleaseDate');",
									"    // tests[\"JSON response key 'publicReleaseDate' not Null\"] = item.publicReleaseDate;",
									"    tests[\"JSON response has key 'publications'\"] = item.hasOwnProperty('publications');",
									"    tests[\"JSON response key 'publications' not Null\"] = item.publications;",
									"    tests[\"JSON response has key 'submissionDate'\"] = item.hasOwnProperty('submissionDate');",
									"    // tests[\"JSON response key 'submissionDate' not Null\"] = item.submissionDate;",
									"    tests[\"JSON response has key 'comments'\"] = item.hasOwnProperty('comments');",
									"    tests[\"JSON response key 'comments' not Null\"] = item.comments",
									"    ",
									"    tests[\"JSON response has key 'studies'\"] = item.hasOwnProperty('studies');",
									"    tests[\"JSON response has key 'studies' not Null\"] = item.studies;",
									"    if (item.studies.length > 0) {",
									"        var std = item.studies[0]",
									"        tests[\"JSON response has key 'identifier'\"] = std.hasOwnProperty('identifier');",
									"        tests[\"JSON response has key 'identifier' not Null\"] = std.identifier;",
									"        tests[\"JSON response has key 'title'\"] = std.hasOwnProperty('title');",
									"        tests[\"JSON response has key 'title' not Null\"] = std.title;",
									"        tests[\"JSON response has key 'description'\"] = std.hasOwnProperty('description');",
									"        tests[\"JSON response has key 'description' not Null\"] = std.description;",
									"        tests[\"JSON response has key 'filename'\"] = std.hasOwnProperty('filename');",
									"        tests[\"JSON response has key 'filename' not Null\"] = std.filename;",
									"        tests[\"JSON response has key 'publicReleaseDate'\"] = std.hasOwnProperty('publicReleaseDate');",
									"        tests[\"JSON response has key 'publicReleaseDate' not Null\"] = std.publicReleaseDate;",
									"        tests[\"JSON response has key 'publicReleaseDate'\"] = std.hasOwnProperty('publicReleaseDate');",
									"        tests[\"JSON response has key 'publicReleaseDate' not Null\"] = std.publicReleaseDate;",
									"        tests[\"JSON response has key 'submissionDate'\"] = std.hasOwnProperty('submissionDate');",
									"        tests[\"JSON response has key 'submissionDate' not Null\"] = std.submissionDate;",
									"        tests[\"JSON response has key 'people'\"] = std.hasOwnProperty('people');",
									"        tests[\"JSON response has key 'people' not Null\"] = std.people;",
									"        tests[\"JSON response has key 'protocols'\"] = std.hasOwnProperty('protocols');",
									"        tests[\"JSON response has key 'protocols' not Null\"] = std.protocols;",
									"        tests[\"JSON response has key 'studyDesignDescriptors'\"] = std.hasOwnProperty('studyDesignDescriptors');",
									"        tests[\"JSON response has key 'studyDesignDescriptors' not Null\"] = std.studyDesignDescriptors;",
									"        tests[\"JSON response has key 'factors'\"] = std.hasOwnProperty('factors');",
									"        tests[\"JSON response has key 'factors' not Null\"] = std.factors;",
									"        tests[\"JSON response has key 'materials'\"] = std.hasOwnProperty('materials');",
									"        tests[\"JSON response has key 'materials' not Null\"] = std.materials;",
									"        tests[\"JSON response has key 'publications'\"] = std.hasOwnProperty('publications');",
									"        tests[\"JSON response has key 'publications' not Null\"] = std.publications;",
									"        tests[\"JSON response has key 'unitCategories'\"] = std.hasOwnProperty('unitCategories');",
									"        tests[\"JSON response has key 'unitCategories' not Null\"] = std.unitCategories;",
									"        tests[\"JSON response has key 'characteristicCategories'\"] = std.hasOwnProperty('characteristicCategories');",
									"        tests[\"JSON response has key 'characteristicCategories' not Null\"] = std.characteristicCategories;",
									"        tests[\"JSON response has key 'processSequence'\"] = std.hasOwnProperty('processSequence');",
									"        tests[\"JSON response has key 'processSequence' not Null\"] = std.processSequence;",
									"        tests[\"JSON response has key 'comments'\"] = std.hasOwnProperty('comments');",
									"    }",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "user_token",
								"value": "{{curator}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies",
								"{{PrivStudyId}}"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "Get Single Study - Priv - NoAuth -> 403",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 403\"] = responseCode.code === 403;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
									"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
									"tests[\"Body does NOT contain Title Investigation\"] = !(responseBody.has('\"title\": \"Investigation\"'));",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "user_token",
								"value": "{{WrongAuth}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies",
								"{{PrivStudyId}}"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "Get Single Study - NullId -> 404",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 404\"] = responseCode.code === 404;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
									"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
									"tests[\"Body does NOT contain Title Investigation\"] = !(responseBody.has('\"title\": \"Investigation\"'));",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies",
								""
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "Get Single Study - BadId -> 404",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6d86c106-3e06-42d0-9aa4-4f88678319e8",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 404\"] = responseCode.code === 404;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
									"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
									"tests[\"Body does NOT contain Title Investigation\"] = !(responseBody.has('\"title\": \"Investigation\"'));",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{BadStudyId}}",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies",
								"{{BadStudyId}}"
							]
						},
						"description": null
					},
					"response": []
				}
			]
		},
		{
			"name": "Get Study Title",
			"description": null,
			"item": [
				{
					"name": "Get Study Title - Pub -> 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "67c498e5-42bd-40dd-9568-4414793d86e2",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"JSON response has key 'title'\"] = responseBody.has('\"title\":');",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"JSON response key 'title' not null\"] = jsonData.title.length;",
									"",
									"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/title",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies",
								"{{PubStudyId}}",
								"title"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "Get Study Title - Pub - Auth -> 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fe6d9c9b-8767-4bfc-86f8-46ef6668d383",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"JSON response has key 'title'\"] = responseBody.has('\"title\":');",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"JSON response key 'title' not null\"] = jsonData.title;",
									"",
									"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "user_token",
								"value": "{{curator}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/title",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies",
								"{{PubStudyId}}",
								"title"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "Get Study Title - Pub - NoAuth -> 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6a43251c-4da3-4560-9976-516d388b6bfb",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"JSON response has key 'title'\"] = responseBody.has('\"title\":');",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"JSON response key 'title' not null\"] = jsonData.title;",
									"",
									"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "user_token",
								"value": "{{WrongAuth}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/title",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies",
								"{{PubStudyId}}",
								"title"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "Get Study Title - Priv - Auth -> 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6953aa06-57e6-4156-bd99-ae46964e0c86",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"JSON response has key 'title'\"] = responseBody.has('\"title\":');",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"JSON response key 'title' not null\"] = jsonData.title;",
									"",
									"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "user_token",
								"value": "{{userTokenOK}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/title",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies",
								"{{PrivStudyId}}",
								"title"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "Get Study Title - Priv -> 403",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7c6ac9ae-c20b-448a-a04c-97337af676de",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 403\"] = responseCode.code === 403;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
									"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
									"tests[\"Body does NOT contain Study-title\"] = !(responseBody.has('\"Study-title\":'));",
									"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/title",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies",
								"{{PrivStudyId}}",
								"title"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "Get Study Title - Priv - NoAuth -> 403",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 403\"] = responseCode.code === 403;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
									"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
									"tests[\"Body does NOT contain Study-title\"] = !(responseBody.has('\"Study-title\":'));",
									"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "user_token",
								"value": "{{WrongAuth}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/title",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies",
								"{{PrivStudyId}}",
								"title"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "Get Study Title - NullId -> 404",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 404\"] = responseCode.code === 404;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
									"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
									"tests[\"Body does NOT contain Study-title\"] = !(responseBody.has('\"Study-title\":'));",
									"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies//title",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies",
								"",
								"title"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "Get Study Title - BadId -> 404",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 404\"] = responseCode.code === 404;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
									"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
									"tests[\"Body does NOT contain Study-title\"] = !(responseBody.has('\"Study-title\":'));",
									"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "user_token",
								"value": "{{userTokenOK}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{BadStudyId}}/title",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies",
								"{{BadStudyId}}",
								"title"
							]
						},
						"description": null
					},
					"response": []
				}
			]
		},
		{
			"name": "Get Study Description",
			"description": null,
			"item": [
				{
					"name": "Get Study Description - Pub -> 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4b86408b-ce96-47da-8be3-aec7ca4504d9",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"JSON response has key 'description'\"] = responseBody.has('\"description\":');",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"JSON response key 'description' not null\"] = jsonData.description;",
									"",
									"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/description",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies",
								"{{PubStudyId}}",
								"description"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "Get Study Description - Pub - Auth -> 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "db14ca3d-5656-47c0-944c-c90f5ecc3a4c",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"JSON response has key 'description'\"] = responseBody.has('\"description\":');",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"JSON response key 'description' not null\"] = jsonData.description;",
									"",
									"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "user_token",
								"value": "{{curator}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/description",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies",
								"{{PubStudyId}}",
								"description"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "Get Study Description - Pub - NoAuth -> 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0cd29e0f-cc40-410f-80b6-f93bec82216f",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"JSON response has key 'description'\"] = responseBody.has('\"description\":');",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"JSON response key 'description' not null\"] = jsonData.description;",
									"",
									"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "user_token",
								"value": "{{WrongAuth}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/description",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies",
								"{{PubStudyId}}",
								"description"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "Get Study Description - Priv - Auth -> 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8c6aefbc-086a-428e-87a4-7d6634802ada",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"JSON response has key 'description'\"] = responseBody.has('\"description\":');",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"JSON response key 'description' not null\"] = jsonData.description;",
									"",
									"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "user_token",
								"value": "{{userTokenOK}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/description",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies",
								"{{PrivStudyId}}",
								"description"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "Get Study Description - Priv -> 403",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4cdf11df-f64c-4a4e-88e1-59afaa3f70f1",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 403\"] = responseCode.code === 403;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
									"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
									"tests[\"Body does NOT contain description\"] = !(responseBody.has('\"description\":'));",
									"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/description",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies",
								"{{PrivStudyId}}",
								"description"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "Get Study Description - Priv - NoAuth -> 403",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4f5e355b-0be2-4270-a391-c31503e023a3",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 403\"] = responseCode.code === 403;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
									"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
									"tests[\"Body does NOT contain description\"] = !(responseBody.has('\"description\":'));",
									"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "user_token",
								"value": "{{WrongAuth}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/description",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies",
								"{{PrivStudyId}}",
								"description"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "Get Study Description - NullId -> 404",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "376b9c23-e27a-4cc0-aa47-60e8c34c4301",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 404\"] = responseCode.code === 404;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
									"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
									"tests[\"Body does NOT contain description\"] = !(responseBody.has('\"description\":'));",
									"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies//description",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies",
								"",
								"description"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "Get Study Description - BadId -> 404",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d0f38fa9-f223-466d-bb35-595cf12440a0",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 404\"] = responseCode.code === 404;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
									"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
									"tests[\"Body does NOT contain description\"] = !(responseBody.has('\"description\":'));",
									"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "user_token",
								"value": "{{userTokenOK}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{BadStudyId}}/description",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies",
								"{{BadStudyId}}",
								"description"
							]
						},
						"description": null
					},
					"response": []
				}
			]
		},
		{
			"name": "Get Study Contacts",
			"description": null,
			"item": [
				{
					"name": "Get Study Contacts - Pub -> 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b92f2d1a-341d-4218-8d41-7b05e5990eb3",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Body has contacts\"] = responseBody.has('\"contacts\":');",
									"var jsonData = JSON.parse(responseBody);",
									"if (jsonData.contacts.length > 0) {",
									"    var item = jsonData.contacts[0];",
									"    tests[\"JSON response has key 'firstName'\"] = item.hasOwnProperty('firstName');",
									"    tests[\"JSON response key 'firstName' not Null\"] = item.firstName;",
									"    tests[\"JSON response has key 'lastName'\"] = item.hasOwnProperty('lastName');",
									"    tests[\"JSON response key 'lastName' not Null\"] = item.lastName;",
									"    tests[\"JSON response has key 'email'\"] = item.hasOwnProperty('email');",
									"    tests[\"JSON response key 'email' not Null\"] = item.email;",
									"    tests[\"JSON response has key 'address'\"] = item.hasOwnProperty('address');",
									"    // tests[\"JSON response key 'address' not Null\"] = item.address;",
									"    if (item.roles.length > 0) {",
									"        var role = item.roles[0];",
									"        tests[\"JSON response has key 'role annotationValue'\"] = role.hasOwnProperty('annotationValue');",
									"        tests[\"JSON response key 'role annotationValue' not Null\"] = role.annotationValue !== null;",
									"    }",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "http://localhost.ebi.ac.uk:5005/mtbls/ws/studies/MTBLS10/contacts",
							"protocol": "http",
							"host": [
								"localhost",
								"ebi",
								"ac",
								"uk"
							],
							"port": "5005",
							"path": [
								"mtbls",
								"ws",
								"studies",
								"MTBLS10",
								"contacts"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "Get Study Contacts - Pub - Auth -> 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f66dd0dd-f11e-4960-a012-cb10fac8463b",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Body has contacts\"] = responseBody.has('\"contacts\":');",
									"var jsonData = JSON.parse(responseBody);",
									"if (jsonData.contacts.length > 0) {",
									"    var item = jsonData.contacts[0];",
									"    tests[\"JSON response has key 'firstName'\"] = item.hasOwnProperty('firstName');",
									"    tests[\"JSON response key 'firstName' not Null\"] = item.firstName;",
									"    tests[\"JSON response has key 'lastName'\"] = item.hasOwnProperty('lastName');",
									"    tests[\"JSON response key 'lastName' not Null\"] = item.lastName;",
									"    tests[\"JSON response has key 'email'\"] = item.hasOwnProperty('email');",
									"    tests[\"JSON response key 'email' not Null\"] = item.email;",
									"    tests[\"JSON response has key 'address'\"] = item.hasOwnProperty('address');",
									"    // tests[\"JSON response key 'address' not Null\"] = item.address;",
									"    if (item.roles.length > 0) {",
									"        var role = item.roles[0];",
									"        tests[\"JSON response has key 'role annotationValue'\"] = role.hasOwnProperty('annotationValue');",
									"        tests[\"JSON response key 'role annotationValue' not Null\"] = role.annotationValue !== null;",
									"    }",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "user_token",
								"value": "{{curator}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/contacts",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies",
								"{{PubStudyId}}",
								"contacts"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "Get Study Contacts - Pub - NoAuth -> 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "56df2a8f-82c2-4877-9f35-c77e70279722",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Body has contacts\"] = responseBody.has('\"contacts\":');",
									"var jsonData = JSON.parse(responseBody);",
									"if (jsonData.contacts.length > 0) {",
									"    var item = jsonData.contacts[0];",
									"    tests[\"JSON response has key 'firstName'\"] = item.hasOwnProperty('firstName');",
									"    tests[\"JSON response key 'firstName' not Null\"] = item.firstName;",
									"    tests[\"JSON response has key 'lastName'\"] = item.hasOwnProperty('lastName');",
									"    tests[\"JSON response key 'lastName' not Null\"] = item.lastName;",
									"    tests[\"JSON response has key 'email'\"] = item.hasOwnProperty('email');",
									"    tests[\"JSON response key 'email' not Null\"] = item.email;",
									"    tests[\"JSON response has key 'address'\"] = item.hasOwnProperty('address');",
									"    // tests[\"JSON response key 'address' not Null\"] = item.address;",
									"    if (item.roles.length > 0) {",
									"        var role = item.roles[0];",
									"        tests[\"JSON response has key 'role annotationValue'\"] = role.hasOwnProperty('annotationValue');",
									"        tests[\"JSON response key 'role annotationValue' not Null\"] = role.annotationValue !== null;",
									"    }",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "user_token",
								"value": "{{WrongAuth}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/contacts",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies",
								"{{PubStudyId}}",
								"contacts"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "Get Study Contacts - Priv -> 403",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0e6c5a1e-2340-4bec-bfd9-affd49f42572",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 403\"] = responseCode.code === 403;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
									"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
									"tests[\"Body does NOT contain contacts\"] = !(responseBody.has('\"contacts\":'));",
									"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/contacts",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies",
								"{{PrivStudyId}}",
								"contacts"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "Get Study Contacts - Priv - Auth -> 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a060f952-41c6-4bf1-b095-cde1f89647e5",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Body has contacts\"] = responseBody.has('\"contacts\":');",
									"var jsonData = JSON.parse(responseBody);",
									"if (jsonData.contacts.length > 0) {",
									"    var item = jsonData.contacts[0];",
									"    tests[\"JSON response has key 'firstName'\"] = item.hasOwnProperty('firstName');",
									"    tests[\"JSON response key 'firstName' not Null\"] = item.firstName;",
									"    tests[\"JSON response has key 'lastName'\"] = item.hasOwnProperty('lastName');",
									"    tests[\"JSON response key 'lastName' not Null\"] = item.lastName;",
									"    tests[\"JSON response has key 'email'\"] = item.hasOwnProperty('email');",
									"    tests[\"JSON response key 'email' not Null\"] = item.email;",
									"    tests[\"JSON response has key 'address'\"] = item.hasOwnProperty('address');",
									"    // tests[\"JSON response key 'address' not Null\"] = item.address;",
									"    if (item.roles.length > 0) {",
									"        var role = item.roles[0];",
									"        tests[\"JSON response has key 'role annotationValue'\"] = role.hasOwnProperty('annotationValue');",
									"        tests[\"JSON response key 'role annotationValue' not Null\"] = role.annotationValue !== null;",
									"    }",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "user_token",
								"value": "{{userTokenOK}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/contacts",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies",
								"{{PrivStudyId}}",
								"contacts"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "Get Study Contacts - Priv - NoAuth -> 403",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c08ef0e5-3c9a-4649-83bf-a28587863d87",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 403\"] = responseCode.code === 403;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
									"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
									"tests[\"Body does NOT contain contacts\"] = !(responseBody.has('\"contacts\":'));",
									"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "user_token",
								"value": "{{WrongAuth}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/contacts",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies",
								"{{PrivStudyId}}",
								"contacts"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "Get Study Contacts - NullId -> 404",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2209ffd5-1acc-4af3-a144-367a634401f4",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 404\"] = responseCode.code === 404;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
									"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
									"tests[\"Body does NOT contain contacts\"] = !(responseBody.has('\"contacts\":'));",
									"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies//contacts",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies",
								"",
								"contacts"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "Get Study Contacts - BadId -> 404",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "66e2062d-e554-46de-8b1f-c95525ed1fc2",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 404\"] = responseCode.code === 404;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
									"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
									"tests[\"Body does NOT contain contacts\"] = !(responseBody.has('\"contacts\":'));",
									"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "user_token",
								"value": "{{userTokenOK}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{BadStudyId}}/contacts",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies",
								"{{BadStudyId}}",
								"contacts"
							]
						},
						"description": null
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "f3df7f22-8ee0-4535-b502-5a175c7c1894",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "851bf978-c1c5-4398-866c-78e3cc2c6ae7",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Get Study Contact",
			"description": null,
			"item": [
				{
					"name": "Get Study Contact - Pub - GoodId -> 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "78a498bc-fbf5-4e75-b225-f09e6bb357ce",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Body has contact\"] = responseBody.has('\"contact\":');",
									"var jsonData = JSON.parse(responseBody);",
									"if (jsonData.contact) {",
									"    var item = jsonData.contact;",
									"    tests[\"JSON response has key 'firstName'\"] = item.hasOwnProperty('firstName');",
									"    tests[\"JSON response key 'firstName' not Null\"] = item.firstName;",
									"    tests[\"JSON response has key 'lastName'\"] = item.hasOwnProperty('lastName');",
									"    tests[\"JSON response key 'lastName' not Null\"] = item.lastName;",
									"    tests[\"JSON response has key 'email'\"] = item.hasOwnProperty('email');",
									"    tests[\"JSON response key 'email' not Null\"] = item.email;",
									"    tests[\"JSON response has key 'address'\"] = item.hasOwnProperty('address');",
									"    // tests[\"JSON response key 'address' not Null\"] = item.address;",
									"    if (item.roles.length > 0) {",
									"        var role = item.roles[0]",
									"        tests[\"JSON response has key 'role annotationValue'\"] = role.hasOwnProperty('annotationValue');",
									"        tests[\"JSON response key 'role annotationValue' not Null\"] = role.annotationValue !== null;",
									"    }",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "None"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/contacts?email={{ContactID}}",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies",
								"{{PubStudyId}}",
								"contacts"
							],
							"query": [
								{
									"key": "email",
									"value": "{{ContactID}}",
									"equals": true
								}
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "Get Study Contact - Pub - BadId -> 404",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c62e91ab-0014-4a8f-ae1c-0f7bd5106fdb",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 404\"] = responseCode.code === 404;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
									"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
									"tests[\"Body does NOT contain contacts\"] = !(responseBody.has('\"contacts\":'));",
									"tests[\"Body does NOT contain contact\"] = !(responseBody.has('\"contact\":'));",
									"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "None"
							},
							{
								"key": "user_token",
								"value": "{{curator}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/contacts?email={{BadContactId}}",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies",
								"{{PubStudyId}}",
								"contacts"
							],
							"query": [
								{
									"key": "email",
									"value": "{{BadContactId}}",
									"equals": true
								}
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "Get Study Contact - Pub - NullId -> 404",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8ed97a7e-a2fd-497a-b657-6d8423a95ecc",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 404\"] = responseCode.code === 404;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
									"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
									"tests[\"Body does NOT contain contacts\"] = !(responseBody.has('\"contacts\":'));",
									"tests[\"Body does NOT contain contact\"] = !(responseBody.has('\"contact\":'));",
									"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "None"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/contacts?email=",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies",
								"{{PubStudyId}}",
								"contacts"
							],
							"query": [
								{
									"key": "email",
									"value": "",
									"equals": true
								}
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "Get Study Contact - Priv - Auth - GoodId -> 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f579d19e-d650-4a34-9759-3470dfd760dc",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Body has contact\"] = responseBody.has('\"contact\":');",
									"var jsonData = JSON.parse(responseBody);",
									"if (jsonData.contact) {",
									"    var item = jsonData.contact;",
									"    tests[\"JSON response has key 'firstName'\"] = item.hasOwnProperty('firstName');",
									"    tests[\"JSON response key 'firstName' not Null\"] = item.firstName;",
									"    tests[\"JSON response has key 'lastName'\"] = item.hasOwnProperty('lastName');",
									"    tests[\"JSON response key 'lastName' not Null\"] = item.lastName;",
									"    tests[\"JSON response has key 'email'\"] = item.hasOwnProperty('email');",
									"    tests[\"JSON response key 'email' not Null\"] = item.email;",
									"    tests[\"JSON response has key 'address'\"] = item.hasOwnProperty('address');",
									"    // tests[\"JSON response key 'address' not Null\"] = item.address;",
									"    if (item.roles.length > 0) {",
									"        var role = item.roles[0]",
									"        tests[\"JSON response has key 'role annotationValue'\"] = role.hasOwnProperty('annotationValue');",
									"        tests[\"JSON response key 'role annotationValue' not Null\"] = role.annotationValue !== null;",
									"    }",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "None"
							},
							{
								"key": "user_token",
								"value": "{{userTokenOK}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/contacts?email={{ContactID}}",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies",
								"{{PrivStudyId}}",
								"contacts"
							],
							"query": [
								{
									"key": "email",
									"value": "{{ContactID}}",
									"equals": true
								}
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "Get Study Contact - Priv - Auth - BadId -> 404",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6c136397-8959-486c-86ce-c8c9151e29a6",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 404\"] = responseCode.code === 404;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
									"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
									"tests[\"Body does NOT contain contacts\"] = !(responseBody.has('\"contacts\":'));",
									"tests[\"Body does NOT contain contact\"] = !(responseBody.has('\"contact\":'));",
									"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "None"
							},
							{
								"key": "user_token",
								"value": "{{userTokenOK}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/contacts?email={{BadContactId}}",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies",
								"{{PrivStudyId}}",
								"contacts"
							],
							"query": [
								{
									"key": "email",
									"value": "{{BadContactId}}",
									"equals": true
								}
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "Get Study Contact - Priv - Auth - NullId -> 404",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6c136397-8959-486c-86ce-c8c9151e29a6",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 404\"] = responseCode.code === 404;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
									"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
									"tests[\"Body does NOT contain contacts\"] = !(responseBody.has('\"contacts\":'));",
									"tests[\"Body does NOT contain contact\"] = !(responseBody.has('\"contact\":'));",
									"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "None"
							},
							{
								"key": "user_token",
								"value": "{{userTokenOK}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/contacts?email=",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies",
								"{{PrivStudyId}}",
								"contacts"
							],
							"query": [
								{
									"key": "email",
									"value": "",
									"equals": true
								}
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "Get Study Contact - Priv -> 403",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b57e5092-34bb-4119-86af-bdd15a7f6313",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 403\"] = responseCode.code === 403;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
									"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
									"tests[\"Body does NOT contain contacts\"] = !(responseBody.has('\"contacts\":'));",
									"tests[\"Body does NOT contain contact\"] = !(responseBody.has('\"contact\":'));",
									"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "None"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/contacts?email={{ContactID}}",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies",
								"{{PrivStudyId}}",
								"contacts"
							],
							"query": [
								{
									"key": "email",
									"value": "{{ContactID}}",
									"equals": true
								}
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "Get Study Contact - Priv - NoAuth -> 403",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5f90e007-1ae9-4ded-9cb8-7b3e9a513117",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 403\"] = responseCode.code === 403;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
									"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
									"tests[\"Body does NOT contain contacts\"] = !(responseBody.has('\"contacts\":'));",
									"tests[\"Body does NOT contain contact\"] = !(responseBody.has('\"contact\":'));",
									"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "None"
							},
							{
								"key": "user_token",
								"value": "{{WrongAuth}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/contacts?email={{ContactID}}",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies",
								"{{PrivStudyId}}",
								"contacts"
							],
							"query": [
								{
									"key": "email",
									"value": "{{ContactID}}",
									"equals": true
								}
							]
						},
						"description": null
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "f3df7f22-8ee0-4535-b502-5a175c7c1894",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "851bf978-c1c5-4398-866c-78e3cc2c6ae7",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Get Study Protocols",
			"description": null,
			"item": [
				{
					"name": "Get Study Protocols - Pub -> 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "92cb86bd-228c-4903-b553-cd2baa3a3946",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"/// Body",
									"tests[\"Body has protocols\"] = responseBody.has('\"protocols\":');",
									"var jsonData = JSON.parse(responseBody);",
									"if (jsonData.protocols.length > 0) {",
									"    var item = jsonData.protocols[0]",
									"    tests[\"JSON response has key 'name'\"] = item.hasOwnProperty('name');",
									"    tests[\"JSON response key 'name' not Null\"] = item.name;",
									"    tests[\"JSON response has key 'description'\"] = item.hasOwnProperty('description');",
									"    tests[\"JSON response key 'description' not Null\"] = item.description;",
									"    tests[\"JSON response has key 'protocolType'\"] = item.hasOwnProperty('protocolType');",
									"    tests[\"JSON response key 'protocolType' not Null\"] = item.protocolType;",
									"    tests[\"JSON response has key 'uri'\"] = item.hasOwnProperty('uri');",
									"    // tests[\"JSON response key 'uri' not Null\"] = item.uri;",
									"    tests[\"JSON response has key 'version'\"] = item.hasOwnProperty('version');",
									"    // tests[\"JSON response key 'version' not Null\"] = item.version;",
									"    tests[\"JSON response has key 'parameters'\"] = item.hasOwnProperty('parameters');",
									"    tests[\"JSON response key 'parameters' not Null\"] = item.parameters;",
									"    tests[\"JSON response has key 'components'\"] = item.hasOwnProperty('components');",
									"    tests[\"JSON response key 'components' not Null\"] = item.components;",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/protocols",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies",
								"{{PubStudyId}}",
								"protocols"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "Get Study Protocols - Pub - Auth -> 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "41c8a029-1e7a-42a6-9be8-99e96b5c6c12",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"/// Body",
									"tests[\"Body has protocols\"] = responseBody.has('\"protocols\":');",
									"var jsonData = JSON.parse(responseBody);",
									"if (jsonData.protocols.length > 0) {",
									"    var item = jsonData.protocols[0]",
									"    tests[\"JSON response has key 'name'\"] = item.hasOwnProperty('name');",
									"    tests[\"JSON response key 'name' not Null\"] = item.name;",
									"    tests[\"JSON response has key 'description'\"] = item.hasOwnProperty('description');",
									"    tests[\"JSON response key 'description' not Null\"] = item.description;",
									"    tests[\"JSON response has key 'protocolType'\"] = item.hasOwnProperty('protocolType');",
									"    tests[\"JSON response key 'protocolType' not Null\"] = item.protocolType;",
									"    tests[\"JSON response has key 'uri'\"] = item.hasOwnProperty('uri');",
									"    // tests[\"JSON response key 'uri' not Null\"] = item.uri;",
									"    tests[\"JSON response has key 'version'\"] = item.hasOwnProperty('version');",
									"    // tests[\"JSON response key 'version' not Null\"] = item.version;",
									"    tests[\"JSON response has key 'parameters'\"] = item.hasOwnProperty('parameters');",
									"    tests[\"JSON response key 'parameters' not Null\"] = item.parameters;",
									"    tests[\"JSON response has key 'components'\"] = item.hasOwnProperty('components');",
									"    tests[\"JSON response key 'components' not Null\"] = item.components;",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "user_token",
								"value": "{{curator}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/protocols",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies",
								"{{PubStudyId}}",
								"protocols"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "Get Study Protocols - Pub - NoAuth -> 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7d8248b9-2e8c-4540-90e5-d8b9843a82d5",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"/// Body",
									"tests[\"Body has protocols\"] = responseBody.has('\"protocols\":');",
									"var jsonData = JSON.parse(responseBody);",
									"if (jsonData.protocols.length > 0) {",
									"    var item = jsonData.protocols[0]",
									"    tests[\"JSON response has key 'name'\"] = item.hasOwnProperty('name');",
									"    tests[\"JSON response key 'name' not Null\"] = item.name;",
									"    tests[\"JSON response has key 'description'\"] = item.hasOwnProperty('description');",
									"    tests[\"JSON response key 'description' not Null\"] = item.description;",
									"    tests[\"JSON response has key 'protocolType'\"] = item.hasOwnProperty('protocolType');",
									"    tests[\"JSON response key 'protocolType' not Null\"] = item.protocolType;",
									"    tests[\"JSON response has key 'uri'\"] = item.hasOwnProperty('uri');",
									"    // tests[\"JSON response key 'uri' not Null\"] = item.uri;",
									"    tests[\"JSON response has key 'version'\"] = item.hasOwnProperty('version');",
									"    // tests[\"JSON response key 'version' not Null\"] = item.version;",
									"    tests[\"JSON response has key 'parameters'\"] = item.hasOwnProperty('parameters');",
									"    tests[\"JSON response key 'parameters' not Null\"] = item.parameters;",
									"    tests[\"JSON response has key 'components'\"] = item.hasOwnProperty('components');",
									"    tests[\"JSON response key 'components' not Null\"] = item.components;",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "user_token",
								"value": "{{WrongAuth}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/protocols",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies",
								"{{PubStudyId}}",
								"protocols"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "Get Study Protocols - Priv -> 403",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "15ca2864-64a9-4635-9c64-3503bd1cde2e",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 403\"] = responseCode.code === 403;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
									"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
									"tests[\"Body does NOT contain Study-protocols\"] = !(responseBody.has('\"Study-protocols\":'));",
									"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/protocols",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies",
								"{{PrivStudyId}}",
								"protocols"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "Get Study Protocols - Priv - Auth -> 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d3d6cd3a-09b7-4ecc-8995-77573d8276a1",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"/// Body",
									"tests[\"Body has protocols\"] = responseBody.has('\"protocols\":');",
									"var jsonData = JSON.parse(responseBody);",
									"if (jsonData.protocols.length > 0) {",
									"    var item = jsonData.protocols[0]",
									"    tests[\"JSON response has key 'name'\"] = item.hasOwnProperty('name');",
									"    tests[\"JSON response key 'name' not Null\"] = item.name;",
									"    tests[\"JSON response has key 'description'\"] = item.hasOwnProperty('description');",
									"    tests[\"JSON response key 'description' not Null\"] = item.description;",
									"    tests[\"JSON response has key 'protocolType'\"] = item.hasOwnProperty('protocolType');",
									"    tests[\"JSON response key 'protocolType' not Null\"] = item.protocolType;",
									"    tests[\"JSON response has key 'uri'\"] = item.hasOwnProperty('uri');",
									"    // tests[\"JSON response key 'uri' not Null\"] = item.uri;",
									"    tests[\"JSON response has key 'version'\"] = item.hasOwnProperty('version');",
									"    // tests[\"JSON response key 'version' not Null\"] = item.version;",
									"    tests[\"JSON response has key 'parameters'\"] = item.hasOwnProperty('parameters');",
									"    tests[\"JSON response key 'parameters' not Null\"] = item.parameters;",
									"    tests[\"JSON response has key 'components'\"] = item.hasOwnProperty('components');",
									"    tests[\"JSON response key 'components' not Null\"] = item.components;",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "user_token",
								"value": "{{curator}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/protocols",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies",
								"{{PrivStudyId}}",
								"protocols"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "Get Study Protocols - Priv - NoAuth -> 403",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 403\"] = responseCode.code === 403;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
									"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
									"tests[\"Body does NOT contain Study-protocols\"] = !(responseBody.has('\"Study-protocols\":'));",
									"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "user_token",
								"value": "{{WrongAuth}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/protocols",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies",
								"{{PrivStudyId}}",
								"protocols"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "Get Study Protocols - NullId -> 404",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 404\"] = responseCode.code === 404;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
									"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
									"tests[\"Body does NOT contain Study-protocols\"] = !(responseBody.has('\"Study-protocols\":'));",
									"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies//protocols",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies",
								"",
								"protocols"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "Get Study Protocols - BadId -> 404",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 404\"] = responseCode.code === 404;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
									"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
									"tests[\"Body does NOT contain Study-protocols\"] = !(responseBody.has('\"Study-protocols\":'));",
									"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "user_token",
								"value": "{{userTokenOK}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{BadStudyId}}/protocols",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies",
								"{{BadStudyId}}",
								"protocols"
							]
						},
						"description": null
					},
					"response": []
				}
			]
		},
		{
			"name": "Get Study Protocol",
			"description": null,
			"item": [
				{
					"name": "Get Study Protocol - Pub - GoodId -> 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "19b0ba4a-9c7a-4408-974c-4665e1085878",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"/// Body",
									"tests[\"Body has protocol\"] = responseBody.has('\"protocol\":');",
									"var jsonData = JSON.parse(responseBody);",
									"if (jsonData.protocol) {",
									"    var item = jsonData.protocol",
									"    tests[\"JSON response has key 'name'\"] = item.hasOwnProperty('name');",
									"    tests[\"JSON response key 'name' not Null\"] = item.name;",
									"    tests[\"JSON response has key 'description'\"] = item.hasOwnProperty('description');",
									"    tests[\"JSON response key 'description' not Null\"] = item.description;",
									"    tests[\"JSON response has key 'protocolType'\"] = item.hasOwnProperty('protocolType');",
									"    tests[\"JSON response key 'protocolType' not Null\"] = item.protocolType;",
									"    tests[\"JSON response has key 'uri'\"] = item.hasOwnProperty('uri');",
									"    // tests[\"JSON response key 'uri' not Null\"] = item.uri;",
									"    tests[\"JSON response has key 'version'\"] = item.hasOwnProperty('version');",
									"    // tests[\"JSON response key 'version' not Null\"] = item.version;",
									"    tests[\"JSON response has key 'parameters'\"] = item.hasOwnProperty('parameters');",
									"    tests[\"JSON response key 'parameters' not Null\"] = item.parameters;",
									"    tests[\"JSON response has key 'components'\"] = item.hasOwnProperty('components');",
									"    tests[\"JSON response key 'components' not Null\"] = item.components;",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "None"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/protocols?name={{ValidProtocolId}}",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies",
								"{{PubStudyId}}",
								"protocols"
							],
							"query": [
								{
									"key": "name",
									"value": "{{ValidProtocolId}}",
									"equals": true
								}
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "Get Study Protocol - Pub - BadId -> 404",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8ae7b5e0-7599-4728-b6cf-5918c10aff0d",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 404\"] = responseCode.code === 404;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
									"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
									"tests[\"Body does NOT contain protocols\"] = !(responseBody.has('\"protocols\":'));",
									"tests[\"Body does NOT contain protocol\"] = !(responseBody.has('\"protocol\":'));",
									"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "None"
							},
							{
								"key": "user_token",
								"value": "{{curator}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/protocols?name={{BadProtocolId}}",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies",
								"{{PubStudyId}}",
								"protocols"
							],
							"query": [
								{
									"key": "name",
									"value": "{{BadProtocolId}}",
									"equals": true
								}
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "Get Study Protocol - Pub - NullId -> 404",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "27e6d123-e425-4b4f-aa96-5a97dc85204e",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 404\"] = responseCode.code === 404;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
									"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
									"tests[\"Body does NOT contain protocols\"] = !(responseBody.has('\"protocols\":'));",
									"tests[\"Body does NOT contain protocol\"] = !(responseBody.has('\"protocol\":'));",
									"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "None"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/protocols?name=''",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies",
								"{{PubStudyId}}",
								"protocols"
							],
							"query": [
								{
									"key": "name",
									"value": "''",
									"equals": true
								}
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "Get Study Protocol - Priv - Auth - GoodId -> 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f69457d4-959f-4542-9644-e80516381b81",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"/// Body",
									"tests[\"Body has protocol\"] = responseBody.has('\"protocol\":');",
									"var jsonData = JSON.parse(responseBody);",
									"if (jsonData.protocol) {",
									"    var item = jsonData.protocol",
									"    tests[\"JSON response has key 'name'\"] = item.hasOwnProperty('name');",
									"    tests[\"JSON response key 'name' not Null\"] = item.name;",
									"    tests[\"JSON response has key 'description'\"] = item.hasOwnProperty('description');",
									"    tests[\"JSON response key 'description' not Null\"] = item.description;",
									"    tests[\"JSON response has key 'protocolType'\"] = item.hasOwnProperty('protocolType');",
									"    tests[\"JSON response key 'protocolType' not Null\"] = item.protocolType;",
									"    tests[\"JSON response has key 'uri'\"] = item.hasOwnProperty('uri');",
									"    // tests[\"JSON response key 'uri' not Null\"] = item.uri;",
									"    tests[\"JSON response has key 'version'\"] = item.hasOwnProperty('version');",
									"    // tests[\"JSON response key 'version' not Null\"] = item.version;",
									"    tests[\"JSON response has key 'parameters'\"] = item.hasOwnProperty('parameters');",
									"    tests[\"JSON response key 'parameters' not Null\"] = item.parameters;",
									"    tests[\"JSON response has key 'components'\"] = item.hasOwnProperty('components');",
									"    tests[\"JSON response key 'components' not Null\"] = item.components;",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "None"
							},
							{
								"key": "user_token",
								"value": "{{userTokenOK}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/protocols?name={{ValidProtocolId}}",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies",
								"{{PrivStudyId}}",
								"protocols"
							],
							"query": [
								{
									"key": "name",
									"value": "{{ValidProtocolId}}",
									"equals": true
								}
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "Get Study Protocol - Priv - Auth - BadId -> 404",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ad7291eb-2519-4dd9-a147-ecc2cf0699d2",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 404\"] = responseCode.code === 404;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
									"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
									"tests[\"Body does NOT contain protocols\"] = !(responseBody.has('\"protocols\":'));",
									"tests[\"Body does NOT contain protocol\"] = !(responseBody.has('\"protocol\":'));",
									"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "None"
							},
							{
								"key": "user_token",
								"value": "{{userTokenOK}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/protocols?name={{BadProtocolId}}",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies",
								"{{PrivStudyId}}",
								"protocols"
							],
							"query": [
								{
									"key": "name",
									"value": "{{BadProtocolId}}",
									"equals": true
								}
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "Get Study Protocol - Priv - Auth - NullId -> 404",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c63fefea-766e-4fa2-a6cf-3d196d583823",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 404\"] = responseCode.code === 404;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
									"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
									"tests[\"Body does NOT contain protocols\"] = !(responseBody.has('\"protocols\":'));",
									"tests[\"Body does NOT contain protocol\"] = !(responseBody.has('\"protocol\":'));",
									"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "None"
							},
							{
								"key": "user_token",
								"value": "{{userTokenOK}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/protocols?name=''",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies",
								"{{PrivStudyId}}",
								"protocols"
							],
							"query": [
								{
									"key": "name",
									"value": "''",
									"equals": true
								}
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "Get Study Protocol - Priv -> 403",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "da56c22a-3e43-47a3-aeeb-5487a3806148",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 403\"] = responseCode.code === 403;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
									"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
									"tests[\"Body does NOT contain protocols\"] = !(responseBody.has('\"protocols\":'));",
									"tests[\"Body does NOT contain protocol\"] = !(responseBody.has('\"protocol\":'));",
									"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "None"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/protocols?name={{ValidProtocolId}}",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies",
								"{{PrivStudyId}}",
								"protocols"
							],
							"query": [
								{
									"key": "name",
									"value": "{{ValidProtocolId}}",
									"equals": true
								}
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "Get Study Protocol - Priv - NoAuth -> 403",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "59202dc6-9edf-4454-b8bf-9a4fb7d5f85b",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 403\"] = responseCode.code === 403;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
									"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
									"tests[\"Body does NOT contain protocols\"] = !(responseBody.has('\"protocols\":'));",
									"tests[\"Body does NOT contain protocol\"] = !(responseBody.has('\"protocol\":'));",
									"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "None"
							},
							{
								"key": "user_token",
								"value": "{{WrongAuth}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/protocols?name={{ValidProtocolId}}",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies",
								"{{PrivStudyId}}",
								"protocols"
							],
							"query": [
								{
									"key": "name",
									"value": "{{ValidProtocolId}}",
									"equals": true
								}
							]
						},
						"description": null
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "f3df7f22-8ee0-4535-b502-5a175c7c1894",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "851bf978-c1c5-4398-866c-78e3cc2c6ae7",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Get Study Factors",
			"description": null,
			"item": [
				{
					"name": "Get Study Factors - Pub -> 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "66296275-e306-4318-bfbd-f45b0dcb67ad",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Body has factors\"] = responseBody.has('\"factors\":');",
									"var jsonData = JSON.parse(responseBody);",
									"if (jsonData.factors.length > 0) {",
									"    var item = jsonData.factors[0]",
									"    tests[\"JSON response has key 'factorName'\"] = item.hasOwnProperty('factorName');",
									"    tests[\"JSON response key 'factorName' not Null\"] = item.factorName;",
									"    tests[\"JSON response has key 'factorType'\"] = item.hasOwnProperty('factorType');",
									"    tests[\"JSON response key 'factorType' not Null\"] = item.factorType;",
									"    tests[\"JSON response has key 'comments'\"] = item.hasOwnProperty('comments');",
									"    tests[\"JSON response key 'comments' not Null\"] = item.comments;",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/factors",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies",
								"{{PubStudyId}}",
								"factors"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "Get Study Factors - Pub - Auth -> 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0445a0f9-c290-4eb0-9ab8-9b515bdac08f",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Body has factors\"] = responseBody.has('\"factors\":');",
									"var jsonData = JSON.parse(responseBody);",
									"if (jsonData.factors.length > 0) {",
									"    var item = jsonData.factors[0]",
									"    tests[\"JSON response has key 'factorName'\"] = item.hasOwnProperty('factorName');",
									"    tests[\"JSON response key 'factorName' not Null\"] = item.factorName;",
									"    tests[\"JSON response has key 'factorType'\"] = item.hasOwnProperty('factorType');",
									"    tests[\"JSON response key 'factorType' not Null\"] = item.factorType;",
									"    tests[\"JSON response has key 'comments'\"] = item.hasOwnProperty('comments');",
									"    tests[\"JSON response key 'comments' not Null\"] = item.comments;",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "user_token",
								"value": "{{curator}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/factors",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies",
								"{{PubStudyId}}",
								"factors"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "Get Study Factors - Pub - NoAuth -> 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5281f751-96f8-412b-9e68-3a3135a7713a",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Body has factors\"] = responseBody.has('\"factors\":');",
									"var jsonData = JSON.parse(responseBody);",
									"if (jsonData.factors.length > 0) {",
									"    var item = jsonData.factors[0]",
									"    tests[\"JSON response has key 'factorName'\"] = item.hasOwnProperty('factorName');",
									"    tests[\"JSON response key 'factorName' not Null\"] = item.factorName;",
									"    tests[\"JSON response has key 'factorType'\"] = item.hasOwnProperty('factorType');",
									"    tests[\"JSON response key 'factorType' not Null\"] = item.factorType;",
									"    tests[\"JSON response has key 'comments'\"] = item.hasOwnProperty('comments');",
									"    tests[\"JSON response key 'comments' not Null\"] = item.comments;",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "user_token",
								"value": "{{WrongAuth}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/factors",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies",
								"{{PubStudyId}}",
								"factors"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "Get Study Factors - Priv -> 403",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c0549199-5389-4396-aec6-696925224076",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 403\"] = responseCode.code === 403;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
									"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
									"tests[\"Body does NOT contain factors\"] = !(responseBody.has('\"factors\":'));",
									"tests[\"Body does NOT contain factor\"] = !(responseBody.has('\"factor\":'));",
									"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/factors",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies",
								"{{PrivStudyId}}",
								"factors"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "Get Study Factors - Priv - Auth -> 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "60a51cd7-8a16-4c5c-bada-5d9bac362f42",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Body has factors\"] = responseBody.has('\"factors\":');",
									"var jsonData = JSON.parse(responseBody);",
									"if (jsonData.factors.length > 0) {",
									"    var item = jsonData.factors[0]",
									"    tests[\"JSON response has key 'factorName'\"] = item.hasOwnProperty('factorName');",
									"    tests[\"JSON response key 'factorName' not Null\"] = item.factorName;",
									"    tests[\"JSON response has key 'factorType'\"] = item.hasOwnProperty('factorType');",
									"    tests[\"JSON response key 'factorType' not Null\"] = item.factorType;",
									"    tests[\"JSON response has key 'comments'\"] = item.hasOwnProperty('comments');",
									"    tests[\"JSON response key 'comments' not Null\"] = item.comments;",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "user_token",
								"value": "{{curator}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/factors",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies",
								"{{PrivStudyId}}",
								"factors"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "Get Study Factors - Priv - NoAuth -> 403",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3a59ccba-c9b9-4cee-b118-e73401dc06ab",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 403\"] = responseCode.code === 403;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
									"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
									"tests[\"Body does NOT contain factors\"] = !(responseBody.has('\"factors\":'));",
									"tests[\"Body does NOT contain factor\"] = !(responseBody.has('\"factor\":'));",
									"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "user_token",
								"value": "{{WrongAuth}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/factors",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies",
								"{{PrivStudyId}}",
								"factors"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "Get Study Factors - NullId -> 404",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "11bb3b89-f613-484c-b8fd-a982be309c6e",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 404\"] = responseCode.code === 404;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
									"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
									"tests[\"Body does NOT contain factors\"] = !(responseBody.has('\"factors\":'));",
									"tests[\"Body does NOT contain factor\"] = !(responseBody.has('\"factor\":'));",
									"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies//factors",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies",
								"",
								"factors"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "Get Study Factors - BadId -> 404",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3681ae8a-e4b0-44fc-b958-c9d284b3bfe1",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 404\"] = responseCode.code === 404;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
									"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
									"tests[\"Body does NOT contain factors\"] = !(responseBody.has('\"factors\":'));",
									"tests[\"Body does NOT contain factor\"] = !(responseBody.has('\"factor\":'));",
									"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "user_token",
								"value": "{{userTokenOK}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{BadStudyId}}/factors",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies",
								"{{BadStudyId}}",
								"factors"
							]
						},
						"description": null
					},
					"response": []
				}
			]
		},
		{
			"name": "Get Study Factor",
			"description": null,
			"item": [
				{
					"name": "Get Study Factor - Pub - GoodId -> 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "14a35571-69fc-48a8-be15-f9659f88159b",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Body has factor\"] = responseBody.has('\"factor\":');",
									"var jsonData = JSON.parse(responseBody);",
									"if (jsonData.factor) {",
									"    var item = jsonData.factor",
									"    tests[\"JSON response has key 'factorName'\"] = item.hasOwnProperty('factorName');",
									"    tests[\"JSON response key 'factorName' not Null\"] = item.factorName;",
									"    tests[\"JSON response has key 'factorType'\"] = item.hasOwnProperty('factorType');",
									"    tests[\"JSON response key 'factorType' not Null\"] = item.factorType;",
									"    tests[\"JSON response has key 'comments'\"] = item.hasOwnProperty('comments');",
									"    tests[\"JSON response key 'comments' not Null\"] = item.comments;",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "None"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/factors?name={{ValidFactorId}}",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies",
								"{{PubStudyId}}",
								"factors"
							],
							"query": [
								{
									"key": "name",
									"value": "{{ValidFactorId}}",
									"equals": true
								}
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "Get Study Factor - Pub - BadId -> 404",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c917c0ff-d37a-447a-8837-331fca11b3de",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 404\"] = responseCode.code === 404;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
									"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
									"tests[\"Body does NOT contain factors\"] = !(responseBody.has('\"factors\":'));",
									"tests[\"Body does NOT contain factor\"] = !(responseBody.has('\"factor\":'));",
									"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "None"
							},
							{
								"key": "user_token",
								"value": "{{curator}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/factors?name={{BadFactorId}}",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies",
								"{{PubStudyId}}",
								"factors"
							],
							"query": [
								{
									"key": "name",
									"value": "{{BadFactorId}}",
									"equals": true
								}
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "Get Study Factor - Pub - NullId -> 404",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7ed2d6f6-aad8-4e6b-9660-abebb7579346",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 404\"] = responseCode.code === 404;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
									"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
									"tests[\"Body does NOT contain factors\"] = !(responseBody.has('\"factors\":'));",
									"tests[\"Body does NOT contain factor\"] = !(responseBody.has('\"factor\":'));",
									"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "None"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/factors?name=''",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies",
								"{{PubStudyId}}",
								"factors"
							],
							"query": [
								{
									"key": "name",
									"value": "''",
									"equals": true
								}
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "Get Study Factor - Priv - Auth - GoodId -> 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2103ca88-ff1a-4365-b63e-016180fe0085",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Body has factor\"] = responseBody.has('\"factor\":');",
									"var jsonData = JSON.parse(responseBody);",
									"if (jsonData.factor) {",
									"    var item = jsonData.factor",
									"    tests[\"JSON response has key 'factorName'\"] = item.hasOwnProperty('factorName');",
									"    tests[\"JSON response key 'factorName' not Null\"] = item.factorName;",
									"    tests[\"JSON response has key 'factorType'\"] = item.hasOwnProperty('factorType');",
									"    tests[\"JSON response key 'factorType' not Null\"] = item.factorType;",
									"    tests[\"JSON response has key 'comments'\"] = item.hasOwnProperty('comments');",
									"    tests[\"JSON response key 'comments' not Null\"] = item.comments;",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "None"
							},
							{
								"key": "user_token",
								"value": "{{userTokenOK}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/factors?name={{ValidFactorId}}",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies",
								"{{PrivStudyId}}",
								"factors"
							],
							"query": [
								{
									"key": "name",
									"value": "{{ValidFactorId}}",
									"equals": true
								}
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "Get Study Factor - Priv - Auth - BadId -> 404",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5645b786-cec6-4542-8fcc-61994c3634fe",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 404\"] = responseCode.code === 404;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
									"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
									"tests[\"Body does NOT contain factors\"] = !(responseBody.has('\"factors\":'));",
									"tests[\"Body does NOT contain factor\"] = !(responseBody.has('\"factor\":'));",
									"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "None"
							},
							{
								"key": "user_token",
								"value": "{{userTokenOK}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/factors?name={{BadFactorId}}",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies",
								"{{PrivStudyId}}",
								"factors"
							],
							"query": [
								{
									"key": "name",
									"value": "{{BadFactorId}}",
									"equals": true
								}
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "Get Study Factor - Priv - Auth - NullId -> 404",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c5e3ab48-8e88-4ee4-8f09-1bffb20947cb",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 404\"] = responseCode.code === 404;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
									"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
									"tests[\"Body does NOT contain factors\"] = !(responseBody.has('\"factors\":'));",
									"tests[\"Body does NOT contain factor\"] = !(responseBody.has('\"factor\":'));",
									"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "None"
							},
							{
								"key": "user_token",
								"value": "{{userTokenOK}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/factors?name=''",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies",
								"{{PrivStudyId}}",
								"factors"
							],
							"query": [
								{
									"key": "name",
									"value": "''",
									"equals": true
								}
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "Get Study Factor - Priv -> 403",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0961c9cc-ffdf-4cac-a5ac-02e43ccf986b",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 403\"] = responseCode.code === 403;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
									"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
									"tests[\"Body does NOT contain factors\"] = !(responseBody.has('\"factors\":'));",
									"tests[\"Body does NOT contain factor\"] = !(responseBody.has('\"factor\":'));",
									"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "None"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/factors?name={{ValidFactorId}}",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies",
								"{{PrivStudyId}}",
								"factors"
							],
							"query": [
								{
									"key": "name",
									"value": "{{ValidFactorId}}",
									"equals": true
								}
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "Get Study Factor - Priv - NoAuth -> 403",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "664c1bce-ddee-47aa-95b9-683b711af5c6",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 403\"] = responseCode.code === 403;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
									"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
									"tests[\"Body does NOT contain factors\"] = !(responseBody.has('\"factors\":'));",
									"tests[\"Body does NOT contain factor\"] = !(responseBody.has('\"factor\":'));",
									"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "None"
							},
							{
								"key": "user_token",
								"value": "{{WrongAuth}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/factors?name={{ValidFactorId}}",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies",
								"{{PrivStudyId}}",
								"factors"
							],
							"query": [
								{
									"key": "name",
									"value": "{{ValidFactorId}}",
									"equals": true
								}
							]
						},
						"description": null
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "f3df7f22-8ee0-4535-b502-5a175c7c1894",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "851bf978-c1c5-4398-866c-78e3cc2c6ae7",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Get Study Design Descriptors",
			"description": null,
			"item": [
				{
					"name": "Get Study Design Descriptor - Pub -> 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "45db33df-957b-423c-90b8-a2804d2e4ac2",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Body has studyDesignDescriptors\"] = responseBody.has('\"studyDesignDescriptors\":');",
									"var jsonData = JSON.parse(responseBody);",
									"if (jsonData.studyDesignDescriptors) {",
									"    var item = jsonData.studyDesignDescriptors[0]",
									"    tests[\"JSON response has key 'annotationValue'\"] = item.hasOwnProperty('annotationValue');",
									"    tests[\"JSON response key 'annotationValue' not Null\"] = item.annotationValue;",
									"    tests[\"JSON response has key 'termSource'\"] = item.hasOwnProperty('termSource');",
									"    tests[\"JSON response key 'termSource' not Null\"] = item.termSource;",
									"    tests[\"JSON response has key 'termAccession'\"] = item.hasOwnProperty('termAccession');",
									"    tests[\"JSON response key 'termAccession' not Null\"] = item.termAccession;",
									"    tests[\"JSON response has key 'comments'\"] = item.hasOwnProperty('comments');",
									"    tests[\"JSON response key 'comments' not Null\"] = item.comments;",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/descriptors",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies",
								"{{PubStudyId}}",
								"descriptors"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "Get Study Design Descriptor - Pub - Auth -> 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9272de5e-24bb-4cb6-9d1e-9d92efbd9372",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Body has studyDesignDescriptors\"] = responseBody.has('\"studyDesignDescriptors\":');",
									"var jsonData = JSON.parse(responseBody);",
									"if (jsonData.studyDesignDescriptors) {",
									"    var item = jsonData.studyDesignDescriptors[0]",
									"    tests[\"JSON response has key 'annotationValue'\"] = item.hasOwnProperty('annotationValue');",
									"    tests[\"JSON response key 'annotationValue' not Null\"] = item.annotationValue;",
									"    tests[\"JSON response has key 'termSource'\"] = item.hasOwnProperty('termSource');",
									"    tests[\"JSON response key 'termSource' not Null\"] = item.termSource;",
									"    tests[\"JSON response has key 'termAccession'\"] = item.hasOwnProperty('termAccession');",
									"    tests[\"JSON response key 'termAccession' not Null\"] = item.termAccession;",
									"    tests[\"JSON response has key 'comments'\"] = item.hasOwnProperty('comments');",
									"    tests[\"JSON response key 'comments' not Null\"] = item.comments;",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "user_token",
								"value": "{{curator}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/descriptors",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies",
								"{{PubStudyId}}",
								"descriptors"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "Get Study Design Descriptor - Pub - NoAuth -> 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "586afc89-1fc6-4611-92c4-8f86e0a15d8a",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Body has studyDesignDescriptors\"] = responseBody.has('\"studyDesignDescriptors\":');",
									"var jsonData = JSON.parse(responseBody);",
									"if (jsonData.studyDesignDescriptors) {",
									"    var item = jsonData.studyDesignDescriptors[0]",
									"    tests[\"JSON response has key 'annotationValue'\"] = item.hasOwnProperty('annotationValue');",
									"    tests[\"JSON response key 'annotationValue' not Null\"] = item.annotationValue;",
									"    tests[\"JSON response has key 'termSource'\"] = item.hasOwnProperty('termSource');",
									"    tests[\"JSON response key 'termSource' not Null\"] = item.termSource;",
									"    tests[\"JSON response has key 'termAccession'\"] = item.hasOwnProperty('termAccession');",
									"    tests[\"JSON response key 'termAccession' not Null\"] = item.termAccession;",
									"    tests[\"JSON response has key 'comments'\"] = item.hasOwnProperty('comments');",
									"    tests[\"JSON response key 'comments' not Null\"] = item.comments;",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "user_token",
								"value": "{{WrongAuth}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/descriptors",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies",
								"{{PubStudyId}}",
								"descriptors"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "Get Study Design Descriptor - Priv -> 403",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8e4d92ce-4b1d-42d0-b2aa-c8a922136b05",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 403\"] = responseCode.code === 403;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
									"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
									"tests[\"Body does NOT contain studyDesignDescriptor\"] = !(responseBody.has('\"studyDesignDescriptor\":'));",
									"tests[\"Body does NOT contain studyDesignDescriptor\"] = !(responseBody.has('\"studyDesignDescriptor\":'));",
									"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/descriptors",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies",
								"{{PrivStudyId}}",
								"descriptors"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "Get Study Design Descriptor - Priv - Auth -> 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cd52b475-b8a2-47c6-8252-1a88057aefcc",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Body has studyDesignDescriptors\"] = responseBody.has('\"studyDesignDescriptors\":');",
									"var jsonData = JSON.parse(responseBody);",
									"if (jsonData.studyDesignDescriptors) {",
									"    var item = jsonData.studyDesignDescriptors[0]",
									"    tests[\"JSON response has key 'annotationValue'\"] = item.hasOwnProperty('annotationValue');",
									"    tests[\"JSON response key 'annotationValue' not Null\"] = item.annotationValue;",
									"    tests[\"JSON response has key 'termSource'\"] = item.hasOwnProperty('termSource');",
									"    tests[\"JSON response key 'termSource' not Null\"] = item.termSource;",
									"    tests[\"JSON response has key 'termAccession'\"] = item.hasOwnProperty('termAccession');",
									"    tests[\"JSON response key 'termAccession' not Null\"] = item.termAccession;",
									"    tests[\"JSON response has key 'comments'\"] = item.hasOwnProperty('comments');",
									"    tests[\"JSON response key 'comments' not Null\"] = item.comments;",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "user_token",
								"value": "{{curator}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/descriptors",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies",
								"{{PrivStudyId}}",
								"descriptors"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "Get Study Design Descriptor - Priv - NoAuth -> 403",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e7f58c7a-d66a-4939-ae57-ccf879c887f6",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 403\"] = responseCode.code === 403;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
									"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
									"tests[\"Body does NOT contain studyDesignDescriptor\"] = !(responseBody.has('\"studyDesignDescriptor\":'));",
									"tests[\"Body does NOT contain studyDesignDescriptor\"] = !(responseBody.has('\"studyDesignDescriptor\":'));",
									"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "user_token",
								"value": "{{WrongAuth}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/descriptors",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies",
								"{{PrivStudyId}}",
								"descriptors"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "Get Study Design Descriptor - NullId -> 404",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "62b321c5-dfe1-46da-9d68-9628b0da5d78",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 404\"] = responseCode.code === 404;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
									"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
									"tests[\"Body does NOT contain studyDesignDescriptor\"] = !(responseBody.has('\"studyDesignDescriptor\":'));",
									"tests[\"Body does NOT contain studyDesignDescriptor\"] = !(responseBody.has('\"studyDesignDescriptor\":'));",
									"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies//descriptors",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies",
								"",
								"descriptors"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "Get Study Design Descriptor - BadId -> 404",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6608fc95-8f4e-4522-8d10-b59de5c314a2",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 404\"] = responseCode.code === 404;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
									"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
									"tests[\"Body does NOT contain studyDesignDescriptor\"] = !(responseBody.has('\"studyDesignDescriptor\":'));",
									"tests[\"Body does NOT contain studyDesignDescriptor\"] = !(responseBody.has('\"studyDesignDescriptor\":'));",
									"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "user_token",
								"value": "{{userTokenOK}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{BadStudyId}}/descriptors",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies",
								"{{BadStudyId}}",
								"descriptors"
							]
						},
						"description": null
					},
					"response": []
				}
			]
		},
		{
			"name": "Get Study Design Descriptor",
			"description": null,
			"item": [
				{
					"name": "Get Study Design Descriptor - Pub - GoodId -> 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6de47202-738e-477a-b3f7-f8aa4cb0e55f",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Body has studyDesignDescriptor\"] = responseBody.has('\"studyDesignDescriptor\":');",
									"var jsonData = JSON.parse(responseBody);",
									"if (jsonData.studyDesignDescriptor) {",
									"    var item = jsonData.studyDesignDescriptor",
									"    tests[\"JSON response has key 'annotationValue'\"] = item.hasOwnProperty('annotationValue');",
									"    tests[\"JSON response key 'annotationValue' not Null\"] = item.annotationValue;",
									"    tests[\"JSON response has key 'termSource'\"] = item.hasOwnProperty('termSource');",
									"    tests[\"JSON response key 'termSource' not Null\"] = item.termSource;",
									"    tests[\"JSON response has key 'termAccession'\"] = item.hasOwnProperty('termAccession');",
									"    tests[\"JSON response key 'termAccession' not Null\"] = item.termAccession;",
									"    tests[\"JSON response has key 'comments'\"] = item.hasOwnProperty('comments');",
									"    tests[\"JSON response key 'comments' not Null\"] = item.comments;",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "None"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/descriptors?annotationValue={{ValidDescriptorId}}",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies",
								"{{PubStudyId}}",
								"descriptors"
							],
							"query": [
								{
									"key": "annotationValue",
									"value": "{{ValidDescriptorId}}",
									"equals": true
								}
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "Get Study Design Descriptor - Pub - BadId -> 404",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "aa29f702-9015-4c30-9e71-73535d0ef239",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 404\"] = responseCode.code === 404;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
									"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
									"tests[\"Body does NOT contain studyDesignDescriptor\"] = !(responseBody.has('\"studyDesignDescriptor\":'));",
									"tests[\"Body does NOT contain studyDesignDescriptor\"] = !(responseBody.has('\"studyDesignDescriptor\":'));",
									"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "None"
							},
							{
								"key": "user_token",
								"value": "{{curator}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/descriptors?annotationValue={{BadDescriptorId}}",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies",
								"{{PubStudyId}}",
								"descriptors"
							],
							"query": [
								{
									"key": "annotationValue",
									"value": "{{BadDescriptorId}}",
									"equals": true
								}
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "Get Study Design Descriptor - Pub - NullId -> 404",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "91776872-5e49-459a-aa27-dc3c3b0417d1",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 404\"] = responseCode.code === 404;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
									"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
									"tests[\"Body does NOT contain studyDesignDescriptor\"] = !(responseBody.has('\"studyDesignDescriptor\":'));",
									"tests[\"Body does NOT contain studyDesignDescriptor\"] = !(responseBody.has('\"studyDesignDescriptor\":'));",
									"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "None"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/descriptors?annotationValue=''",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies",
								"{{PubStudyId}}",
								"descriptors"
							],
							"query": [
								{
									"key": "annotationValue",
									"value": "''",
									"equals": true
								}
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "Get Study Design Descriptor - Priv - Auth - GoodId -> 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a70e918a-332e-422e-971e-1d0f0dc42a33",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Body has studyDesignDescriptor\"] = responseBody.has('\"studyDesignDescriptor\":');",
									"var jsonData = JSON.parse(responseBody);",
									"if (jsonData.studyDesignDescriptor) {",
									"    var item = jsonData.studyDesignDescriptor",
									"    tests[\"JSON response has key 'annotationValue'\"] = item.hasOwnProperty('annotationValue');",
									"    tests[\"JSON response key 'annotationValue' not Null\"] = item.annotationValue;",
									"    tests[\"JSON response has key 'termSource'\"] = item.hasOwnProperty('termSource');",
									"    tests[\"JSON response key 'termSource' not Null\"] = item.termSource;",
									"    tests[\"JSON response has key 'termAccession'\"] = item.hasOwnProperty('termAccession');",
									"    tests[\"JSON response key 'termAccession' not Null\"] = item.termAccession;",
									"    tests[\"JSON response has key 'comments'\"] = item.hasOwnProperty('comments');",
									"    tests[\"JSON response key 'comments' not Null\"] = item.comments;",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "None"
							},
							{
								"key": "user_token",
								"value": "{{userTokenOK}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/descriptors?annotationValue={{ValidDescriptorId}}",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies",
								"{{PrivStudyId}}",
								"descriptors"
							],
							"query": [
								{
									"key": "annotationValue",
									"value": "{{ValidDescriptorId}}",
									"equals": true
								}
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "Get Study Design Descriptor - Priv - Auth - BadId -> 404",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4a641de0-5360-4187-8e39-39b9ce63f7f2",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 404\"] = responseCode.code === 404;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
									"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
									"tests[\"Body does NOT contain studyDesignDescriptor\"] = !(responseBody.has('\"studyDesignDescriptor\":'));",
									"tests[\"Body does NOT contain studyDesignDescriptor\"] = !(responseBody.has('\"studyDesignDescriptor\":'));",
									"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "None"
							},
							{
								"key": "user_token",
								"value": "{{userTokenOK}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/descriptors?annotationValue={{BadDescriptorId}}",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies",
								"{{PrivStudyId}}",
								"descriptors"
							],
							"query": [
								{
									"key": "annotationValue",
									"value": "{{BadDescriptorId}}",
									"equals": true
								}
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "Get Study Design Descriptor - Priv - Auth - NullId -> 404",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "152fccb0-40f4-4fcf-9ffc-1c5ce8d4e91a",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 404\"] = responseCode.code === 404;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
									"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
									"tests[\"Body does NOT contain studyDesignDescriptor\"] = !(responseBody.has('\"studyDesignDescriptor\":'));",
									"tests[\"Body does NOT contain studyDesignDescriptor\"] = !(responseBody.has('\"studyDesignDescriptor\":'));",
									"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "None"
							},
							{
								"key": "user_token",
								"value": "{{userTokenOK}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/descriptors?annotationValue=''",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies",
								"{{PrivStudyId}}",
								"descriptors"
							],
							"query": [
								{
									"key": "annotationValue",
									"value": "''",
									"equals": true
								}
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "Get Study Design Descriptor - Priv -> 403",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "53a57af7-3aa1-423d-b37f-d386a656e29e",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 403\"] = responseCode.code === 403;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
									"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
									"tests[\"Body does NOT contain studyDesignDescriptor\"] = !(responseBody.has('\"studyDesignDescriptor\":'));",
									"tests[\"Body does NOT contain studyDesignDescriptor\"] = !(responseBody.has('\"studyDesignDescriptor\":'));",
									"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "None"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/descriptors?annotationValue={{ValidDescriptorId}}",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies",
								"{{PrivStudyId}}",
								"descriptors"
							],
							"query": [
								{
									"key": "annotationValue",
									"value": "{{ValidDescriptorId}}",
									"equals": true
								}
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "Get Study Design Descriptor - Priv - NoAuth -> 403",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "dca3af15-83ab-458f-91e9-54cb581f3e78",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 403\"] = responseCode.code === 403;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
									"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
									"tests[\"Body does NOT contain studyDesignDescriptor\"] = !(responseBody.has('\"studyDesignDescriptor\":'));",
									"tests[\"Body does NOT contain studyDesignDescriptor\"] = !(responseBody.has('\"studyDesignDescriptor\":'));",
									"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "None"
							},
							{
								"key": "user_token",
								"value": "{{WrongAuth}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/descriptors?annotationValue={{ValidDescriptorId}}",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies",
								"{{PrivStudyId}}",
								"descriptors"
							],
							"query": [
								{
									"key": "annotationValue",
									"value": "{{ValidDescriptorId}}",
									"equals": true
								}
							]
						},
						"description": null
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "f3df7f22-8ee0-4535-b502-5a175c7c1894",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "851bf978-c1c5-4398-866c-78e3cc2c6ae7",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Get Study Publications",
			"description": null,
			"item": [
				{
					"name": "Get Study Publications - Pub -> 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "43afb411-5053-4c00-b12b-55ee11a71f11",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Body has publications\"] = responseBody.has('\"publications\":');",
									"var jsonData = JSON.parse(responseBody);",
									"if (jsonData.publications.length > 0) {",
									"    var item = jsonData.publications[0];",
									"    tests[\"JSON response has key 'title'\"] = item.hasOwnProperty('title');",
									"    tests[\"JSON response key 'title' not Null\"] = item.title;",
									"    tests[\"JSON response has key 'authorList'\"] = item.hasOwnProperty('authorList');",
									"    tests[\"JSON response key 'authorList' not Null\"] = item.authorList;",
									"    tests[\"JSON response has key 'pubMedID'\"] = item.hasOwnProperty('pubMedID');",
									"    tests[\"JSON response key 'pubMedID' not Null\"] = item.pubMedID;",
									"    tests[\"JSON response has key 'doi'\"] = item.hasOwnProperty('doi');",
									"    tests[\"JSON response key 'doi' not Null\"] = item.doi;",
									"    if (item.status) {",
									"        var item = item.status",
									"        tests[\"JSON response has key 'annotationValue'\"] = item.hasOwnProperty('annotationValue');",
									"        tests[\"JSON response key 'annotationValue' not Null\"] = item.annotationValue;",
									"        tests[\"JSON response has key 'termSource'\"] = item.hasOwnProperty('termSource');",
									"        // tests[\"JSON response key 'termSource' not Null\"] = item.termSource;",
									"        tests[\"JSON response has key 'termAccession'\"] = item.hasOwnProperty('termAccession');",
									"        // tests[\"JSON response key 'termAccession' not Null\"] = item.termAccession;",
									"        tests[\"JSON response has key 'comments'\"] = item.hasOwnProperty('comments');",
									"        tests[\"JSON response key 'comments' not Null\"] = item.comments;",
									"    }",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/publications",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies",
								"{{PubStudyId}}",
								"publications"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "Get Study Publications - Pub - Auth -> 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0656d02a-f115-4c28-9187-a4300870f574",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Body has publications\"] = responseBody.has('\"publications\":');",
									"var jsonData = JSON.parse(responseBody);",
									"if (jsonData.publications.length > 0) {",
									"    var item = jsonData.publications[0];",
									"    tests[\"JSON response has key 'title'\"] = item.hasOwnProperty('title');",
									"    tests[\"JSON response key 'title' not Null\"] = item.title;",
									"    tests[\"JSON response has key 'authorList'\"] = item.hasOwnProperty('authorList');",
									"    tests[\"JSON response key 'authorList' not Null\"] = item.authorList;",
									"    tests[\"JSON response has key 'pubMedID'\"] = item.hasOwnProperty('pubMedID');",
									"    tests[\"JSON response key 'pubMedID' not Null\"] = item.pubMedID;",
									"    tests[\"JSON response has key 'doi'\"] = item.hasOwnProperty('doi');",
									"    tests[\"JSON response key 'doi' not Null\"] = item.doi;",
									"    if (item.status) {",
									"        var item = item.status",
									"        tests[\"JSON response has key 'annotationValue'\"] = item.hasOwnProperty('annotationValue');",
									"        tests[\"JSON response key 'annotationValue' not Null\"] = item.annotationValue;",
									"        tests[\"JSON response has key 'termSource'\"] = item.hasOwnProperty('termSource');",
									"        // tests[\"JSON response key 'termSource' not Null\"] = item.termSource;",
									"        tests[\"JSON response has key 'termAccession'\"] = item.hasOwnProperty('termAccession');",
									"        // tests[\"JSON response key 'termAccession' not Null\"] = item.termAccession;",
									"        tests[\"JSON response has key 'comments'\"] = item.hasOwnProperty('comments');",
									"        tests[\"JSON response key 'comments' not Null\"] = item.comments;",
									"    }",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "user_token",
								"value": "{{curator}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/publications",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies",
								"{{PubStudyId}}",
								"publications"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "Get Study Publications - Pub - NoAuth -> 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6f027c76-bff7-41b4-8e57-497be79ddc7b",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Body has publications\"] = responseBody.has('\"publications\":');",
									"var jsonData = JSON.parse(responseBody);",
									"if (jsonData.publications.length > 0) {",
									"    var item = jsonData.publications[0];",
									"    tests[\"JSON response has key 'title'\"] = item.hasOwnProperty('title');",
									"    tests[\"JSON response key 'title' not Null\"] = item.title;",
									"    tests[\"JSON response has key 'authorList'\"] = item.hasOwnProperty('authorList');",
									"    tests[\"JSON response key 'authorList' not Null\"] = item.authorList;",
									"    tests[\"JSON response has key 'pubMedID'\"] = item.hasOwnProperty('pubMedID');",
									"    tests[\"JSON response key 'pubMedID' not Null\"] = item.pubMedID;",
									"    tests[\"JSON response has key 'doi'\"] = item.hasOwnProperty('doi');",
									"    tests[\"JSON response key 'doi' not Null\"] = item.doi;",
									"    if (item.status) {",
									"        var item = item.status",
									"        tests[\"JSON response has key 'annotationValue'\"] = item.hasOwnProperty('annotationValue');",
									"        tests[\"JSON response key 'annotationValue' not Null\"] = item.annotationValue;",
									"        tests[\"JSON response has key 'termSource'\"] = item.hasOwnProperty('termSource');",
									"        // tests[\"JSON response key 'termSource' not Null\"] = item.termSource;",
									"        tests[\"JSON response has key 'termAccession'\"] = item.hasOwnProperty('termAccession');",
									"        // tests[\"JSON response key 'termAccession' not Null\"] = item.termAccession;",
									"        tests[\"JSON response has key 'comments'\"] = item.hasOwnProperty('comments');",
									"        tests[\"JSON response key 'comments' not Null\"] = item.comments;",
									"    }",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "user_token",
								"value": "{{WrongAuth}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/publications",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies",
								"{{PubStudyId}}",
								"publications"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "Get Study Publications - Priv -> 403",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "eaccd563-853c-4b9d-8765-ce9b7eea3788",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 403\"] = responseCode.code === 403;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
									"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
									"tests[\"Body does NOT contain publications\"] = !(responseBody.has('\"publications\":'));",
									"tests[\"Body does NOT contain publication\"] = !(responseBody.has('\"publication\":'));",
									"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/publications",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies",
								"{{PrivStudyId}}",
								"publications"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "Get Study Publications - Priv - Auth -> 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "664d669a-6072-45a2-b1b0-5d7ce2c24784",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Body has publications\"] = responseBody.has('\"publications\":');",
									"var jsonData = JSON.parse(responseBody);",
									"if (jsonData.publications.length > 0) {",
									"    var item = jsonData.publications[0];",
									"    tests[\"JSON response has key 'title'\"] = item.hasOwnProperty('title');",
									"    tests[\"JSON response key 'title' not Null\"] = item.title;",
									"    tests[\"JSON response has key 'authorList'\"] = item.hasOwnProperty('authorList');",
									"    tests[\"JSON response key 'authorList' not Null\"] = item.authorList;",
									"    tests[\"JSON response has key 'pubMedID'\"] = item.hasOwnProperty('pubMedID');",
									"    tests[\"JSON response key 'pubMedID' not Null\"] = item.pubMedID;",
									"    tests[\"JSON response has key 'doi'\"] = item.hasOwnProperty('doi');",
									"    tests[\"JSON response key 'doi' not Null\"] = item.doi;",
									"    if (item.status) {",
									"        var item = item.status",
									"        tests[\"JSON response has key 'annotationValue'\"] = item.hasOwnProperty('annotationValue');",
									"        tests[\"JSON response key 'annotationValue' not Null\"] = item.annotationValue;",
									"        tests[\"JSON response has key 'termSource'\"] = item.hasOwnProperty('termSource');",
									"        // tests[\"JSON response key 'termSource' not Null\"] = item.termSource;",
									"        tests[\"JSON response has key 'termAccession'\"] = item.hasOwnProperty('termAccession');",
									"        // tests[\"JSON response key 'termAccession' not Null\"] = item.termAccession;",
									"        tests[\"JSON response has key 'comments'\"] = item.hasOwnProperty('comments');",
									"        tests[\"JSON response key 'comments' not Null\"] = item.comments;",
									"    }",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "user_token",
								"value": "{{curator}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/publications",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies",
								"{{PrivStudyId}}",
								"publications"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "Get Study Publications - Priv - NoAuth -> 403",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "512ec546-9fa3-47fb-bafd-7179eb3ba7c6",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 403\"] = responseCode.code === 403;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
									"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
									"tests[\"Body does NOT contain publications\"] = !(responseBody.has('\"publications\":'));",
									"tests[\"Body does NOT contain publication\"] = !(responseBody.has('\"publication\":'));",
									"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "user_token",
								"value": "{{WrongAuth}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/publications",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies",
								"{{PrivStudyId}}",
								"publications"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "Get Study Publications - NullId -> 404",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "37c523a0-5f35-402d-9da3-b10297ba9de6",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 404\"] = responseCode.code === 404;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
									"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
									"tests[\"Body does NOT contain publications\"] = !(responseBody.has('\"publications\":'));",
									"tests[\"Body does NOT contain publication\"] = !(responseBody.has('\"publication\":'));",
									"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies//publications",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies",
								"",
								"publications"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "Get Study Publications - BadId -> 404",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "47335c32-a8ce-421c-86af-11e7fc9e8465",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 404\"] = responseCode.code === 404;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
									"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
									"tests[\"Body does NOT contain publications\"] = !(responseBody.has('\"publications\":'));",
									"tests[\"Body does NOT contain publication\"] = !(responseBody.has('\"publication\":'));",
									"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "user_token",
								"value": "{{userTokenOK}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{BadStudyId}}/publications",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies",
								"{{BadStudyId}}",
								"publications"
							]
						},
						"description": null
					},
					"response": []
				}
			]
		},
		{
			"name": "Get Study Publication",
			"description": null,
			"item": [
				{
					"name": "Get Study Publication - Pub - GoodId -> 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a163de15-ebb4-4744-bbb9-e6851396df22",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Body has publication\"] = responseBody.has('\"publication\":');",
									"var jsonData = JSON.parse(responseBody);",
									"if (jsonData.publication) {",
									"    var item = jsonData.publication;",
									"    tests[\"JSON response has key 'title'\"] = item.hasOwnProperty('title');",
									"    tests[\"JSON response key 'title' not Null\"] = item.title;",
									"    tests[\"JSON response has key 'authorList'\"] = item.hasOwnProperty('authorList');",
									"    tests[\"JSON response key 'authorList' not Null\"] = item.authorList;",
									"    tests[\"JSON response has key 'pubMedID'\"] = item.hasOwnProperty('pubMedID');",
									"    tests[\"JSON response key 'pubMedID' not Null\"] = item.pubMedID;",
									"    tests[\"JSON response has key 'doi'\"] = item.hasOwnProperty('doi');",
									"    tests[\"JSON response key 'doi' not Null\"] = item.doi;",
									"    if (item.status) {",
									"        var item = item.status",
									"        tests[\"JSON response has key 'annotationValue'\"] = item.hasOwnProperty('annotationValue');",
									"        tests[\"JSON response key 'annotationValue' not Null\"] = item.annotationValue;",
									"        tests[\"JSON response has key 'termSource'\"] = item.hasOwnProperty('termSource');",
									"        // tests[\"JSON response key 'termSource' not Null\"] = item.termSource;",
									"        tests[\"JSON response has key 'termAccession'\"] = item.hasOwnProperty('termAccession');",
									"        // tests[\"JSON response key 'termAccession' not Null\"] = item.termAccession;",
									"        tests[\"JSON response has key 'comments'\"] = item.hasOwnProperty('comments');",
									"        tests[\"JSON response key 'comments' not Null\"] = item.comments;",
									"    }",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "None"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/publications?title={{ValidPublicationId}}",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies",
								"{{PubStudyId}}",
								"publications"
							],
							"query": [
								{
									"key": "title",
									"value": "{{ValidPublicationId}}",
									"equals": true
								}
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "Get Study Publication - Pub - BadId -> 404",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "40ac829a-f82d-40a1-a767-4d38acedba4e",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 404\"] = responseCode.code === 404;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
									"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
									"tests[\"Body does NOT contain publications\"] = !(responseBody.has('\"publications\":'));",
									"tests[\"Body does NOT contain publication\"] = !(responseBody.has('\"publication\":'));",
									"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "None"
							},
							{
								"key": "user_token",
								"value": "{{curator}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/publications?title={{BadPubicationId}}",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies",
								"{{PubStudyId}}",
								"publications"
							],
							"query": [
								{
									"key": "title",
									"value": "{{BadPubicationId}}",
									"equals": true
								}
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "Get Study Publication - Pub - NullId -> 404",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e0ad3ed4-e8d6-4007-a154-7610085b3b21",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 404\"] = responseCode.code === 404;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
									"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
									"tests[\"Body does NOT contain publications\"] = !(responseBody.has('\"publications\":'));",
									"tests[\"Body does NOT contain publication\"] = !(responseBody.has('\"publication\":'));",
									"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "None"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/publications?title=''",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies",
								"{{PubStudyId}}",
								"publications"
							],
							"query": [
								{
									"key": "title",
									"value": "''",
									"equals": true
								}
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "Get Study Publication - Priv - Auth - GoodId -> 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fbcdd577-5951-43b5-8b14-abb7ea893860",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Body has publication\"] = responseBody.has('\"publication\":');",
									"var jsonData = JSON.parse(responseBody);",
									"if (jsonData.publication) {",
									"    var item = jsonData.publication;",
									"    tests[\"JSON response has key 'title'\"] = item.hasOwnProperty('title');",
									"    tests[\"JSON response key 'title' not Null\"] = item.title;",
									"    tests[\"JSON response has key 'authorList'\"] = item.hasOwnProperty('authorList');",
									"    tests[\"JSON response key 'authorList' not Null\"] = item.authorList;",
									"    tests[\"JSON response has key 'pubMedID'\"] = item.hasOwnProperty('pubMedID');",
									"    tests[\"JSON response key 'pubMedID' not Null\"] = item.pubMedID;",
									"    tests[\"JSON response has key 'doi'\"] = item.hasOwnProperty('doi');",
									"    tests[\"JSON response key 'doi' not Null\"] = item.doi;",
									"    if (item.status) {",
									"        var item = item.status",
									"        tests[\"JSON response has key 'annotationValue'\"] = item.hasOwnProperty('annotationValue');",
									"        tests[\"JSON response key 'annotationValue' not Null\"] = item.annotationValue;",
									"        tests[\"JSON response has key 'termSource'\"] = item.hasOwnProperty('termSource');",
									"        // tests[\"JSON response key 'termSource' not Null\"] = item.termSource;",
									"        tests[\"JSON response has key 'termAccession'\"] = item.hasOwnProperty('termAccession');",
									"        // tests[\"JSON response key 'termAccession' not Null\"] = item.termAccession;",
									"        tests[\"JSON response has key 'comments'\"] = item.hasOwnProperty('comments');",
									"        tests[\"JSON response key 'comments' not Null\"] = item.comments;",
									"    }",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "None"
							},
							{
								"key": "user_token",
								"value": "{{userTokenOK}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/publications?title={{ValidPublicationId}}",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies",
								"{{PrivStudyId}}",
								"publications"
							],
							"query": [
								{
									"key": "title",
									"value": "{{ValidPublicationId}}",
									"equals": true
								}
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "Get Study Publication - Priv - Auth - BadId -> 404",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "24ad7f96-f3e5-4218-a70b-56742b4f431f",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 404\"] = responseCode.code === 404;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
									"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
									"tests[\"Body does NOT contain publications\"] = !(responseBody.has('\"publications\":'));",
									"tests[\"Body does NOT contain publication\"] = !(responseBody.has('\"publication\":'));",
									"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "None"
							},
							{
								"key": "user_token",
								"value": "{{userTokenOK}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/publications?title={{BadPubicationId}}",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies",
								"{{PrivStudyId}}",
								"publications"
							],
							"query": [
								{
									"key": "title",
									"value": "{{BadPubicationId}}",
									"equals": true
								}
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "Get Study Publication - Priv - Auth - NullId -> 404",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5ea785e3-4d4f-4a81-9739-2337f890f61f",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 404\"] = responseCode.code === 404;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
									"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
									"tests[\"Body does NOT contain publications\"] = !(responseBody.has('\"publications\":'));",
									"tests[\"Body does NOT contain publication\"] = !(responseBody.has('\"publication\":'));",
									"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "None"
							},
							{
								"key": "user_token",
								"value": "{{userTokenOK}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/publications?title=''",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies",
								"{{PrivStudyId}}",
								"publications"
							],
							"query": [
								{
									"key": "title",
									"value": "''",
									"equals": true
								}
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "Get Study Publication - Priv -> 403",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4af0ac33-8e70-4d86-9249-2f6c165f91d0",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 403\"] = responseCode.code === 403;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
									"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
									"tests[\"Body does NOT contain publications\"] = !(responseBody.has('\"publications\":'));",
									"tests[\"Body does NOT contain publication\"] = !(responseBody.has('\"publication\":'));",
									"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "None"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/publications?title={{ValidPublicationId}}",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies",
								"{{PrivStudyId}}",
								"publications"
							],
							"query": [
								{
									"key": "title",
									"value": "{{ValidPublicationId}}",
									"equals": true
								}
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "Get Study Publication - Priv - NoAuth -> 403",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "adbd2a9a-299f-429e-a919-b594cef8a726",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 403\"] = responseCode.code === 403;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
									"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
									"tests[\"Body does NOT contain publications\"] = !(responseBody.has('\"publications\":'));",
									"tests[\"Body does NOT contain publication\"] = !(responseBody.has('\"publication\":'));",
									"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "None"
							},
							{
								"key": "user_token",
								"value": "{{WrongAuth}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/publications?title={{ValidPublicationId}}",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies",
								"{{PrivStudyId}}",
								"publications"
							],
							"query": [
								{
									"key": "title",
									"value": "{{ValidPublicationId}}",
									"equals": true
								}
							]
						},
						"description": null
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "f3df7f22-8ee0-4535-b502-5a175c7c1894",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "851bf978-c1c5-4398-866c-78e3cc2c6ae7",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "dcaa500f-aec0-4e6a-b155-aff881b0d56e",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "42ac4b2e-79cd-40cb-979b-6ef7c4017555",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}