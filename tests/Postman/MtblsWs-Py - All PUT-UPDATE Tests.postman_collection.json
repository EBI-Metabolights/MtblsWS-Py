{
	"info": {
		"name": "MtblsWs-Py - All PUT-UPDATE Tests",
		"_postman_id": "d13858e1-4268-ec6e-03c2-75bb3ba228b5",
		"description": "Only UPDATE methods, those which actually modify data in the server. Should be run with caution, as it may lead to data loss (when run in PROD) or inconsistencies.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Update Study Title",
			"description": null,
			"item": [
				{
					"name": "Pub",
					"description": "",
					"item": [
						{
							"name": "Update Study Title - Pub - Auth -> 200",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f7ae13f6-5e6f-4922-a513-6b101374ba7f",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Body has title\"] = responseBody.has('\"title\":');",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"Study title\"\n}"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/title",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PubStudyId}}",
										"title"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Update Study Title - Pub - NoAuth -> 403",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f567243e-f2db-43f2-8164-d985ad5039b5",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 403\"] = responseCode.code === 403;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain title\"] = !(responseBody.has('\"title\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{WrongAuth}}"
									},
									{
										"key": "save_audit_copy",
										"value": "True"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"Study title\"\n}"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/title",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PubStudyId}}",
										"title"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Update Study Title - Pub - Auth - NoSave -> 200",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ed82d28d-d8da-4ffd-ab39-eece9ab1cd70",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Body has title\"] = responseBody.has('\"title\":');",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									},
									{
										"key": "save_audit_copy",
										"value": "False"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"Study title\"\n}"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/title",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PubStudyId}}",
										"title"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Update Study Title - Pub - NoAuth - NoSave -> 403",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a365bd59-4cc7-419e-8059-8f20d57f7d2d",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 403\"] = responseCode.code === 403;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain title\"] = !(responseBody.has('\"title\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{WrongAuth}}"
									},
									{
										"key": "save_audit_copy",
										"value": "False"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"Study title\"\n}"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/title",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PubStudyId}}",
										"title"
									]
								},
								"description": null
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Priv",
					"description": "",
					"item": [
						{
							"name": "Update Study Title - Priv - Auth -> 200",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "35cfea89-f22f-4f33-8acc-085f3f821058",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Body has title\"] = responseBody.has('\"title\":');",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"Study title\"\n}"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/title",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PrivStudyId}}",
										"title"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Update Study Title - Priv - NoAuth -> 403",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5e1d1117-51e2-42c1-a04b-1e2e74daa64d",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 403\"] = responseCode.code === 403;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain title\"] = !(responseBody.has('\"title\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{WrongAuth}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"Study title\"\n}"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/title",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PrivStudyId}}",
										"title"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Update Study Title - Priv - Auth - NoSave -> 200",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "86d08ddb-e5e6-40b5-b5a5-2a07ce8a27d8",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Body has title\"] = responseBody.has('\"title\":');",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									},
									{
										"key": "save_audit_copy",
										"value": "False"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"Study title\"\n}"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/title",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PrivStudyId}}",
										"title"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Update Study Title - Priv - NoAuth - NoSave -> 403",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6df798d4-93cb-495a-af51-498a11e2f5df",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 403\"] = responseCode.code === 403;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain title\"] = !(responseBody.has('\"title\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{WrongAuth}}"
									},
									{
										"key": "save_audit_copy",
										"value": "False"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"Study title\"\n}"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/title",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PrivStudyId}}",
										"title"
									]
								},
								"description": null
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Update Study Title - NullId -> 404",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "27186e32-e8a7-4b4a-bd2d-3e91ae276a6f",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 404\"] = responseCode.code === 404;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
									"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
									"tests[\"Body does NOT contain title\"] = !(responseBody.has('\"title\":'));",
									"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies//title",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies",
								"",
								"title"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "Update Study Title - BadId -> 404",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0d72befe-1949-45f1-b711-1f72a264e8ce",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 404\"] = responseCode.code === 404;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
									"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
									"tests[\"Body does NOT contain title\"] = !(responseBody.has('\"title\":'));",
									"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "user_token",
								"value": "{{curator}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{BadStudyId}}/title",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies",
								"{{BadStudyId}}",
								"title"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "Update Study Title - NullId - NoSave -> 404",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e0bef6c8-4397-4620-a5e6-f113afe21005",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 404\"] = responseCode.code === 404;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
									"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
									"tests[\"Body does NOT contain title\"] = !(responseBody.has('\"title\":'));",
									"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "save_audit_copy",
								"value": "False"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies//title",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies",
								"",
								"title"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "Update Study Title - BadId - NoSave -> 404",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b87ee810-763a-4cd1-82d8-06195f408801",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 404\"] = responseCode.code === 404;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
									"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
									"tests[\"Body does NOT contain title\"] = !(responseBody.has('\"title\":'));",
									"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "user_token",
								"value": "{{curator}}"
							},
							{
								"key": "save_audit_copy",
								"value": "False"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Study title\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{BadStudyId}}/title",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies",
								"{{BadStudyId}}",
								"title"
							]
						},
						"description": null
					},
					"response": []
				}
			]
		},
		{
			"name": "Update Study Description",
			"description": null,
			"item": [
				{
					"name": "Pub",
					"description": "",
					"item": [
						{
							"name": "Update Study Description - Pub - Auth -> 200",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ab0d721d-1490-4774-ba4a-d490f4d13425",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Body has description\"] = responseBody.has('\"description\":');",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"Study description\"\n}"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/description",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PubStudyId}}",
										"description"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Update Study Description - Pub - NoAuth -> 403",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b57fa7de-bb4d-4bce-ae4b-f8be469bd2d8",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 403\"] = responseCode.code === 403;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain description\"] = !(responseBody.has('\"description\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{WrongAuth}}"
									},
									{
										"key": "save_audit_copy",
										"value": "True"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"Study description\"\n}"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/description",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PubStudyId}}",
										"description"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Update Study Description - Pub - Auth - NoSave -> 200",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9eb6841d-9eeb-4416-8384-4e85ebff166e",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Body has description\"] = responseBody.has('\"description\":');",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									},
									{
										"key": "save_audit_copy",
										"value": "False"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"Study description\"\n}"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/description",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PubStudyId}}",
										"description"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Update Study Description - Pub - NoAuth - NoSave -> 403",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5af9c92d-e4ba-4c56-bf80-6855e68123ae",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 403\"] = responseCode.code === 403;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain description\"] = !(responseBody.has('\"description\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{WrongAuth}}"
									},
									{
										"key": "save_audit_copy",
										"value": "False"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"Study description\"\n}"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/description",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PubStudyId}}",
										"description"
									]
								},
								"description": null
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Priv",
					"description": "",
					"item": [
						{
							"name": "Update Study Description - Priv - Auth -> 200",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6b294e55-70f9-420f-99e4-f4625bff4cf4",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Body has description\"] = responseBody.has('\"description\":');",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"Study description\"\n}"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/description",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PrivStudyId}}",
										"description"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Update Study Description - Priv - NoAuth -> 403",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b15136b1-4ab7-4726-bd7f-90ee012c5001",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 403\"] = responseCode.code === 403;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain description\"] = !(responseBody.has('\"description\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{WrongAuth}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"Study description\"\n}"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/description",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PrivStudyId}}",
										"description"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Update Study Description - Priv - Auth - NoSave -> 200",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2d2b4dd0-db0d-4823-9711-0dfc93a72800",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Body has description\"] = responseBody.has('\"description\":');",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									},
									{
										"key": "save_audit_copy",
										"value": "False"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"Study description\"\n}"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/description",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PrivStudyId}}",
										"description"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Update Study Description - Priv - NoAuth - NoSave -> 403",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "19632968-a91c-4153-a10b-e75d9c7f76d1",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 403\"] = responseCode.code === 403;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain description\"] = !(responseBody.has('\"description\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{WrongAuth}}"
									},
									{
										"key": "save_audit_copy",
										"value": "False"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"Study description\"\n}"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/description",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PrivStudyId}}",
										"description"
									]
								},
								"description": null
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Update Study Description - NullId -> 404",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4ea1b158-009c-4d89-bc97-125541b2aaaa",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 404\"] = responseCode.code === 404;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
									"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
									"tests[\"Body does NOT contain description\"] = !(responseBody.has('\"description\":'));",
									"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"description\": \"Study description\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies//description",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies",
								"",
								"description"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "Update Study Description - BadId -> 404",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "37f08150-36ad-4b70-9391-49ea0954c1d1",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 404\"] = responseCode.code === 404;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
									"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
									"tests[\"Body does NOT contain description\"] = !(responseBody.has('\"description\":'));",
									"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "user_token",
								"value": "{{curator}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"description\": \"Study description\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{BadStudyId}}/description",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies",
								"{{BadStudyId}}",
								"description"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "Update Study Description - NullId - NoSave -> 404",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6219d86e-35e5-4248-82ee-fab4e8e2bbe3",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 404\"] = responseCode.code === 404;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
									"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
									"tests[\"Body does NOT contain description\"] = !(responseBody.has('\"description\":'));",
									"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "save_audit_copy",
								"value": "False"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"description\": \"Study description\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies//description",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies",
								"",
								"description"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "Update Study Description - BadId - NoSave -> 404",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "90d17339-2451-4383-a8f9-c32a96307222",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 404\"] = responseCode.code === 404;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
									"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
									"tests[\"Body does NOT contain description\"] = !(responseBody.has('\"description\":'));",
									"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "user_token",
								"value": "{{curator}}"
							},
							{
								"key": "save_audit_copy",
								"value": "False"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"description\": \"Study description\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{BadStudyId}}/description",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies",
								"{{BadStudyId}}",
								"description"
							]
						},
						"description": null
					},
					"response": []
				}
			]
		},
		{
			"name": "Update Study Contact",
			"description": null,
			"item": [
				{
					"name": "Pub",
					"description": "",
					"item": [
						{
							"name": "Update Study Contact - Pub - Auth - GoodId -> 200",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2159b8f6-0839-48e3-b6a0-daa43a80e46d",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Body has contact\"] = responseBody.has('\"contact\":');",
											"var jsonData = JSON.parse(responseBody);",
											"if (jsonData.contact) {",
											"    var item = jsonData.contact;",
											"    tests[\"JSON response has key 'firstName'\"] = item.hasOwnProperty('firstName');",
											"    tests[\"JSON response key 'firstName' not Null\"] = item.firstName;",
											"    tests[\"JSON response has key 'lastName'\"] = item.hasOwnProperty('lastName');",
											"    tests[\"JSON response key 'lastName' not Null\"] = item.lastName;",
											"    tests[\"JSON response has key 'email'\"] = item.hasOwnProperty('email');",
											"    tests[\"JSON response key 'email' not Null\"] = item.email;",
											"    tests[\"JSON response has key 'address'\"] = item.hasOwnProperty('address');",
											"    // tests[\"JSON response key 'address' not Null\"] = item.address;",
											"    if (item.roles.length > 0) {",
											"        var role = item.roles[0];",
											"        tests[\"JSON response has key 'role annotationValue'\"] = role.hasOwnProperty('annotationValue');",
											"        tests[\"JSON response key 'role annotationValue' not Null\"] = role.annotationValue !== null;",
											"    }",
											"}"
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"contact\": {\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\",\n    \"email\": \"doej@a.mail.com\",\n    \"affiliation\": \"EMBL-EBI\",\n    \"comments\": [],\n    \"address\": \"Wellcome Genome Campus, Hinxton, Cambridgeshire, CB10 1SD, UK\",\n    \"fax\": \"012345678902\",\n    \"midInitials\": \"A\",\n    \"phone\": \"012345678901\",\n    \"roles\": [\n      {\n        \"annotationValue\": \"investigator\",\n        \"termSource\": null,\n        \"termAccession\": \"http://www.ebi.ac.uk/efo/EFO_0001739\",\n        \"comments\": []\n      },\n      {\n        \"annotationValue\": \"Bioinformatician\",\n        \"termSource\": null,\n        \"termAccession\": \"\",\n        \"comments\": []\n      }\n    ]\n  }\n}"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/contacts?email={{ContactID}}",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PubStudyId}}",
										"contacts"
									],
									"query": [
										{
											"key": "email",
											"value": "{{ContactID}}",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Update Study Contact - Pub - Auth - NoData -> 400",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4321903c-2bda-4642-a57e-0d1dd6591948",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain contacts\"] = !(responseBody.has('\"contacts\":'));",
											"tests[\"Body does NOT contain contact\"] = !(responseBody.has('\"contact\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "None"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/contacts?email={{ContactID}}",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PubStudyId}}",
										"contacts"
									],
									"query": [
										{
											"key": "email",
											"value": "{{ContactID}}",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Update Study Contact - Pub - Auth - MissingRequiredData -> 400",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4321903c-2bda-4642-a57e-0d1dd6591948",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain contacts\"] = !(responseBody.has('\"contacts\":'));",
											"tests[\"Body does NOT contain contact\"] = !(responseBody.has('\"contact\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"contact\": {\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\",\n    \"affiliation\": \"EMBL-EBI\",\n    \"comments\": [],\n    \"address\": \"Wellcome Genome Campus, Hinxton, Cambridgeshire, CB10 1SD, UK\",\n    \"fax\": \"012345678902\",\n    \"midInitials\": \"A\",\n    \"phone\": \"012345678901\",\n    \"roles\": [\n      {\n        \"annotationValue\": \"investigator\",\n        \"termSource\": null,\n        \"termAccession\": \"http://www.ebi.ac.uk/efo/EFO_0001739\",\n        \"comments\": []\n      },\n      {\n        \"annotationValue\": \"Bioinformatician\",\n        \"termSource\": null,\n        \"termAccession\": \"\",\n        \"comments\": []\n      }\n    ]\n  }\n}"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/contacts?email={{ContactID}}",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PubStudyId}}",
										"contacts"
									],
									"query": [
										{
											"key": "email",
											"value": "{{ContactID}}",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Update Study Contact - Pub - NoToken -> 401",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "710c44b1-004a-445c-8576-a743d688c78a",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 401\"] = responseCode.code === 401;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain contacts\"] = !(responseBody.has('\"contacts\":'));",
											"tests[\"Body does NOT contain contact\"] = !(responseBody.has('\"contact\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"contact\": {\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\",\n    \"email\": \"doej@a.mail.com\",\n    \"affiliation\": \"EMBL-EBI\",\n    \"comments\": [],\n    \"address\": \"Wellcome Genome Campus, Hinxton, Cambridgeshire, CB10 1SD, UK\",\n    \"fax\": \"012345678902\",\n    \"midInitials\": \"A\",\n    \"phone\": \"012345678901\",\n    \"roles\": [\n      {\n        \"annotationValue\": \"investigator\",\n        \"termSource\": null,\n        \"termAccession\": \"http://www.ebi.ac.uk/efo/EFO_0001739\",\n        \"comments\": []\n      },\n      {\n        \"annotationValue\": \"Bioinformatician\",\n        \"termSource\": null,\n        \"termAccession\": \"\",\n        \"comments\": []\n      }\n    ]\n  }\n}\n"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/contacts?email={{ContactID}}",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PubStudyId}}",
										"contacts"
									],
									"query": [
										{
											"key": "email",
											"value": "{{ContactID}}",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Update Study Contact - Pub - NoAuth -> 403",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6fbccea7-78ea-4363-8fd2-e125ee6207aa",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 403\"] = responseCode.code === 403;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain contacts\"] = !(responseBody.has('\"contacts\":'));",
											"tests[\"Body does NOT contain contact\"] = !(responseBody.has('\"contact\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{WrongAuth}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"contact\": {\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\",\n    \"email\": \"doej@a.mail.com\",\n    \"affiliation\": \"EMBL-EBI\",\n    \"comments\": [],\n    \"address\": \"Wellcome Genome Campus, Hinxton, Cambridgeshire, CB10 1SD, UK\",\n    \"fax\": \"012345678902\",\n    \"midInitials\": \"A\",\n    \"phone\": \"012345678901\",\n    \"roles\": [\n      {\n        \"annotationValue\": \"investigator\",\n        \"termSource\": null,\n        \"termAccession\": \"http://www.ebi.ac.uk/efo/EFO_0001739\",\n        \"comments\": []\n      },\n      {\n        \"annotationValue\": \"Bioinformatician\",\n        \"termSource\": null,\n        \"termAccession\": \"\",\n        \"comments\": []\n      }\n    ]\n  }\n}\n"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/contacts?email={{ContactID}}",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PubStudyId}}",
										"contacts"
									],
									"query": [
										{
											"key": "email",
											"value": "{{ContactID}}",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Update Study Contact - Pub - Auth - BadId -> 404",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4a09a7a9-dec2-445e-87f6-7fe1f0dcdc4f",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 404\"] = responseCode.code === 404;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain contacts\"] = !(responseBody.has('\"contacts\":'));",
											"tests[\"Body does NOT contain contact\"] = !(responseBody.has('\"contact\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"contact\": {\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\",\n    \"email\": \"doej@a.mail.com\",\n    \"affiliation\": \"EMBL-EBI\",\n    \"comments\": [],\n    \"address\": \"Wellcome Genome Campus, Hinxton, Cambridgeshire, CB10 1SD, UK\",\n    \"fax\": \"012345678902\",\n    \"midInitials\": \"A\",\n    \"phone\": \"012345678901\",\n    \"roles\": [\n      {\n        \"annotationValue\": \"investigator\",\n        \"termSource\": null,\n        \"termAccession\": \"http://www.ebi.ac.uk/efo/EFO_0001739\",\n        \"comments\": []\n      },\n      {\n        \"annotationValue\": \"Bioinformatician\",\n        \"termSource\": null,\n        \"termAccession\": \"\",\n        \"comments\": []\n      }\n    ]\n  }\n}\n"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/contacts?email={{BadContactId}}",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PubStudyId}}",
										"contacts"
									],
									"query": [
										{
											"key": "email",
											"value": "{{BadContactId}}",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Update Study Contact - Pub - Auth - NullId -> 404",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6b314736-25fd-4609-a0de-d7d9219f5419",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 404\"] = responseCode.code === 404;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain contacts\"] = !(responseBody.has('\"contacts\":'));",
											"tests[\"Body does NOT contain contact\"] = !(responseBody.has('\"contact\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"contact\": {\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\",\n    \"email\": \"doej@a.mail.com\",\n    \"affiliation\": \"EMBL-EBI\",\n    \"comments\": [],\n    \"address\": \"Wellcome Genome Campus, Hinxton, Cambridgeshire, CB10 1SD, UK\",\n    \"fax\": \"012345678902\",\n    \"midInitials\": \"A\",\n    \"phone\": \"012345678901\",\n    \"roles\": [\n      {\n        \"annotationValue\": \"investigator\",\n        \"termSource\": null,\n        \"termAccession\": \"http://www.ebi.ac.uk/efo/EFO_0001739\",\n        \"comments\": []\n      },\n      {\n        \"annotationValue\": \"Bioinformatician\",\n        \"termSource\": null,\n        \"termAccession\": \"\",\n        \"comments\": []\n      }\n    ]\n  }\n}\n"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/contacts?email=",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PubStudyId}}",
										"contacts"
									],
									"query": [
										{
											"key": "email",
											"value": "",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Priv",
					"description": "",
					"item": [
						{
							"name": "Update Study Contact - Priv - Auth - GoodId -> 200",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2159b8f6-0839-48e3-b6a0-daa43a80e46d",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Body has contact\"] = responseBody.has('\"contact\":');",
											"var jsonData = JSON.parse(responseBody);",
											"if (jsonData.contact) {",
											"    var item = jsonData.contact;",
											"    tests[\"JSON response has key 'firstName'\"] = item.hasOwnProperty('firstName');",
											"    tests[\"JSON response key 'firstName' not Null\"] = item.firstName;",
											"    tests[\"JSON response has key 'lastName'\"] = item.hasOwnProperty('lastName');",
											"    tests[\"JSON response key 'lastName' not Null\"] = item.lastName;",
											"    tests[\"JSON response has key 'email'\"] = item.hasOwnProperty('email');",
											"    tests[\"JSON response key 'email' not Null\"] = item.email;",
											"    tests[\"JSON response has key 'address'\"] = item.hasOwnProperty('address');",
											"    // tests[\"JSON response key 'address' not Null\"] = item.address;",
											"    if (item.roles.length > 0) {",
											"        var role = item.roles[0];",
											"        tests[\"JSON response has key 'role annotationValue'\"] = role.hasOwnProperty('annotationValue');",
											"        tests[\"JSON response key 'role annotationValue' not Null\"] = role.annotationValue !== null;",
											"    }",
											"}"
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"contact\": {\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\",\n    \"email\": \"doej@a.mail.com\",\n    \"affiliation\": \"EMBL-EBI\",\n    \"comments\": [],\n    \"address\": \"Wellcome Genome Campus, Hinxton, Cambridgeshire, CB10 1SD, UK\",\n    \"fax\": \"012345678902\",\n    \"midInitials\": \"A\",\n    \"phone\": \"012345678901\",\n    \"roles\": [\n      {\n        \"annotationValue\": \"investigator\",\n        \"termSource\": null,\n        \"termAccession\": \"http://www.ebi.ac.uk/efo/EFO_0001739\",\n        \"comments\": []\n      },\n      {\n        \"annotationValue\": \"Bioinformatician\",\n        \"termSource\": null,\n        \"termAccession\": \"\",\n        \"comments\": []\n      }\n    ]\n  }\n}"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/contacts?email={{ContactID}}",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PrivStudyId}}",
										"contacts"
									],
									"query": [
										{
											"key": "email",
											"value": "{{ContactID}}",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Update Study Contact - Priv - Auth - NoData -> 400",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4321903c-2bda-4642-a57e-0d1dd6591948",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain contacts\"] = !(responseBody.has('\"contacts\":'));",
											"tests[\"Body does NOT contain contact\"] = !(responseBody.has('\"contact\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "None"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/contacts?email={{ContactID}}",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PrivStudyId}}",
										"contacts"
									],
									"query": [
										{
											"key": "email",
											"value": "{{ContactID}}",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Update Study Contact - Priv - Auth - MissingRequiredData -> 400",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4321903c-2bda-4642-a57e-0d1dd6591948",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain contacts\"] = !(responseBody.has('\"contacts\":'));",
											"tests[\"Body does NOT contain contact\"] = !(responseBody.has('\"contact\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"contact\": {\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\",\n    \"affiliation\": \"EMBL-EBI\",\n    \"comments\": [],\n    \"address\": \"Wellcome Genome Campus, Hinxton, Cambridgeshire, CB10 1SD, UK\",\n    \"fax\": \"012345678902\",\n    \"midInitials\": \"A\",\n    \"phone\": \"012345678901\",\n    \"roles\": [\n      {\n        \"annotationValue\": \"investigator\",\n        \"termSource\": null,\n        \"termAccession\": \"http://www.ebi.ac.uk/efo/EFO_0001739\",\n        \"comments\": []\n      },\n      {\n        \"annotationValue\": \"Bioinformatician\",\n        \"termSource\": null,\n        \"termAccession\": \"\",\n        \"comments\": []\n      }\n    ]\n  }\n}"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/contacts?email={{ContactID}}",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PrivStudyId}}",
										"contacts"
									],
									"query": [
										{
											"key": "email",
											"value": "{{ContactID}}",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Update Study Contact - Priv - NoToken -> 401",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "710c44b1-004a-445c-8576-a743d688c78a",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 401\"] = responseCode.code === 401;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain contacts\"] = !(responseBody.has('\"contacts\":'));",
											"tests[\"Body does NOT contain contact\"] = !(responseBody.has('\"contact\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"contact\": {\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\",\n    \"email\": \"doej@a.mail.com\",\n    \"affiliation\": \"EMBL-EBI\",\n    \"comments\": [],\n    \"address\": \"Wellcome Genome Campus, Hinxton, Cambridgeshire, CB10 1SD, UK\",\n    \"fax\": \"012345678902\",\n    \"midInitials\": \"A\",\n    \"phone\": \"012345678901\",\n    \"roles\": [\n      {\n        \"annotationValue\": \"investigator\",\n        \"termSource\": null,\n        \"termAccession\": \"http://www.ebi.ac.uk/efo/EFO_0001739\",\n        \"comments\": []\n      },\n      {\n        \"annotationValue\": \"Bioinformatician\",\n        \"termSource\": null,\n        \"termAccession\": \"\",\n        \"comments\": []\n      }\n    ]\n  }\n}\n"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/contacts?email={{ContactID}}",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PrivStudyId}}",
										"contacts"
									],
									"query": [
										{
											"key": "email",
											"value": "{{ContactID}}",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Update Study Contact - Priv - NoAuth -> 403",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6fbccea7-78ea-4363-8fd2-e125ee6207aa",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 403\"] = responseCode.code === 403;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain contacts\"] = !(responseBody.has('\"contacts\":'));",
											"tests[\"Body does NOT contain contact\"] = !(responseBody.has('\"contact\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{WrongAuth}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"contact\": {\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\",\n    \"email\": \"doej@a.mail.com\",\n    \"affiliation\": \"EMBL-EBI\",\n    \"comments\": [],\n    \"address\": \"Wellcome Genome Campus, Hinxton, Cambridgeshire, CB10 1SD, UK\",\n    \"fax\": \"012345678902\",\n    \"midInitials\": \"A\",\n    \"phone\": \"012345678901\",\n    \"roles\": [\n      {\n        \"annotationValue\": \"investigator\",\n        \"termSource\": null,\n        \"termAccession\": \"http://www.ebi.ac.uk/efo/EFO_0001739\",\n        \"comments\": []\n      },\n      {\n        \"annotationValue\": \"Bioinformatician\",\n        \"termSource\": null,\n        \"termAccession\": \"\",\n        \"comments\": []\n      }\n    ]\n  }\n}\n"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/contacts?email={{ContactID}}",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PrivStudyId}}",
										"contacts"
									],
									"query": [
										{
											"key": "email",
											"value": "{{ContactID}}",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Update Study Contact - Priv - Auth - BadId -> 404",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4a09a7a9-dec2-445e-87f6-7fe1f0dcdc4f",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 404\"] = responseCode.code === 404;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain contacts\"] = !(responseBody.has('\"contacts\":'));",
											"tests[\"Body does NOT contain contact\"] = !(responseBody.has('\"contact\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"contact\": {\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\",\n    \"email\": \"doej@a.mail.com\",\n    \"affiliation\": \"EMBL-EBI\",\n    \"comments\": [],\n    \"address\": \"Wellcome Genome Campus, Hinxton, Cambridgeshire, CB10 1SD, UK\",\n    \"fax\": \"012345678902\",\n    \"midInitials\": \"A\",\n    \"phone\": \"012345678901\",\n    \"roles\": [\n      {\n        \"annotationValue\": \"investigator\",\n        \"termSource\": null,\n        \"termAccession\": \"http://www.ebi.ac.uk/efo/EFO_0001739\",\n        \"comments\": []\n      },\n      {\n        \"annotationValue\": \"Bioinformatician\",\n        \"termSource\": null,\n        \"termAccession\": \"\",\n        \"comments\": []\n      }\n    ]\n  }\n}\n"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/contacts?email={{BadContactId}}",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PrivStudyId}}",
										"contacts"
									],
									"query": [
										{
											"key": "email",
											"value": "{{BadContactId}}",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Update Study Contact - Priv - Auth - NullId -> 404",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6b314736-25fd-4609-a0de-d7d9219f5419",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 404\"] = responseCode.code === 404;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain contacts\"] = !(responseBody.has('\"contacts\":'));",
											"tests[\"Body does NOT contain contact\"] = !(responseBody.has('\"contact\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"contact\": {\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\",\n    \"email\": \"doej@a.mail.com\",\n    \"affiliation\": \"EMBL-EBI\",\n    \"comments\": [],\n    \"address\": \"Wellcome Genome Campus, Hinxton, Cambridgeshire, CB10 1SD, UK\",\n    \"fax\": \"012345678902\",\n    \"midInitials\": \"A\",\n    \"phone\": \"012345678901\",\n    \"roles\": [\n      {\n        \"annotationValue\": \"investigator\",\n        \"termSource\": null,\n        \"termAccession\": \"http://www.ebi.ac.uk/efo/EFO_0001739\",\n        \"comments\": []\n      },\n      {\n        \"annotationValue\": \"Bioinformatician\",\n        \"termSource\": null,\n        \"termAccession\": \"\",\n        \"comments\": []\n      }\n    ]\n  }\n}\n"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/contacts?email=",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PrivStudyId}}",
										"contacts"
									],
									"query": [
										{
											"key": "email",
											"value": "",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				}
			]
		},
		{
			"name": "Update Study Protocol",
			"description": null,
			"item": [
				{
					"name": "Pub",
					"description": "",
					"item": [
						{
							"name": "Update Study Protocol - Pub - Auth - GoodId -> 200",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b725b69c-fba6-4d59-909f-37cd9722e704",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Body has protocol\"] = responseBody.has('\"protocol\":');",
											"var jsonData = JSON.parse(responseBody);",
											"if (jsonData.protocol) {",
											"    var item = jsonData.protocol",
											"    tests[\"JSON response has key 'name'\"] = item.hasOwnProperty('name');",
											"    tests[\"JSON response key 'name' not Null\"] = item.name;",
											"    tests[\"JSON response has key 'description'\"] = item.hasOwnProperty('description');",
											"    tests[\"JSON response key 'description' not Null\"] = item.description;",
											"    tests[\"JSON response has key 'protocolType'\"] = item.hasOwnProperty('protocolType');",
											"    tests[\"JSON response key 'protocolType' not Null\"] = item.protocolType;",
											"    tests[\"JSON response has key 'components'\"] = item.hasOwnProperty('components');",
											"    tests[\"JSON response key 'components' not Null\"] = item.components;",
											"    tests[\"JSON response has key 'parameters'\"] = item.hasOwnProperty('parameters');",
											"    tests[\"JSON response key 'parameters' not Null\"] = item.parameters;",
											"    tests[\"JSON response has key 'uri'\"] = item.hasOwnProperty('uri');",
											"    // tests[\"JSON response key 'uri' not Null\"] = item.uri;",
											"    tests[\"JSON response has key 'version'\"] = item.hasOwnProperty('version');",
											"    tests[\"JSON response key 'version' not Null\"] = item.version;",
											"    tests[\"JSON response has key 'comments'\"] = item.hasOwnProperty('comments');",
											"    tests[\"JSON response key 'comments' not Null\"] = item.comments;",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"protocol\": {\n      \"comments\": [\n      \t{\n      \t  \"name\": \"Updated\",\n      \t  \"value\": \"Updated with MtblsWs-Py\"\n      \t}\n      ],\n      \"components\": [],\n      \"description\": \"Test-Protocol description.\",\n      \"name\": \"Test-Protocol-Name\",\n      \"parameters\": [\n        {\n          \"comments\": [],\n          \"parameterName\": {\n            \"comments\": [],\n            \"annotationValue\": \"Test-Protocol-Parameter-Name\",\n            \"termAccession\": \"\",\n            \"termSource\": null\n          }        }\n      ],\n      \"protocolType\": {\n        \"comments\": [],\n        \"annotationValue\": \"Test-Protocol-Type\",\n        \"termAccession\": \"\",\n        \"termSource\": null\n      },\n      \"uri\": \"\",\n      \"version\": \"0.1\"\n    }\n}\n"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/protocols?name={{ValidProtocolId}}",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PubStudyId}}",
										"protocols"
									],
									"query": [
										{
											"key": "name",
											"value": "{{ValidProtocolId}}",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Update Study Protocol - Pub - Auth - NoData -> 400",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7ad99993-565b-461a-9351-2b966e144266",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain protocols\"] = !(responseBody.has('\"protocols\":'));",
											"tests[\"Body does NOT contain protocol\"] = !(responseBody.has('\"protocol\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "None"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/protocols?name={{ValidProtocolId}}",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PubStudyId}}",
										"protocols"
									],
									"query": [
										{
											"key": "name",
											"value": "{{ValidProtocolId}}",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Update Study Protocol - Pub - Auth - MissingRequiredData -> 400",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b332e285-5225-4e06-bc63-2208a304d227",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain protocols\"] = !(responseBody.has('\"protocols\":'));",
											"tests[\"Body does NOT contain protocol\"] = !(responseBody.has('\"protocol\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"protocol\": {\n      \"comments\": [\n      \t{\n      \t  \"name\": \"Updated\",\n      \t  \"value\": \"Updated with MtblsWs-Py\"\n      \t}\n      ],\n      \"components\": [],\n      \"description\": \"Test-Protocol description.\",\n      \"parameters\": [\n        {\n          \"comments\": [],\n          \"parameterName\": {\n            \"comments\": [],\n            \"annotationValue\": \"Test-Protocol-Parameter-Name\",\n            \"termAccession\": \"\",\n            \"termSource\": null\n          }        }\n      ],\n      \"protocolType\": {\n        \"comments\": [],\n        \"annotationValue\": \"Test-Protocol-Type\",\n        \"termAccession\": \"\",\n        \"termSource\": null\n      },\n      \"uri\": \"\",\n      \"version\": \"0.1\"\n    }\n}\n"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/protocols?name={{ValidProtocolId}}",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PubStudyId}}",
										"protocols"
									],
									"query": [
										{
											"key": "name",
											"value": "{{ValidProtocolId}}",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Update Study Protocol - Pub - NoToken -> 401",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "31f9a956-298c-4a42-970a-6b6fa5783ffa",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 401\"] = responseCode.code === 401;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain protocols\"] = !(responseBody.has('\"protocols\":'));",
											"tests[\"Body does NOT contain protocol\"] = !(responseBody.has('\"protocol\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"protocol\": {\n      \"comments\": [\n      \t{\n      \t  \"name\": \"Updated\",\n      \t  \"value\": \"Updated with MtblsWs-Py\"\n      \t}\n      ],\n      \"components\": [],\n      \"description\": \"Test-Protocol description.\",\n      \"name\": \"Test-Protocol-Name\",\n      \"parameters\": [\n        {\n          \"comments\": [],\n          \"parameterName\": {\n            \"comments\": [],\n            \"annotationValue\": \"Test-Protocol-Parameter-Name\",\n            \"termAccession\": \"\",\n            \"termSource\": null\n          }        }\n      ],\n      \"protocolType\": {\n        \"comments\": [],\n        \"annotationValue\": \"Test-Protocol-Type\",\n        \"termAccession\": \"\",\n        \"termSource\": null\n      },\n      \"uri\": \"\",\n      \"version\": \"0.1\"\n    }\n}\n"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/protocols?name={{ValidProtocolId}}",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PubStudyId}}",
										"protocols"
									],
									"query": [
										{
											"key": "name",
											"value": "{{ValidProtocolId}}",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Update Study Protocol - Pub - NoAuth -> 403",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "38ac6f13-ba10-4c45-8348-eb46c94b754e",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 403\"] = responseCode.code === 403;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain protocols\"] = !(responseBody.has('\"protocols\":'));",
											"tests[\"Body does NOT contain protocol\"] = !(responseBody.has('\"protocol\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{WrongAuth}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"protocol\": {\n      \"comments\": [\n      \t{\n      \t  \"name\": \"Updated\",\n      \t  \"value\": \"Updated with MtblsWs-Py\"\n      \t}\n      ],\n      \"components\": [],\n      \"description\": \"Test-Protocol description.\",\n      \"name\": \"Test-Protocol-Name\",\n      \"parameters\": [\n        {\n          \"comments\": [],\n          \"parameterName\": {\n            \"comments\": [],\n            \"annotationValue\": \"Test-Protocol-Parameter-Name\",\n            \"termAccession\": \"\",\n            \"termSource\": null\n          }        }\n      ],\n      \"protocolType\": {\n        \"comments\": [],\n        \"annotationValue\": \"Test-Protocol-Type\",\n        \"termAccession\": \"\",\n        \"termSource\": null\n      },\n      \"uri\": \"\",\n      \"version\": \"0.1\"\n    }\n}\n"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/protocols?name={{ValidProtocolId}}",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PubStudyId}}",
										"protocols"
									],
									"query": [
										{
											"key": "name",
											"value": "{{ValidProtocolId}}",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Update Study Protocol - Pub - Auth - BadId -> 404",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "42d558be-1cac-4803-9caf-2b0cec565e33",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 404\"] = responseCode.code === 404;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain protocols\"] = !(responseBody.has('\"protocols\":'));",
											"tests[\"Body does NOT contain protocol\"] = !(responseBody.has('\"protocol\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"protocol\": {\n      \"comments\": [\n      \t{\n      \t  \"name\": \"Updated\",\n      \t  \"value\": \"Updated with MtblsWs-Py\"\n      \t}\n      ],\n      \"components\": [],\n      \"description\": \"Test-Protocol description.\",\n      \"name\": \"Test-Protocol-Name\",\n      \"parameters\": [\n        {\n          \"comments\": [],\n          \"parameterName\": {\n            \"comments\": [],\n            \"annotationValue\": \"Test-Protocol-Parameter-Name\",\n            \"termAccession\": \"\",\n            \"termSource\": null\n          }        }\n      ],\n      \"protocolType\": {\n        \"comments\": [],\n        \"annotationValue\": \"Test-Protocol-Type\",\n        \"termAccession\": \"\",\n        \"termSource\": null\n      },\n      \"uri\": \"\",\n      \"version\": \"0.1\"\n    }\n}\n"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/protocols?name={{BadProtocolId}}",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PubStudyId}}",
										"protocols"
									],
									"query": [
										{
											"key": "name",
											"value": "{{BadProtocolId}}",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Update Study Protocol - Pub - Auth - NullId -> 404",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "10d4a015-a8df-4e5f-8579-444120052683",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 404\"] = responseCode.code === 404;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain protocols\"] = !(responseBody.has('\"protocols\":'));",
											"tests[\"Body does NOT contain protocol\"] = !(responseBody.has('\"protocol\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"protocol\": {\n      \"comments\": [\n      \t{\n      \t  \"name\": \"Updated\",\n      \t  \"value\": \"Updated with MtblsWs-Py\"\n      \t}\n      ],\n      \"components\": [],\n      \"description\": \"Test-Protocol description.\",\n      \"name\": \"Test-Protocol-Name\",\n      \"parameters\": [\n        {\n          \"comments\": [],\n          \"parameterName\": {\n            \"comments\": [],\n            \"annotationValue\": \"Test-Protocol-Parameter-Name\",\n            \"termAccession\": \"\",\n            \"termSource\": null\n          }        }\n      ],\n      \"protocolType\": {\n        \"comments\": [],\n        \"annotationValue\": \"Test-Protocol-Type\",\n        \"termAccession\": \"\",\n        \"termSource\": null\n      },\n      \"uri\": \"\",\n      \"version\": \"0.1\"\n    }\n}\n"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/protocols?name=",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PubStudyId}}",
										"protocols"
									],
									"query": [
										{
											"key": "name",
											"value": "",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Priv",
					"description": "",
					"item": [
						{
							"name": "Update Study Protocol - Priv - Auth - GoodId -> 200",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "88a3471c-bd94-495e-a4df-f751d4015e22",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Body has protocol\"] = responseBody.has('\"protocol\":');",
											"var jsonData = JSON.parse(responseBody);",
											"if (jsonData.protocol) {",
											"    var item = jsonData.protocol",
											"    tests[\"JSON response has key 'name'\"] = item.hasOwnProperty('name');",
											"    tests[\"JSON response key 'name' not Null\"] = item.name;",
											"    tests[\"JSON response has key 'description'\"] = item.hasOwnProperty('description');",
											"    tests[\"JSON response key 'description' not Null\"] = item.description;",
											"    tests[\"JSON response has key 'protocolType'\"] = item.hasOwnProperty('protocolType');",
											"    tests[\"JSON response key 'protocolType' not Null\"] = item.protocolType;",
											"    tests[\"JSON response has key 'components'\"] = item.hasOwnProperty('components');",
											"    tests[\"JSON response key 'components' not Null\"] = item.components;",
											"    tests[\"JSON response has key 'parameters'\"] = item.hasOwnProperty('parameters');",
											"    tests[\"JSON response key 'parameters' not Null\"] = item.parameters;",
											"    tests[\"JSON response has key 'uri'\"] = item.hasOwnProperty('uri');",
											"    // tests[\"JSON response key 'uri' not Null\"] = item.uri;",
											"    tests[\"JSON response has key 'version'\"] = item.hasOwnProperty('version');",
											"    tests[\"JSON response key 'version' not Null\"] = item.version;",
											"    tests[\"JSON response has key 'comments'\"] = item.hasOwnProperty('comments');",
											"    tests[\"JSON response key 'comments' not Null\"] = item.comments;",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"protocol\": {\n      \"comments\": [\n      \t{\n      \t  \"name\": \"Updated\",\n      \t  \"value\": \"Updated with MtblsWs-Py\"\n      \t}\n      ],\n      \"components\": [],\n      \"description\": \"Test-Protocol description.\",\n      \"name\": \"Test-Protocol-Name\",\n      \"parameters\": [\n        {\n          \"comments\": [],\n          \"parameterName\": {\n            \"comments\": [],\n            \"annotationValue\": \"Test-Protocol-Parameter-Name\",\n            \"termAccession\": \"\",\n            \"termSource\": null\n          }        }\n      ],\n      \"protocolType\": {\n        \"comments\": [],\n        \"annotationValue\": \"Test-Protocol-Type\",\n        \"termAccession\": \"\",\n        \"termSource\": null\n      },\n      \"uri\": \"\",\n      \"version\": \"0.1\"\n    }\n}\n"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/protocols?name={{ValidProtocolId}}",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PrivStudyId}}",
										"protocols"
									],
									"query": [
										{
											"key": "name",
											"value": "{{ValidProtocolId}}",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Update Study Protocol - Priv - Auth - NoData -> 400",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "75639e4a-1c6f-4bd8-9b7c-ef55378c2e57",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain protocols\"] = !(responseBody.has('\"protocols\":'));",
											"tests[\"Body does NOT contain protocol\"] = !(responseBody.has('\"protocol\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "None"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/protocols?name={{ValidProtocolId}}",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PrivStudyId}}",
										"protocols"
									],
									"query": [
										{
											"key": "name",
											"value": "{{ValidProtocolId}}",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Update Study Protocol - Priv - Auth - MissingRequiredData -> 400",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9764ca16-57a1-4d64-b5f3-50107a5ef8f8",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain protocols\"] = !(responseBody.has('\"protocols\":'));",
											"tests[\"Body does NOT contain protocol\"] = !(responseBody.has('\"protocol\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"protocol\": {\n      \"comments\": [\n      \t{\n      \t  \"name\": \"Updated\",\n      \t  \"value\": \"Updated with MtblsWs-Py\"\n      \t}\n      ],\n      \"components\": [],\n      \"description\": \"Test-Protocol description.\",\n      \"parameters\": [\n        {\n          \"comments\": [],\n          \"parameterName\": {\n            \"comments\": [],\n            \"annotationValue\": \"Test-Protocol-Parameter-Name\",\n            \"termAccession\": \"\",\n            \"termSource\": null\n          }        }\n      ],\n      \"protocolType\": {\n        \"comments\": [],\n        \"annotationValue\": \"Test-Protocol-Type\",\n        \"termAccession\": \"\",\n        \"termSource\": null\n      },\n      \"uri\": \"\",\n      \"version\": \"0.1\"\n    }\n}\n"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/protocols?name={{ValidProtocolId}}",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PrivStudyId}}",
										"protocols"
									],
									"query": [
										{
											"key": "name",
											"value": "{{ValidProtocolId}}",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Update Study Protocol - Priv - NoToken -> 401",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9724a37f-a024-4e0d-b813-69aca3f27d44",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 401\"] = responseCode.code === 401;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain protocols\"] = !(responseBody.has('\"protocols\":'));",
											"tests[\"Body does NOT contain protocol\"] = !(responseBody.has('\"protocol\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"protocol\": {\n      \"comments\": [\n      \t{\n      \t  \"name\": \"Updated\",\n      \t  \"value\": \"Updated with MtblsWs-Py\"\n      \t}\n      ],\n      \"components\": [],\n      \"description\": \"Test-Protocol description.\",\n      \"name\": \"Test-Protocol-Name\",\n      \"parameters\": [\n        {\n          \"comments\": [],\n          \"parameterName\": {\n            \"comments\": [],\n            \"annotationValue\": \"Test-Protocol-Parameter-Name\",\n            \"termAccession\": \"\",\n            \"termSource\": null\n          }        }\n      ],\n      \"protocolType\": {\n        \"comments\": [],\n        \"annotationValue\": \"Test-Protocol-Type\",\n        \"termAccession\": \"\",\n        \"termSource\": null\n      },\n      \"uri\": \"\",\n      \"version\": \"0.1\"\n    }\n}\n"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/protocols?name={{ValidProtocolId}}",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PrivStudyId}}",
										"protocols"
									],
									"query": [
										{
											"key": "name",
											"value": "{{ValidProtocolId}}",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Update Study Protocol - Priv - NoAuth -> 403",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e9d91c6b-4319-4966-90a4-53511430e20e",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 403\"] = responseCode.code === 403;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain protocols\"] = !(responseBody.has('\"protocols\":'));",
											"tests[\"Body does NOT contain protocol\"] = !(responseBody.has('\"protocol\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{WrongAuth}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"protocol\": {\n      \"comments\": [\n      \t{\n      \t  \"name\": \"Updated\",\n      \t  \"value\": \"Updated with MtblsWs-Py\"\n      \t}\n      ],\n      \"components\": [],\n      \"description\": \"Test-Protocol description.\",\n      \"name\": \"Test-Protocol-Name\",\n      \"parameters\": [\n        {\n          \"comments\": [],\n          \"parameterName\": {\n            \"comments\": [],\n            \"annotationValue\": \"Test-Protocol-Parameter-Name\",\n            \"termAccession\": \"\",\n            \"termSource\": null\n          }        }\n      ],\n      \"protocolType\": {\n        \"comments\": [],\n        \"annotationValue\": \"Test-Protocol-Type\",\n        \"termAccession\": \"\",\n        \"termSource\": null\n      },\n      \"uri\": \"\",\n      \"version\": \"0.1\"\n    }\n}\n"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/protocols?name={{ValidProtocolId}}",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PrivStudyId}}",
										"protocols"
									],
									"query": [
										{
											"key": "name",
											"value": "{{ValidProtocolId}}",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Update Study Protocol - Priv - Auth - BadId -> 404",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b7646d09-358c-426f-9431-e1b2832ad57f",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 404\"] = responseCode.code === 404;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain protocols\"] = !(responseBody.has('\"protocols\":'));",
											"tests[\"Body does NOT contain protocol\"] = !(responseBody.has('\"protocol\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"protocol\": {\n      \"comments\": [\n      \t{\n      \t  \"name\": \"Updated\",\n      \t  \"value\": \"Updated with MtblsWs-Py\"\n      \t}\n      ],\n      \"components\": [],\n      \"description\": \"Test-Protocol description.\",\n      \"name\": \"Test-Protocol-Name\",\n      \"parameters\": [\n        {\n          \"comments\": [],\n          \"parameterName\": {\n            \"comments\": [],\n            \"annotationValue\": \"Test-Protocol-Parameter-Name\",\n            \"termAccession\": \"\",\n            \"termSource\": null\n          }        }\n      ],\n      \"protocolType\": {\n        \"comments\": [],\n        \"annotationValue\": \"Test-Protocol-Type\",\n        \"termAccession\": \"\",\n        \"termSource\": null\n      },\n      \"uri\": \"\",\n      \"version\": \"0.1\"\n    }\n}\n"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/protocols?name={{BadProtocolId}}",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PrivStudyId}}",
										"protocols"
									],
									"query": [
										{
											"key": "name",
											"value": "{{BadProtocolId}}",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Update Study Protocol - Priv - Auth - NullId -> 404",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2e411e77-78d1-46ad-8bfb-3758016fda93",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 404\"] = responseCode.code === 404;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain protocols\"] = !(responseBody.has('\"protocols\":'));",
											"tests[\"Body does NOT contain protocol\"] = !(responseBody.has('\"protocol\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"protocol\": {\n      \"comments\": [\n      \t{\n      \t  \"name\": \"Updated\",\n      \t  \"value\": \"Updated with MtblsWs-Py\"\n      \t}\n      ],\n      \"components\": [],\n      \"description\": \"Test-Protocol description.\",\n      \"name\": \"Test-Protocol-Name\",\n      \"parameters\": [\n        {\n          \"comments\": [],\n          \"parameterName\": {\n            \"comments\": [],\n            \"annotationValue\": \"Test-Protocol-Parameter-Name\",\n            \"termAccession\": \"\",\n            \"termSource\": null\n          }        }\n      ],\n      \"protocolType\": {\n        \"comments\": [],\n        \"annotationValue\": \"Test-Protocol-Type\",\n        \"termAccession\": \"\",\n        \"termSource\": null\n      },\n      \"uri\": \"\",\n      \"version\": \"0.1\"\n    }\n}\n"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/protocols?name=",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PrivStudyId}}",
										"protocols"
									],
									"query": [
										{
											"key": "name",
											"value": "",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				}
			]
		},
		{
			"name": "Update Study Factor",
			"description": null,
			"item": [
				{
					"name": "Pub",
					"description": "",
					"item": [
						{
							"name": "Update Study Factor - Pub - Auth - GoodId -> 200",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "cff00fdc-a431-4551-a203-509f9f8c66c8",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Body has factor\"] = responseBody.has('\"factor\":');",
											"var jsonData = JSON.parse(responseBody);",
											"if (jsonData.factor) {",
											"    var item = jsonData.factor",
											"    tests[\"JSON response has key 'factorName'\"] = item.hasOwnProperty('factorName');",
											"    tests[\"JSON response key 'factorName' not Null\"] = item.factorName;",
											"    tests[\"JSON response has key 'factorType'\"] = item.hasOwnProperty('factorType');",
											"    tests[\"JSON response key 'factorType' not Null\"] = item.factorType;",
											"    tests[\"JSON response has key 'comments'\"] = item.hasOwnProperty('comments');",
											"    tests[\"JSON response key 'comments' not Null\"] = item.comments;",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{  \n   \"factor\": \n    {\n      \"factorName\": \"Test-Timepoint\",\n      \"factorType\": {\n        \"annotationValue\": \"timepoint\",\n        \"termSource\": {\n          \"name\": \"EFO\",\n          \"file\": \"http://data.bioontology.org/ontologies/EFO\",\n          \"version\": \"132\",\n          \"description\": \"Experimental Factor Ontology\",\n          \"comments\": []\n        },\n        \"termAccession\": \"http://www.ebi.ac.uk/efo/EFO_0000724\",\n        \"comments\": []\n      },\n      \"comments\": []\n    }\n}\n"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/factors?name={{ValidFactorId}}",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PubStudyId}}",
										"factors"
									],
									"query": [
										{
											"key": "name",
											"value": "{{ValidFactorId}}",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Update Study Factor - Pub - Auth - NoData -> 400",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fbed67a0-9aa6-45c6-a0f4-f2568bd106c4",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain factors\"] = !(responseBody.has('\"factors\":'));",
											"tests[\"Body does NOT contain factor\"] = !(responseBody.has('\"factor\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "None"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/factors?name={{ValidFactorId}}",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PubStudyId}}",
										"factors"
									],
									"query": [
										{
											"key": "name",
											"value": "{{ValidFactorId}}",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Update Study Factor - Pub - Auth - MissingRequiredData -> 400",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "806d15ca-04fc-4ec9-85fd-89795a3b62dd",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain factors\"] = !(responseBody.has('\"factors\":'));",
											"tests[\"Body does NOT contain factor\"] = !(responseBody.has('\"factor\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{  \n   \"factor\": \n    {\n      \"factorType\": {\n        \"annotationValue\": \"timepoint\",\n        \"termSource\": {\n          \"name\": \"EFO\",\n          \"file\": \"http://data.bioontology.org/ontologies/EFO\",\n          \"version\": \"132\",\n          \"description\": \"Experimental Factor Ontology\",\n          \"comments\": []\n        },\n        \"termAccession\": \"http://www.ebi.ac.uk/efo/EFO_0000724\",\n        \"comments\": []\n      },\n      \"comments\": []\n    }\n}\n"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/factors?name={{ValidFactorId}}",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PubStudyId}}",
										"factors"
									],
									"query": [
										{
											"key": "name",
											"value": "{{ValidFactorId}}",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Update Study Factor - Pub - NoToken -> 401",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9258f125-67c6-46af-9659-50ebd4d35652",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 401\"] = responseCode.code === 401;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain factors\"] = !(responseBody.has('\"factors\":'));",
											"tests[\"Body does NOT contain factor\"] = !(responseBody.has('\"factor\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{  \n   \"factor\": \n    {\n      \"factorName\": \"Test-Timepoint\",\n      \"factorType\": {\n        \"annotationValue\": \"timepoint\",\n        \"termSource\": {\n          \"name\": \"EFO\",\n          \"file\": \"http://data.bioontology.org/ontologies/EFO\",\n          \"version\": \"132\",\n          \"description\": \"Experimental Factor Ontology\",\n          \"comments\": []\n        },\n        \"termAccession\": \"http://www.ebi.ac.uk/efo/EFO_0000724\",\n        \"comments\": []\n      },\n      \"comments\": []\n    }\n}\n"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/factors?name={{ValidFactorId}}",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PubStudyId}}",
										"factors"
									],
									"query": [
										{
											"key": "name",
											"value": "{{ValidFactorId}}",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Update Study Factor - Pub - NoAuth -> 403",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "47768218-fd36-42c6-8eff-b8b60b884249",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 403\"] = responseCode.code === 403;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain factors\"] = !(responseBody.has('\"factors\":'));",
											"tests[\"Body does NOT contain factor\"] = !(responseBody.has('\"factor\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{WrongAuth}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{  \n   \"factor\": \n    {\n      \"factorName\": \"Test-Timepoint\",\n      \"factorType\": {\n        \"annotationValue\": \"timepoint\",\n        \"termSource\": {\n          \"name\": \"EFO\",\n          \"file\": \"http://data.bioontology.org/ontologies/EFO\",\n          \"version\": \"132\",\n          \"description\": \"Experimental Factor Ontology\",\n          \"comments\": []\n        },\n        \"termAccession\": \"http://www.ebi.ac.uk/efo/EFO_0000724\",\n        \"comments\": []\n      },\n      \"comments\": []\n    }\n}\n"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/factors?name={{ValidFactorId}}",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PubStudyId}}",
										"factors"
									],
									"query": [
										{
											"key": "name",
											"value": "{{ValidFactorId}}",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Update Study Factor - Pub - Auth - BadId -> 404",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4270491e-680d-4be3-bac8-6072af2eb744",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 404\"] = responseCode.code === 404;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain factors\"] = !(responseBody.has('\"factors\":'));",
											"tests[\"Body does NOT contain factor\"] = !(responseBody.has('\"factor\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{  \n   \"factor\": \n    {\n      \"factorName\": \"Test-Timepoint\",\n      \"factorType\": {\n        \"annotationValue\": \"timepoint\",\n        \"termSource\": {\n          \"name\": \"EFO\",\n          \"file\": \"http://data.bioontology.org/ontologies/EFO\",\n          \"version\": \"132\",\n          \"description\": \"Experimental Factor Ontology\",\n          \"comments\": []\n        },\n        \"termAccession\": \"http://www.ebi.ac.uk/efo/EFO_0000724\",\n        \"comments\": []\n      },\n      \"comments\": []\n    }\n}\n"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/factors?name={{BadFactorId}}",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PubStudyId}}",
										"factors"
									],
									"query": [
										{
											"key": "name",
											"value": "{{BadFactorId}}",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Update Study Factor - Pub - Auth - NullId -> 404",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5aa05272-e704-4c0a-8190-526ff4c795ac",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 404\"] = responseCode.code === 404;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain factors\"] = !(responseBody.has('\"factors\":'));",
											"tests[\"Body does NOT contain factor\"] = !(responseBody.has('\"factor\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{  \n   \"factor\": \n    {\n      \"factorName\": \"Test-Timepoint\",\n      \"factorType\": {\n        \"annotationValue\": \"timepoint\",\n        \"termSource\": {\n          \"name\": \"EFO\",\n          \"file\": \"http://data.bioontology.org/ontologies/EFO\",\n          \"version\": \"132\",\n          \"description\": \"Experimental Factor Ontology\",\n          \"comments\": []\n        },\n        \"termAccession\": \"http://www.ebi.ac.uk/efo/EFO_0000724\",\n        \"comments\": []\n      },\n      \"comments\": []\n    }\n}\n"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/factors?name=",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PubStudyId}}",
										"factors"
									],
									"query": [
										{
											"key": "name",
											"value": "",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Priv",
					"description": "",
					"item": [
						{
							"name": "Update Study Factor - Priv - Auth - GoodId -> 200",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "aab53500-efcb-4d55-ab97-85fdd20c1a04",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Body has factor\"] = responseBody.has('\"factor\":');",
											"var jsonData = JSON.parse(responseBody);",
											"if (jsonData.factor) {",
											"    var item = jsonData.factor",
											"    tests[\"JSON response has key 'factorName'\"] = item.hasOwnProperty('factorName');",
											"    tests[\"JSON response key 'factorName' not Null\"] = item.factorName;",
											"    tests[\"JSON response has key 'factorType'\"] = item.hasOwnProperty('factorType');",
											"    tests[\"JSON response key 'factorType' not Null\"] = item.factorType;",
											"    tests[\"JSON response has key 'comments'\"] = item.hasOwnProperty('comments');",
											"    tests[\"JSON response key 'comments' not Null\"] = item.comments;",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{  \n   \"factor\": \n    {\n      \"factorName\": \"Test-Timepoint\",\n      \"factorType\": {\n        \"annotationValue\": \"timepoint\",\n        \"termSource\": {\n          \"name\": \"EFO\",\n          \"file\": \"http://data.bioontology.org/ontologies/EFO\",\n          \"version\": \"132\",\n          \"description\": \"Experimental Factor Ontology\",\n          \"comments\": []\n        },\n        \"termAccession\": \"http://www.ebi.ac.uk/efo/EFO_0000724\",\n        \"comments\": []\n      },\n      \"comments\": []\n    }\n}\n"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/factors?name={{ValidFactorId}}",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PrivStudyId}}",
										"factors"
									],
									"query": [
										{
											"key": "name",
											"value": "{{ValidFactorId}}",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Update Study Factor - Priv - Auth - NoData -> 400",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1c846f8c-4071-45a1-b524-4b75bfa47f47",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain factors\"] = !(responseBody.has('\"factors\":'));",
											"tests[\"Body does NOT contain factor\"] = !(responseBody.has('\"factor\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "None"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/factors?name={{ValidFactorId}}",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PrivStudyId}}",
										"factors"
									],
									"query": [
										{
											"key": "name",
											"value": "{{ValidFactorId}}",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Update Study Factor - Priv - Auth - MissingRequiredData -> 400",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6da98fed-4a1a-4422-aa0b-c068f9ccb49e",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain factors\"] = !(responseBody.has('\"factors\":'));",
											"tests[\"Body does NOT contain factor\"] = !(responseBody.has('\"factor\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{  \n   \"factor\": \n    {\n      \"factorType\": {\n        \"annotationValue\": \"timepoint\",\n        \"termSource\": {\n          \"name\": \"EFO\",\n          \"file\": \"http://data.bioontology.org/ontologies/EFO\",\n          \"version\": \"132\",\n          \"description\": \"Experimental Factor Ontology\",\n          \"comments\": []\n        },\n        \"termAccession\": \"http://www.ebi.ac.uk/efo/EFO_0000724\",\n        \"comments\": []\n      },\n      \"comments\": []\n    }\n}\n"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/factors?name={{ValidFactorId}}",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PrivStudyId}}",
										"factors"
									],
									"query": [
										{
											"key": "name",
											"value": "{{ValidFactorId}}",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Update Study Factor - Priv - NoToken -> 401",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d00ab201-6233-4229-9a94-97eec8bb7e71",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 401\"] = responseCode.code === 401;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain factors\"] = !(responseBody.has('\"factors\":'));",
											"tests[\"Body does NOT contain factor\"] = !(responseBody.has('\"factor\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{  \n   \"factor\": \n    {\n      \"factorName\": \"Test-Timepoint\",\n      \"factorType\": {\n        \"annotationValue\": \"timepoint\",\n        \"termSource\": {\n          \"name\": \"EFO\",\n          \"file\": \"http://data.bioontology.org/ontologies/EFO\",\n          \"version\": \"132\",\n          \"description\": \"Experimental Factor Ontology\",\n          \"comments\": []\n        },\n        \"termAccession\": \"http://www.ebi.ac.uk/efo/EFO_0000724\",\n        \"comments\": []\n      },\n      \"comments\": []\n    }\n}\n"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/factors?name={{ValidFactorId}}",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PrivStudyId}}",
										"factors"
									],
									"query": [
										{
											"key": "name",
											"value": "{{ValidFactorId}}",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Update Study Factor - Priv - NoAuth -> 403",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e572a043-f138-45aa-bcd3-90541b239f4e",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 403\"] = responseCode.code === 403;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain factors\"] = !(responseBody.has('\"factors\":'));",
											"tests[\"Body does NOT contain factor\"] = !(responseBody.has('\"factor\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{WrongAuth}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{  \n   \"factor\": \n    {\n      \"factorName\": \"Test-Timepoint\",\n      \"factorType\": {\n        \"annotationValue\": \"timepoint\",\n        \"termSource\": {\n          \"name\": \"EFO\",\n          \"file\": \"http://data.bioontology.org/ontologies/EFO\",\n          \"version\": \"132\",\n          \"description\": \"Experimental Factor Ontology\",\n          \"comments\": []\n        },\n        \"termAccession\": \"http://www.ebi.ac.uk/efo/EFO_0000724\",\n        \"comments\": []\n      },\n      \"comments\": []\n    }\n}\n"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/factors?name={{ValidFactorId}}",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PrivStudyId}}",
										"factors"
									],
									"query": [
										{
											"key": "name",
											"value": "{{ValidFactorId}}",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Update Study Factor - Priv - Auth - BadId -> 404",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "00affd8f-342c-4e90-ac63-e122b910ff29",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 404\"] = responseCode.code === 404;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain factors\"] = !(responseBody.has('\"factors\":'));",
											"tests[\"Body does NOT contain factor\"] = !(responseBody.has('\"factor\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{  \n   \"factor\": \n    {\n      \"factorName\": \"Test-Timepoint\",\n      \"factorType\": {\n        \"annotationValue\": \"timepoint\",\n        \"termSource\": {\n          \"name\": \"EFO\",\n          \"file\": \"http://data.bioontology.org/ontologies/EFO\",\n          \"version\": \"132\",\n          \"description\": \"Experimental Factor Ontology\",\n          \"comments\": []\n        },\n        \"termAccession\": \"http://www.ebi.ac.uk/efo/EFO_0000724\",\n        \"comments\": []\n      },\n      \"comments\": []\n    }\n}\n"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/factors?name={{BadFactorId}}",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PrivStudyId}}",
										"factors"
									],
									"query": [
										{
											"key": "name",
											"value": "{{BadFactorId}}",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Update Study Factor - Priv - Auth - NullId -> 404",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d06b2cb1-030d-484a-80cd-920a51a98282",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 404\"] = responseCode.code === 404;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain factors\"] = !(responseBody.has('\"factors\":'));",
											"tests[\"Body does NOT contain factor\"] = !(responseBody.has('\"factor\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{  \n   \"factor\": \n    {\n      \"factorName\": \"Test-Timepoint\",\n      \"factorType\": {\n        \"annotationValue\": \"timepoint\",\n        \"termSource\": {\n          \"name\": \"EFO\",\n          \"file\": \"http://data.bioontology.org/ontologies/EFO\",\n          \"version\": \"132\",\n          \"description\": \"Experimental Factor Ontology\",\n          \"comments\": []\n        },\n        \"termAccession\": \"http://www.ebi.ac.uk/efo/EFO_0000724\",\n        \"comments\": []\n      },\n      \"comments\": []\n    }\n}\n"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/factors?name=",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PrivStudyId}}",
										"factors"
									],
									"query": [
										{
											"key": "name",
											"value": "",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				}
			]
		},
		{
			"name": "Update Study Design Descriptor",
			"description": null,
			"item": [
				{
					"name": "Pub",
					"description": "",
					"item": [
						{
							"name": "Update Study Design Descriptor - Pub - Auth - GoodId -> 200",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fa589091-bcd6-4a3d-875d-8c02552228f6",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Body has studyDesignDescriptor\"] = responseBody.has('\"studyDesignDescriptor\":');",
											"var jsonData = JSON.parse(responseBody);",
											"if (jsonData.studyDesignDescriptor) {",
											"    var item = jsonData.studyDesignDescriptor",
											"    tests[\"JSON response has key 'annotationValue'\"] = item.hasOwnProperty('annotationValue');",
											"    tests[\"JSON response key 'annotationValue' not Null\"] = item.annotationValue;",
											"    tests[\"JSON response has key 'termSource'\"] = item.hasOwnProperty('termSource');",
											"    tests[\"JSON response key 'termSource' not Null\"] = item.termSource;",
											"    tests[\"JSON response has key 'termAccession'\"] = item.hasOwnProperty('termAccession');",
											"    tests[\"JSON response key 'termAccession' not Null\"] = item.termAccession;",
											"    tests[\"JSON response has key 'comments'\"] = item.hasOwnProperty('comments');",
											"    tests[\"JSON response key 'comments' not Null\"] = item.comments;",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{  \n   \"studyDesignDescriptor\":{  \n      \"annotationValue\":\"Test-time-series-design\",\n      \"termSource\":{  \n         \"name\":\"EFO\",\n         \"file\":\"http://data.bioontology.org/ontologies/EFO\",\n         \"version\":\"132\",\n         \"description\":\"Experimental Factor Ontology\",\n         \"comments\":[]\n      },\n      \"termAccession\":\"http://www.ebi.ac.uk/efo/EFO_0001779\",\n      \"comments\":[\n\t{\n      \t  \"name\": \"Updated\",\n      \t  \"value\": \"Updated with MtblsWs-Py\"\n      \t}\n      ]\n   }\n}"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/descriptors?annotationValue={{ValidDescriptorId}}",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PubStudyId}}",
										"descriptors"
									],
									"query": [
										{
											"key": "annotationValue",
											"value": "{{ValidDescriptorId}}",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Update Study Design Descriptor - Pub - Auth - NoData -> 400",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "28686abd-a1c8-494b-b66b-997a56697581",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain studyDesignDescriptor\"] = !(responseBody.has('\"studyDesignDescriptor\":'));",
											"tests[\"Body does NOT contain studyDesignDescriptor\"] = !(responseBody.has('\"studyDesignDescriptor\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "None"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/descriptors?annotationValue={{ValidDescriptorId}}",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PubStudyId}}",
										"descriptors"
									],
									"query": [
										{
											"key": "annotationValue",
											"value": "{{ValidDescriptorId}}",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Update Study Design Descriptor - Pub - Auth - MissingRequiredData -> 400",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "03fa0898-088b-4ce4-87b3-fe52a5405f7e",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain studyDesignDescriptor\"] = !(responseBody.has('\"studyDesignDescriptor\":'));",
											"tests[\"Body does NOT contain studyDesignDescriptor\"] = !(responseBody.has('\"studyDesignDescriptor\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{  \n   \"studyDesignDescriptor\":{  \n      \"termSource\":{  \n         \"name\":\"EFO\",\n         \"file\":\"http://data.bioontology.org/ontologies/EFO\",\n         \"version\":\"132\",\n         \"description\":\"Experimental Factor Ontology\",\n         \"comments\":[]\n      },\n      \"termAccession\":\"http://www.ebi.ac.uk/efo/EFO_0001779\",\n      \"comments\":[\n\t{\n      \t  \"name\": \"Updated\",\n      \t  \"value\": \"Updated with MtblsWs-Py\"\n      \t}\n      ]\n   }\n}"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/descriptors?annotationValue={{ValidDescriptorId}}",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PubStudyId}}",
										"descriptors"
									],
									"query": [
										{
											"key": "annotationValue",
											"value": "{{ValidDescriptorId}}",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Update Study Design Descriptor - Pub - NoToken -> 401",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f1355d91-ce6e-47f6-9a65-ca3324ee2021",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 401\"] = responseCode.code === 401;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain studyDesignDescriptor\"] = !(responseBody.has('\"studyDesignDescriptor\":'));",
											"tests[\"Body does NOT contain studyDesignDescriptor\"] = !(responseBody.has('\"studyDesignDescriptor\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{  \n   \"studyDesignDescriptor\":{  \n      \"annotationValue\":\"Test-time-series-design\",\n      \"termSource\":{  \n         \"name\":\"EFO\",\n         \"file\":\"http://data.bioontology.org/ontologies/EFO\",\n         \"version\":\"132\",\n         \"description\":\"Experimental Factor Ontology\",\n         \"comments\":[]\n      },\n      \"termAccession\":\"http://www.ebi.ac.uk/efo/EFO_0001779\",\n      \"comments\":[\n\t{\n      \t  \"name\": \"Updated\",\n      \t  \"value\": \"Updated with MtblsWs-Py\"\n      \t}\n      ]\n   }\n}"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/descriptors?annotationValue={{ValidDescriptorId}}",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PubStudyId}}",
										"descriptors"
									],
									"query": [
										{
											"key": "annotationValue",
											"value": "{{ValidDescriptorId}}",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Update Study Design Descriptor - Pub - NoAuth -> 403",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ac55158b-dfb9-4756-986d-6dca3a1a26ac",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 403\"] = responseCode.code === 403;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain studyDesignDescriptor\"] = !(responseBody.has('\"studyDesignDescriptor\":'));",
											"tests[\"Body does NOT contain studyDesignDescriptor\"] = !(responseBody.has('\"studyDesignDescriptor\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{WrongAuth}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{  \n   \"studyDesignDescriptor\":{  \n      \"annotationValue\":\"Test-time-series-design\",\n      \"termSource\":{  \n         \"name\":\"EFO\",\n         \"file\":\"http://data.bioontology.org/ontologies/EFO\",\n         \"version\":\"132\",\n         \"description\":\"Experimental Factor Ontology\",\n         \"comments\":[]\n      },\n      \"termAccession\":\"http://www.ebi.ac.uk/efo/EFO_0001779\",\n      \"comments\":[\n\t{\n      \t  \"name\": \"Updated\",\n      \t  \"value\": \"Updated with MtblsWs-Py\"\n      \t}\n      ]\n   }\n}"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/descriptors?annotationValue={{ValidDescriptorId}}",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PubStudyId}}",
										"descriptors"
									],
									"query": [
										{
											"key": "annotationValue",
											"value": "{{ValidDescriptorId}}",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Update Study Design Descriptor - Pub - Auth - BadId -> 404",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "180a2148-7a8e-425a-86a6-3ca99cbcee07",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 404\"] = responseCode.code === 404;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain studyDesignDescriptor\"] = !(responseBody.has('\"studyDesignDescriptor\":'));",
											"tests[\"Body does NOT contain studyDesignDescriptor\"] = !(responseBody.has('\"studyDesignDescriptor\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{  \n   \"studyDesignDescriptor\":{  \n      \"annotationValue\":\"Test-time-series-design\",\n      \"termSource\":{  \n         \"name\":\"EFO\",\n         \"file\":\"http://data.bioontology.org/ontologies/EFO\",\n         \"version\":\"132\",\n         \"description\":\"Experimental Factor Ontology\",\n         \"comments\":[]\n      },\n      \"termAccession\":\"http://www.ebi.ac.uk/efo/EFO_0001779\",\n      \"comments\":[\n\t{\n      \t  \"name\": \"Updated\",\n      \t  \"value\": \"Updated with MtblsWs-Py\"\n      \t}\n      ]\n   }\n}"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/descriptors?annotationValue={{BadDescriptorId}}",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PubStudyId}}",
										"descriptors"
									],
									"query": [
										{
											"key": "annotationValue",
											"value": "{{BadDescriptorId}}",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Update Study Design Descriptor - Pub - Auth - NullId -> 404",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bdfbc34e-fd40-4e3d-83b4-6c951cee5d1c",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 404\"] = responseCode.code === 404;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain studyDesignDescriptor\"] = !(responseBody.has('\"studyDesignDescriptor\":'));",
											"tests[\"Body does NOT contain studyDesignDescriptor\"] = !(responseBody.has('\"studyDesignDescriptor\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{  \n   \"studyDesignDescriptor\":{  \n      \"annotationValue\":\"Test-time-series-design\",\n      \"termSource\":{  \n         \"name\":\"EFO\",\n         \"file\":\"http://data.bioontology.org/ontologies/EFO\",\n         \"version\":\"132\",\n         \"description\":\"Experimental Factor Ontology\",\n         \"comments\":[]\n      },\n      \"termAccession\":\"http://www.ebi.ac.uk/efo/EFO_0001779\",\n      \"comments\":[\n\t{\n      \t  \"name\": \"Updated\",\n      \t  \"value\": \"Updated with MtblsWs-Py\"\n      \t}\n      ]\n   }\n}"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/descriptors?annotationValue=",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PubStudyId}}",
										"descriptors"
									],
									"query": [
										{
											"key": "annotationValue",
											"value": "",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Priv",
					"description": "",
					"item": [
						{
							"name": "Update Study Design Descriptor - Priv - Auth - GoodId -> 200",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f6ce4e0c-a1b6-4e49-a45b-67445a19d63b",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Body has studyDesignDescriptor\"] = responseBody.has('\"studyDesignDescriptor\":');",
											"var jsonData = JSON.parse(responseBody);",
											"if (jsonData.studyDesignDescriptor) {",
											"    var item = jsonData.studyDesignDescriptor",
											"    tests[\"JSON response has key 'annotationValue'\"] = item.hasOwnProperty('annotationValue');",
											"    tests[\"JSON response key 'annotationValue' not Null\"] = item.annotationValue;",
											"    tests[\"JSON response has key 'termSource'\"] = item.hasOwnProperty('termSource');",
											"    tests[\"JSON response key 'termSource' not Null\"] = item.termSource;",
											"    tests[\"JSON response has key 'termAccession'\"] = item.hasOwnProperty('termAccession');",
											"    tests[\"JSON response key 'termAccession' not Null\"] = item.termAccession;",
											"    tests[\"JSON response has key 'comments'\"] = item.hasOwnProperty('comments');",
											"    tests[\"JSON response key 'comments' not Null\"] = item.comments;",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{  \n   \"studyDesignDescriptor\":{  \n      \"annotationValue\":\"Test-time-series-design\",\n      \"termSource\":{  \n         \"name\":\"EFO\",\n         \"file\":\"http://data.bioontology.org/ontologies/EFO\",\n         \"version\":\"132\",\n         \"description\":\"Experimental Factor Ontology\",\n         \"comments\":[]\n      },\n      \"termAccession\":\"http://www.ebi.ac.uk/efo/EFO_0001779\",\n      \"comments\":[\n\t{\n      \t  \"name\": \"Updated\",\n      \t  \"value\": \"Updated with MtblsWs-Py\"\n      \t}\n      ]\n   }\n}"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/descriptors?annotationValue={{ValidDescriptorId}}",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PrivStudyId}}",
										"descriptors"
									],
									"query": [
										{
											"key": "annotationValue",
											"value": "{{ValidDescriptorId}}",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Update Study Design Descriptor - Priv - Auth - NoData -> 400",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "550fd077-eda1-4d72-ac68-d6736da093c8",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain studyDesignDescriptor\"] = !(responseBody.has('\"studyDesignDescriptor\":'));",
											"tests[\"Body does NOT contain studyDesignDescriptor\"] = !(responseBody.has('\"studyDesignDescriptor\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "None"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/descriptors?annotationValue={{ValidDescriptorId}}",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PrivStudyId}}",
										"descriptors"
									],
									"query": [
										{
											"key": "annotationValue",
											"value": "{{ValidDescriptorId}}",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Update Study Design Descriptor - Priv - Auth - MissingRequiredData -> 400",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "597f1d08-9a92-455c-ae5c-1a010b3cba36",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain studyDesignDescriptor\"] = !(responseBody.has('\"studyDesignDescriptor\":'));",
											"tests[\"Body does NOT contain studyDesignDescriptor\"] = !(responseBody.has('\"studyDesignDescriptor\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{  \n   \"studyDesignDescriptor\":{  \n      \"termSource\":{  \n         \"name\":\"EFO\",\n         \"file\":\"http://data.bioontology.org/ontologies/EFO\",\n         \"version\":\"132\",\n         \"description\":\"Experimental Factor Ontology\",\n         \"comments\":[]\n      },\n      \"termAccession\":\"http://www.ebi.ac.uk/efo/EFO_0001779\",\n      \"comments\":[\n\t{\n      \t  \"name\": \"Updated\",\n      \t  \"value\": \"Updated with MtblsWs-Py\"\n      \t}\n      ]\n   }\n}"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/descriptors?annotationValue={{ValidDescriptorId}}",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PrivStudyId}}",
										"descriptors"
									],
									"query": [
										{
											"key": "annotationValue",
											"value": "{{ValidDescriptorId}}",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Update Study Design Descriptor - Priv - NoToken -> 401",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3ef3ac03-b6de-40cf-b122-3bb1d00faaa0",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 401\"] = responseCode.code === 401;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain studyDesignDescriptor\"] = !(responseBody.has('\"studyDesignDescriptor\":'));",
											"tests[\"Body does NOT contain studyDesignDescriptor\"] = !(responseBody.has('\"studyDesignDescriptor\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{  \n   \"studyDesignDescriptor\":{  \n      \"annotationValue\":\"Test-time-series-design\",\n      \"termSource\":{  \n         \"name\":\"EFO\",\n         \"file\":\"http://data.bioontology.org/ontologies/EFO\",\n         \"version\":\"132\",\n         \"description\":\"Experimental Factor Ontology\",\n         \"comments\":[]\n      },\n      \"termAccession\":\"http://www.ebi.ac.uk/efo/EFO_0001779\",\n      \"comments\":[\n\t{\n      \t  \"name\": \"Updated\",\n      \t  \"value\": \"Updated with MtblsWs-Py\"\n      \t}\n      ]\n   }\n}"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/descriptors?annotationValue={{ValidDescriptorId}}",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PrivStudyId}}",
										"descriptors"
									],
									"query": [
										{
											"key": "annotationValue",
											"value": "{{ValidDescriptorId}}",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Update Study Design Descriptor - Priv - NoAuth -> 403",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "591d5532-6fbc-40c4-ae50-78c6cff0f776",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 403\"] = responseCode.code === 403;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain studyDesignDescriptor\"] = !(responseBody.has('\"studyDesignDescriptor\":'));",
											"tests[\"Body does NOT contain studyDesignDescriptor\"] = !(responseBody.has('\"studyDesignDescriptor\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{WrongAuth}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{  \n   \"studyDesignDescriptor\":{  \n      \"annotationValue\":\"Test-time-series-design\",\n      \"termSource\":{  \n         \"name\":\"EFO\",\n         \"file\":\"http://data.bioontology.org/ontologies/EFO\",\n         \"version\":\"132\",\n         \"description\":\"Experimental Factor Ontology\",\n         \"comments\":[]\n      },\n      \"termAccession\":\"http://www.ebi.ac.uk/efo/EFO_0001779\",\n      \"comments\":[\n\t{\n      \t  \"name\": \"Updated\",\n      \t  \"value\": \"Updated with MtblsWs-Py\"\n      \t}\n      ]\n   }\n}"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/descriptors?annotationValue={{ValidDescriptorId}}",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PrivStudyId}}",
										"descriptors"
									],
									"query": [
										{
											"key": "annotationValue",
											"value": "{{ValidDescriptorId}}",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Update Study Design Descriptor - Priv - Auth - BadId -> 404",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "af58c05d-3db1-4507-8234-aa0130e59984",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 404\"] = responseCode.code === 404;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain studyDesignDescriptor\"] = !(responseBody.has('\"studyDesignDescriptor\":'));",
											"tests[\"Body does NOT contain studyDesignDescriptor\"] = !(responseBody.has('\"studyDesignDescriptor\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{  \n   \"studyDesignDescriptor\":{  \n      \"annotationValue\":\"Test-time-series-design\",\n      \"termSource\":{  \n         \"name\":\"EFO\",\n         \"file\":\"http://data.bioontology.org/ontologies/EFO\",\n         \"version\":\"132\",\n         \"description\":\"Experimental Factor Ontology\",\n         \"comments\":[]\n      },\n      \"termAccession\":\"http://www.ebi.ac.uk/efo/EFO_0001779\",\n      \"comments\":[\n\t{\n      \t  \"name\": \"Updated\",\n      \t  \"value\": \"Updated with MtblsWs-Py\"\n      \t}\n      ]\n   }\n}"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/descriptors?annotationValue={{BadDescriptorId}}",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PrivStudyId}}",
										"descriptors"
									],
									"query": [
										{
											"key": "annotationValue",
											"value": "{{BadDescriptorId}}",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Update Study Design Descriptor - Priv - Auth - NullId -> 404",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "dca5198f-cd45-466f-ab56-75039603019a",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 404\"] = responseCode.code === 404;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain studyDesignDescriptor\"] = !(responseBody.has('\"studyDesignDescriptor\":'));",
											"tests[\"Body does NOT contain studyDesignDescriptor\"] = !(responseBody.has('\"studyDesignDescriptor\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{  \n   \"studyDesignDescriptor\":{  \n      \"annotationValue\":\"Test-time-series-design\",\n      \"termSource\":{  \n         \"name\":\"EFO\",\n         \"file\":\"http://data.bioontology.org/ontologies/EFO\",\n         \"version\":\"132\",\n         \"description\":\"Experimental Factor Ontology\",\n         \"comments\":[]\n      },\n      \"termAccession\":\"http://www.ebi.ac.uk/efo/EFO_0001779\",\n      \"comments\":[\n\t{\n      \t  \"name\": \"Updated\",\n      \t  \"value\": \"Updated with MtblsWs-Py\"\n      \t}\n      ]\n   }\n}"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/descriptors?annotationValue=",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PrivStudyId}}",
										"descriptors"
									],
									"query": [
										{
											"key": "annotationValue",
											"value": "",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				}
			]
		},
		{
			"name": "Update Study Publication",
			"description": null,
			"item": [
				{
					"name": "Pub",
					"description": "",
					"item": [
						{
							"name": "Update Study Publication - Pub - Auth - GoodId -> 200",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e61fa728-bee5-4cb0-91b9-665076c1fc93",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Body has publication\"] = responseBody.has('\"publication\":');",
											"var jsonData = JSON.parse(responseBody);",
											"if (jsonData.publication) {",
											"    var item = jsonData.publication;",
											"    tests[\"JSON response has key 'title'\"] = item.hasOwnProperty('title');",
											"    tests[\"JSON response key 'title' not Null\"] = item.title;",
											"    tests[\"JSON response has key 'authorList'\"] = item.hasOwnProperty('authorList');",
											"    tests[\"JSON response key 'authorList' not Null\"] = item.authorList;",
											"    tests[\"JSON response has key 'pubMedID'\"] = item.hasOwnProperty('pubMedID');",
											"    tests[\"JSON response key 'pubMedID' not Null\"] = item.pubMedID;",
											"    tests[\"JSON response has key 'doi'\"] = item.hasOwnProperty('doi');",
											"    tests[\"JSON response key 'doi' not Null\"] = item.doi;",
											"    if (item.status) {",
											"        var item = item.status",
											"        tests[\"JSON response has key 'annotationValue'\"] = item.hasOwnProperty('annotationValue');",
											"        tests[\"JSON response key 'annotationValue' not Null\"] = item.annotationValue;",
											"        tests[\"JSON response has key 'termSource'\"] = item.hasOwnProperty('termSource');",
											"        // tests[\"JSON response key 'termSource' not Null\"] = item.termSource;",
											"        tests[\"JSON response has key 'termAccession'\"] = item.hasOwnProperty('termAccession');",
											"        // tests[\"JSON response key 'termAccession' not Null\"] = item.termAccession;",
											"        tests[\"JSON response has key 'comments'\"] = item.hasOwnProperty('comments');",
											"        tests[\"JSON response key 'comments' not Null\"] = item.comments;",
											"    }",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"publication\": {\n    \"title\": \"Test-Publication-Title\",\n    \"authorList\": \"Doe J, Smith B\",\n    \"pubMedID\": \"12345678\",\n    \"doi\": \"10.1234/12345678\",\n    \"status\": {\n      \"annotationValue\": \"Published\",\n      \"termSource\": null,\n      \"termAccession\": \"\",\n      \"comments\": []\n    },\n    \"comments\": []\n  }\n}\n"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/publications?title={{ValidPublicationId}}",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PubStudyId}}",
										"publications"
									],
									"query": [
										{
											"key": "title",
											"value": "{{ValidPublicationId}}",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Update Study Publication- Pub - Auth - NoData -> 400",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "dee94f9f-0322-4f62-a9bd-40f803577015",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain publications\"] = !(responseBody.has('\"publications\":'));",
											"tests[\"Body does NOT contain publication\"] = !(responseBody.has('\"publication\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "None"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/publications?title={{ValidPublicationId}}",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PubStudyId}}",
										"publications"
									],
									"query": [
										{
											"key": "title",
											"value": "{{ValidPublicationId}}",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Update Study Publication - Pub - Auth - MissingRequiredData -> 400",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "31a6edae-3171-4aa5-984d-36163ef809d3",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain publications\"] = !(responseBody.has('\"publications\":'));",
											"tests[\"Body does NOT contain publication\"] = !(responseBody.has('\"publication\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"publication\": {\n    \"authorList\": \"Doe J, Smith B\",\n    \"pubMedID\": \"12345678\",\n    \"doi\": \"10.1234/12345678\",\n    \"status\": {\n      \"annotationValue\": \"Published\",\n      \"termSource\": null,\n      \"termAccession\": \"\",\n      \"comments\": []\n    },\n    \"comments\": []\n  }\n}\n"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/publications?title={{ValidPublicationId}}",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PubStudyId}}",
										"publications"
									],
									"query": [
										{
											"key": "title",
											"value": "{{ValidPublicationId}}",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Update Study Publication - Pub - NoToken -> 401",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "40a5536a-2166-46de-ac0b-ac368ddd5308",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 401\"] = responseCode.code === 401;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain publications\"] = !(responseBody.has('\"publications\":'));",
											"tests[\"Body does NOT contain publication\"] = !(responseBody.has('\"publication\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"publication\": {\n    \"title\": \"Test-Publication-Title\",\n    \"authorList\": \"Doe J, Smith B\",\n    \"pubMedID\": \"12345678\",\n    \"doi\": \"10.1234/12345678\",\n    \"status\": {\n      \"annotationValue\": \"Published\",\n      \"termSource\": null,\n      \"termAccession\": \"\",\n      \"comments\": []\n    },\n    \"comments\": []\n  }\n}\n"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/publications?title={{ValidPublicationId}}",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PubStudyId}}",
										"publications"
									],
									"query": [
										{
											"key": "title",
											"value": "{{ValidPublicationId}}",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Update Study Publication - Pub - NoAuth -> 403",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8af9bec2-98af-43ac-9f17-e15afe3e1d73",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 403\"] = responseCode.code === 403;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain publications\"] = !(responseBody.has('\"publications\":'));",
											"tests[\"Body does NOT contain publication\"] = !(responseBody.has('\"publication\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{WrongAuth}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"publication\": {\n    \"title\": \"Test-Publication-Title\",\n    \"authorList\": \"Doe J, Smith B\",\n    \"pubMedID\": \"12345678\",\n    \"doi\": \"10.1234/12345678\",\n    \"status\": {\n      \"annotationValue\": \"Published\",\n      \"termSource\": null,\n      \"termAccession\": \"\",\n      \"comments\": []\n    },\n    \"comments\": []\n  }\n}\n"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/publications?title={{ValidPublicationId}}",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PubStudyId}}",
										"publications"
									],
									"query": [
										{
											"key": "title",
											"value": "{{ValidPublicationId}}",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Update Study Publication - Pub - Auth - BadId -> 404",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3b907742-75b4-4065-897f-550dc2cd6d9a",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 404\"] = responseCode.code === 404;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain publications\"] = !(responseBody.has('\"publications\":'));",
											"tests[\"Body does NOT contain publication\"] = !(responseBody.has('\"publication\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"publication\": {\n    \"title\": \"Test-Publication-Title\",\n    \"authorList\": \"Doe J, Smith B\",\n    \"pubMedID\": \"12345678\",\n    \"doi\": \"10.1234/12345678\",\n    \"status\": {\n      \"annotationValue\": \"Published\",\n      \"termSource\": null,\n      \"termAccession\": \"\",\n      \"comments\": []\n    },\n    \"comments\": []\n  }\n}\n"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/publications?title={{BadPubicationId}}",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PubStudyId}}",
										"publications"
									],
									"query": [
										{
											"key": "title",
											"value": "{{BadPubicationId}}",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Update Study Publication - Pub - Auth - NullId -> 404",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9532321a-fff0-4812-810a-c22dd8c99b6a",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 404\"] = responseCode.code === 404;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain publications\"] = !(responseBody.has('\"publications\":'));",
											"tests[\"Body does NOT contain publication\"] = !(responseBody.has('\"publication\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"publication\": {\n    \"title\": \"Test-Publication-Title\",\n    \"authorList\": \"Doe J, Smith B\",\n    \"pubMedID\": \"12345678\",\n    \"doi\": \"10.1234/12345678\",\n    \"status\": {\n      \"annotationValue\": \"Published\",\n      \"termSource\": null,\n      \"termAccession\": \"\",\n      \"comments\": []\n    },\n    \"comments\": []\n  }\n}\n"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/publications?title=",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PubStudyId}}",
										"publications"
									],
									"query": [
										{
											"key": "title",
											"value": "",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Priv",
					"description": "",
					"item": [
						{
							"name": "Update Study Publication - Priv - Auth - GoodId -> 200",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "824c6a4c-0559-4c49-92d8-79fae7fd6922",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Body has publication\"] = responseBody.has('\"publication\":');",
											"var jsonData = JSON.parse(responseBody);",
											"if (jsonData.publication) {",
											"    var item = jsonData.publication;",
											"    tests[\"JSON response has key 'title'\"] = item.hasOwnProperty('title');",
											"    tests[\"JSON response key 'title' not Null\"] = item.title;",
											"    tests[\"JSON response has key 'authorList'\"] = item.hasOwnProperty('authorList');",
											"    tests[\"JSON response key 'authorList' not Null\"] = item.authorList;",
											"    tests[\"JSON response has key 'pubMedID'\"] = item.hasOwnProperty('pubMedID');",
											"    tests[\"JSON response key 'pubMedID' not Null\"] = item.pubMedID;",
											"    tests[\"JSON response has key 'doi'\"] = item.hasOwnProperty('doi');",
											"    tests[\"JSON response key 'doi' not Null\"] = item.doi;",
											"    if (item.status) {",
											"        var item = item.status",
											"        tests[\"JSON response has key 'annotationValue'\"] = item.hasOwnProperty('annotationValue');",
											"        tests[\"JSON response key 'annotationValue' not Null\"] = item.annotationValue;",
											"        tests[\"JSON response has key 'termSource'\"] = item.hasOwnProperty('termSource');",
											"        // tests[\"JSON response key 'termSource' not Null\"] = item.termSource;",
											"        tests[\"JSON response has key 'termAccession'\"] = item.hasOwnProperty('termAccession');",
											"        // tests[\"JSON response key 'termAccession' not Null\"] = item.termAccession;",
											"        tests[\"JSON response has key 'comments'\"] = item.hasOwnProperty('comments');",
											"        tests[\"JSON response key 'comments' not Null\"] = item.comments;",
											"    }",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"publication\": {\n    \"title\": \"Test-Publication-Title\",\n    \"authorList\": \"Doe J, Smith B\",\n    \"pubMedID\": \"12345678\",\n    \"doi\": \"10.1234/12345678\",\n    \"status\": {\n      \"annotationValue\": \"Published\",\n      \"termSource\": null,\n      \"termAccession\": \"\",\n      \"comments\": []\n    },\n    \"comments\": []\n  }\n}\n"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/publications?title={{ValidPublicationId}}",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PrivStudyId}}",
										"publications"
									],
									"query": [
										{
											"key": "title",
											"value": "{{ValidPublicationId}}",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Update Study Publication - Priv - Auth - NoData -> 400",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "84dc4fcc-724b-48d6-9aa0-dc22fd7e1bb2",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain publications\"] = !(responseBody.has('\"publications\":'));",
											"tests[\"Body does NOT contain publication\"] = !(responseBody.has('\"publication\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "None"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/publications?title={{ValidPublicationId}}",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PrivStudyId}}",
										"publications"
									],
									"query": [
										{
											"key": "title",
											"value": "{{ValidPublicationId}}",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Update Study Publication - Priv - Auth - MissingRequiredData -> 400",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "055f0000-6182-4e61-99ad-1c71d7577abb",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain publications\"] = !(responseBody.has('\"publications\":'));",
											"tests[\"Body does NOT contain publication\"] = !(responseBody.has('\"publication\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"publication\": {\n    \"authorList\": \"Doe J, Smith B\",\n    \"pubMedID\": \"12345678\",\n    \"doi\": \"10.1234/12345678\",\n    \"status\": {\n      \"annotationValue\": \"Published\",\n      \"termSource\": null,\n      \"termAccession\": \"\",\n      \"comments\": []\n    },\n    \"comments\": []\n  }\n}\n"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/publications?title={{ValidPublicationId}}",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PrivStudyId}}",
										"publications"
									],
									"query": [
										{
											"key": "title",
											"value": "{{ValidPublicationId}}",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Update Study Publication - Priv - NoToken -> 401",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3e9ce16b-8d1e-4500-8299-643eced71c81",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 401\"] = responseCode.code === 401;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain publications\"] = !(responseBody.has('\"publications\":'));",
											"tests[\"Body does NOT contain publication\"] = !(responseBody.has('\"publication\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"publication\": {\n    \"title\": \"Test-Publication-Title\",\n    \"authorList\": \"Doe J, Smith B\",\n    \"pubMedID\": \"12345678\",\n    \"doi\": \"10.1234/12345678\",\n    \"status\": {\n      \"annotationValue\": \"Published\",\n      \"termSource\": null,\n      \"termAccession\": \"\",\n      \"comments\": []\n    },\n    \"comments\": []\n  }\n}\n"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/publications?title={{ValidPublicationId}}",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PrivStudyId}}",
										"publications"
									],
									"query": [
										{
											"key": "title",
											"value": "{{ValidPublicationId}}",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Update Study Publication - Priv - NoAuth -> 403",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d1f7f528-e3ed-497d-9d4b-70f3226d0fc2",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 403\"] = responseCode.code === 403;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain publications\"] = !(responseBody.has('\"publications\":'));",
											"tests[\"Body does NOT contain publication\"] = !(responseBody.has('\"publication\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{WrongAuth}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"publication\": {\n    \"title\": \"Test-Publication-Title\",\n    \"authorList\": \"Doe J, Smith B\",\n    \"pubMedID\": \"12345678\",\n    \"doi\": \"10.1234/12345678\",\n    \"status\": {\n      \"annotationValue\": \"Published\",\n      \"termSource\": null,\n      \"termAccession\": \"\",\n      \"comments\": []\n    },\n    \"comments\": []\n  }\n}\n"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/publications?title={{ValidPublicationId}}",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PrivStudyId}}",
										"publications"
									],
									"query": [
										{
											"key": "title",
											"value": "{{ValidPublicationId}}",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Update Study Publication - Priv - Auth - BadId -> 404",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "640064a4-16f9-42cc-9429-9d4c3d23e55b",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 404\"] = responseCode.code === 404;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain publications\"] = !(responseBody.has('\"publications\":'));",
											"tests[\"Body does NOT contain publication\"] = !(responseBody.has('\"publication\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"publication\": {\n    \"title\": \"Test-Publication-Title\",\n    \"authorList\": \"Doe J, Smith B\",\n    \"pubMedID\": \"12345678\",\n    \"doi\": \"10.1234/12345678\",\n    \"status\": {\n      \"annotationValue\": \"Published\",\n      \"termSource\": null,\n      \"termAccession\": \"\",\n      \"comments\": []\n    },\n    \"comments\": []\n  }\n}\n"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/publications?title={{BadPubicationId}}",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PrivStudyId}}",
										"publications"
									],
									"query": [
										{
											"key": "title",
											"value": "{{BadPubicationId}}",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Update Study Publication - Priv - Auth - NullId -> 404",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "47de0e35-2af6-416f-bff5-29bd3bd361f6",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 404\"] = responseCode.code === 404;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain publications\"] = !(responseBody.has('\"publications\":'));",
											"tests[\"Body does NOT contain publication\"] = !(responseBody.has('\"publication\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"publication\": {\n    \"title\": \"Test-Publication-Title\",\n    \"authorList\": \"Doe J, Smith B\",\n    \"pubMedID\": \"12345678\",\n    \"doi\": \"10.1234/12345678\",\n    \"status\": {\n      \"annotationValue\": \"Published\",\n      \"termSource\": null,\n      \"termAccession\": \"\",\n      \"comments\": []\n    },\n    \"comments\": []\n  }\n}\n"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/publications?title=",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PrivStudyId}}",
										"publications"
									],
									"query": [
										{
											"key": "title",
											"value": "",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "961933fd-3cf4-4d36-9946-80bbc6f04f4b",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "e0ddf6cb-2531-4492-8f8f-2914cc564690",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}