{
	"info": {
		"name": "MtblsWs-Py - All POST-ADD Tests",
		"_postman_id": "c82788d0-952c-4e5c-a08d-79482e428f44",
		"description": "Only UPDATE methods, those which actually modify data in the server. Should be run with caution, as it may lead to data loss (when run in PROD) or inconsistencies.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "POST New Study",
			"description": null,
			"item": [
				{
					"name": "New Study - Auth -> 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9e6c7efb-e37c-458a-811d-61f52df60e53",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
									"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"if (jsonData.investigation) {",
									"    var item = jsonData.investigation",
									"    tests[\"JSON response has key 'comments'\"] = item.hasOwnProperty('comments');",
									"    tests[\"JSON response key 'comments' not Null\"] = item.comments;",
									"    tests[\"JSON response has key 'description'\"] = item.hasOwnProperty('description');",
									"    tests[\"JSON response key 'description' not Null\"] = item.description;",
									"    tests[\"JSON response has key 'filename'\"] = item.hasOwnProperty('filename');",
									"    tests[\"JSON response key 'filename' not Null\"] = item.filename;",
									"    tests[\"JSON response has key 'id'\"] = item.hasOwnProperty('id');",
									"    // tests[\"JSON response key 'id' not Null\"] = item.id;",
									"    tests[\"JSON response has key 'identifier'\"] = item.hasOwnProperty('identifier');",
									"    // tests[\"JSON response key 'identifier' not Null\"] = item.identifier;",
									"    tests[\"JSON response has key 'ontologySourceReferences'\"] = item.hasOwnProperty('ontologySourceReferences');",
									"    // tests[\"JSON response key 'ontologySourceReferences' not Null\"] = item.ontologySourceReferences;",
									"    tests[\"JSON response has key 'people'\"] = item.hasOwnProperty('people');",
									"    // tests[\"JSON response key 'people' not Null\"] = item.people;",
									"    tests[\"JSON response has key 'publicReleaseDate'\"] = item.hasOwnProperty('publicReleaseDate');",
									"    tests[\"JSON response key 'publicReleaseDate' not Null\"] = item.publicReleaseDate;",
									"    tests[\"JSON response has key 'publications'\"] = item.hasOwnProperty('publications');",
									"    tests[\"JSON response key 'publications' not Null\"] = item.publications;",
									"    tests[\"JSON response has key 'studies'\"] = item.hasOwnProperty('studies');",
									"    tests[\"JSON response key 'studies' not Null\"] = item.studies;",
									"    tests[\"JSON response has key 'submissionDate'\"] = item.hasOwnProperty('submissionDate');",
									"    tests[\"JSON response key 'submissionDate' not Null\"] = item.submissionDate;",
									"    tests[\"JSON response has key 'title'\"] = item.hasOwnProperty('title');",
									"    tests[\"JSON response key 'title' not Null\"] = item.title;",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "user_token",
								"value": "{{curator}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"New Study title...\",\n    \"description\": \"New Study descrition...\",\n    \"submissionDate\": \"2017-05-08\",\n    \"publicReleaseDate\": \"2018-05-08\"\n}\n"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "New Study - Null Req -> 400",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 400\"] = responseCode.code === 400;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
									"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "user_token",
								"value": "{{curator}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "New Study - NoAuth -> 403",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 403\"] = responseCode.code === 403;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
									"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "user_token",
								"value": "{{WrongAuth}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"New Study title...\",\n    \"description\": \"New Study descrition...\",\n    \"submissionDate\": \"2017-05-08\",\n    \"publicReleaseDate\": \"2018-05-08\"\n}\n"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "New Study - NoUser -> 401",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 401\"] = responseCode.code === 401;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
									"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"New Study title...\",\n    \"description\": \"New Study descrition...\",\n    \"submissionDate\": \"2017-05-08\",\n    \"publicReleaseDate\": \"2018-05-08\"\n}\n"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "New Study - Bad req -> 400",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 400\"] = responseCode.code === 400;",
									"",
									"// Header",
									"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
									"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
									"",
									"// Body",
									"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
									"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "user_token",
								"value": "{{curator}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"New Study title...\"\n}"
						},
						"url": {
							"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies",
							"host": [
								"{{ws-py-server}}{{ws-py-port}}"
							],
							"path": [
								"mtbls",
								"ws",
								"studies"
							]
						},
						"description": null
					},
					"response": []
				}
			]
		},
		{
			"name": "POST New Study Contact",
			"description": null,
			"item": [
				{
					"name": "Pub",
					"description": "",
					"item": [
						{
							"name": "0 - Delete Study Contact - Pub - Auth -> 200 Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a43a5457-0b4a-40ae-98b7-526a65878ce8",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Body has contact\"] = responseBody.has('\"contact\":');",
											"var jsonData = JSON.parse(responseBody);",
											"if (jsonData.contact) {",
											"    var item = jsonData.contact;",
											"    tests[\"JSON response has key 'firstName'\"] = item.hasOwnProperty('firstName');",
											"    tests[\"JSON response key 'firstName' not Null\"] = item.firstName;",
											"    tests[\"JSON response has key 'lastName'\"] = item.hasOwnProperty('lastName');",
											"    tests[\"JSON response key 'lastName' not Null\"] = item.lastName;",
											"    tests[\"JSON response has key 'email'\"] = item.hasOwnProperty('email');",
											"    tests[\"JSON response key 'email' not Null\"] = item.email;",
											"    tests[\"JSON response has key 'address'\"] = item.hasOwnProperty('address');",
											"    // tests[\"JSON response key 'address' not Null\"] = item.address;",
											"    if (item.roles.length > 0) {",
											"        var role = item.roles[0];",
											"        tests[\"JSON response has key 'role annotationValue'\"] = role.hasOwnProperty('annotationValue');",
											"        tests[\"JSON response key 'role annotationValue' not Null\"] = role.annotationValue !== null;",
											"    }",
											"}"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "16cd3cf1-7dc1-4c22-94bd-57995c04f5a5",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/contacts?email={{ContactID}}",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PubStudyId}}",
										"contacts"
									],
									"query": [
										{
											"key": "email",
											"value": "{{ContactID}}",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": [
								{
									"id": "2cf2da3b-450d-4df9-a2de-1ac2237404a4",
									"name": "Delete Study Contact - Pub - Auth -> 200",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"disabled": false
											},
											{
												"key": "user_token",
												"value": "{{curator}}",
												"disabled": false
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/contacts?email={{ContactID}}",
											"host": [
												"{{ws-py-server}}{{ws-py-port}}"
											],
											"path": [
												"mtbls",
												"ws",
												"studies",
												"{{PubStudyId}}",
												"contacts"
											],
											"query": [
												{
													"key": "email",
													"value": "{{ContactID}}",
													"equals": true
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "http://localhost.ebi.ac.uk:8080",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Content-Length",
											"value": "790",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Tue, 27 Feb 2018 15:31:42 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Server",
											"value": "Werkzeug/0.12.2 Python/3.5.4",
											"name": "Server",
											"description": "A name for the server"
										},
										{
											"key": "Vary",
											"value": "Origin",
											"name": "Vary",
											"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
										}
									],
									"cookie": [],
									"body": "{\n    \"contact\": {\n        \"firstName\": \"John\",\n        \"lastName\": \"Doe\",\n        \"email\": \"doej@a.mail.com\",\n        \"affiliation\": \"EMBL-EBI\",\n        \"comments\": [],\n        \"address\": \"Wellcome Genome Campus, Hinxton, Cambridgeshire, CB10 1SD, UK\",\n        \"fax\": \"012345678902\",\n        \"midInitials\": \"A\",\n        \"phone\": \"012345678901\",\n        \"roles\": [\n            {\n                \"annotationValue\": \"investigator\",\n                \"termSource\": null,\n                \"termAccession\": \"http://www.ebi.ac.uk/efo/EFO_0001739\",\n                \"comments\": []\n            },\n            {\n                \"annotationValue\": \"Bioinformatician\",\n                \"termSource\": null,\n                \"termAccession\": \"\",\n                \"comments\": []\n            }\n        ]\n    }\n}\n"
								},
								{
									"id": "751bd30c-90a7-40c8-9388-d27b49462ab7",
									"name": "Delete Study Contact - Pub - Auth -> 200",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"disabled": false
											},
											{
												"key": "user_token",
												"value": "{{curator}}",
												"disabled": false
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/contacts?email={{ContactID}}",
											"host": [
												"{{ws-py-server}}{{ws-py-port}}"
											],
											"path": [
												"mtbls",
												"ws",
												"studies",
												"{{PubStudyId}}",
												"contacts"
											],
											"query": [
												{
													"key": "email",
													"value": "{{ContactID}}",
													"equals": true
												}
											]
										}
									},
									"status": "NOT FOUND",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "http://localhost.ebi.ac.uk:8080",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Content-Length",
											"value": "366",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Tue, 27 Feb 2018 15:34:11 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Server",
											"value": "Werkzeug/0.12.2 Python/3.5.4",
											"name": "Server",
											"description": "A name for the server"
										},
										{
											"key": "Vary",
											"value": "Origin",
											"name": "Vary",
											"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
										}
									],
									"cookie": [],
									"body": "{\n    \"message\": \"The requested URL was not found on the server.  If you entered the URL manually please check your spelling and try again. You have requested this URI [/mtbls/ws/studies/MTBLS10/contacts] but did you mean /mtbls/ws/studies/<string:study_id>/contacts or /mtbls/ws/studies/<string:study_id>/contacts/ or /mtbls/ws/studies/<string:study_id>/title ?\"\n}\n"
								}
							]
						},
						{
							"name": "1 - New Study Contact - Pub - Auth - NewData -> 200",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "08f1a4e1-aae8-4890-ad8d-4eeff93e2a0c",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Body has contact\"] = responseBody.has('\"contact\":');",
											"var jsonData = JSON.parse(responseBody);",
											"if (jsonData.contact) {",
											"    var item = jsonData.contact;",
											"    tests[\"JSON response has key 'firstName'\"] = item.hasOwnProperty('firstName');",
											"    tests[\"JSON response key 'firstName' not Null\"] = item.firstName;",
											"    tests[\"JSON response has key 'lastName'\"] = item.hasOwnProperty('lastName');",
											"    tests[\"JSON response key 'lastName' not Null\"] = item.lastName;",
											"    tests[\"JSON response has key 'email'\"] = item.hasOwnProperty('email');",
											"    tests[\"JSON response key 'email' not Null\"] = item.email;",
											"    tests[\"JSON response has key 'address'\"] = item.hasOwnProperty('address');",
											"    // tests[\"JSON response key 'address' not Null\"] = item.address;",
											"    if (item.roles.length > 0) {",
											"        var role = item.roles[0];",
											"        tests[\"JSON response has key 'role annotationValue'\"] = role.hasOwnProperty('annotationValue');",
											"        tests[\"JSON response key 'role annotationValue' not Null\"] = role.annotationValue !== null;",
											"    }",
											"}"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"contact\": {\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\",\n    \"email\": \"doej@a.mail.com\",\n    \"affiliation\": \"EMBL-EBI\",\n    \"comments\": [],\n    \"address\": \"Wellcome Genome Campus, Hinxton, Cambridgeshire, CB10 1SD, UK\",\n    \"fax\": \"012345678902\",\n    \"midInitials\": \"A\",\n    \"phone\": \"012345678901\",\n    \"roles\": [\n      {\n        \"annotationValue\": \"investigator\",\n        \"termSource\": null,\n        \"termAccession\": \"http://www.ebi.ac.uk/efo/EFO_0001739\",\n        \"comments\": []\n      },\n      {\n        \"annotationValue\": \"Bioinformatician\",\n        \"termSource\": null,\n        \"termAccession\": \"\",\n        \"comments\": []\n      }\n    ]\n  }\n}\n"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/contacts",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PubStudyId}}",
										"contacts"
									]
								},
								"description": null
							},
							"response": [
								{
									"id": "e4440fe2-ddf8-4112-ab63-d85e3ac5b69e",
									"name": "New Study Contact - Pub - Auth - NewData -> 200",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"disabled": false
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": false
											},
											{
												"key": "user_token",
												"value": "{{curator}}",
												"disabled": false
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"contact\": {\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\",\n    \"email\": \"doej@a.mail.com\",\n    \"affiliation\": \"EMBL-EBI\",\n    \"comments\": [],\n    \"address\": \"Wellcome Genome Campus, Hinxton, Cambridgeshire, CB10 1SD, UK\",\n    \"fax\": \"012345678902\",\n    \"midInitials\": \"A\",\n    \"phone\": \"012345678901\",\n    \"roles\": [\n      {\n        \"annotationValue\": \"investigator\",\n        \"termSource\": null,\n        \"termAccession\": \"http://www.ebi.ac.uk/efo/EFO_0001739\",\n        \"comments\": []\n      },\n      {\n        \"annotationValue\": \"Bioinformatician\",\n        \"termSource\": null,\n        \"termAccession\": \"\",\n        \"comments\": []\n      }\n    ]\n  }\n}\n"
										},
										"url": {
											"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/contacts",
											"host": [
												"{{ws-py-server}}{{ws-py-port}}"
											],
											"path": [
												"mtbls",
												"ws",
												"studies",
												"{{PubStudyId}}",
												"contacts"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "http://localhost.ebi.ac.uk:8080",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Content-Length",
											"value": "790",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Tue, 27 Feb 2018 14:46:35 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Server",
											"value": "Werkzeug/0.12.2 Python/3.5.4",
											"name": "Server",
											"description": "A name for the server"
										},
										{
											"key": "Vary",
											"value": "Origin",
											"name": "Vary",
											"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
										}
									],
									"cookie": [],
									"body": "{\n    \"contact\": {\n        \"firstName\": \"John\",\n        \"lastName\": \"Doe\",\n        \"email\": \"doej@a.mail.com\",\n        \"affiliation\": \"EMBL-EBI\",\n        \"comments\": [],\n        \"address\": \"Wellcome Genome Campus, Hinxton, Cambridgeshire, CB10 1SD, UK\",\n        \"fax\": \"012345678902\",\n        \"midInitials\": \"A\",\n        \"phone\": \"012345678901\",\n        \"roles\": [\n            {\n                \"annotationValue\": \"investigator\",\n                \"termSource\": null,\n                \"termAccession\": \"http://www.ebi.ac.uk/efo/EFO_0001739\",\n                \"comments\": []\n            },\n            {\n                \"annotationValue\": \"Bioinformatician\",\n                \"termSource\": null,\n                \"termAccession\": \"\",\n                \"comments\": []\n            }\n        ]\n    }\n}\n"
								}
							]
						},
						{
							"name": "2 - New Study Contact - Pub - Auth - ExistingContact -> 409",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3aac8ceb-9177-4f52-8215-4475788007d6",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 409\"] = responseCode.code === 409;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain contacts\"] = !(responseBody.has('\"contacts\":'));",
											"tests[\"Body does NOT contain contact\"] = !(responseBody.has('\"contact\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"contact\": {\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\",\n    \"email\": \"doej@a.mail.com\",\n    \"affiliation\": \"EMBL-EBI\",\n    \"comments\": [],\n    \"address\": \"Wellcome Genome Campus, Hinxton, Cambridgeshire, CB10 1SD, UK\",\n    \"fax\": \"012345678902\",\n    \"midInitials\": \"A\",\n    \"phone\": \"012345678901\",\n    \"roles\": [\n      {\n        \"annotationValue\": \"investigator\",\n        \"termSource\": null,\n        \"termAccession\": \"http://www.ebi.ac.uk/efo/EFO_0001739\",\n        \"comments\": []\n      },\n      {\n        \"annotationValue\": \"Bioinformatician\",\n        \"termSource\": null,\n        \"termAccession\": \"\",\n        \"comments\": []\n      }\n    ]\n  }\n}\n"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/contacts",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PubStudyId}}",
										"contacts"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "3 - New Study Contact - Pub - Auth - NoData -> 400",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1ebae951-966b-4d5f-8632-4b7ffcd00276",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain contacts\"] = !(responseBody.has('\"contacts\":'));",
											"tests[\"Body does NOT contain contact\"] = !(responseBody.has('\"contact\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "None"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/contacts",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PubStudyId}}",
										"contacts"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "4 - New Study Contact - Pub - Auth - MissingRequiredData -> 400",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8594898d-4b1e-41e7-bf33-98e0b0abb49c",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain contacts\"] = !(responseBody.has('\"contacts\":'));",
											"tests[\"Body does NOT contain contact\"] = !(responseBody.has('\"contact\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"contact\": {\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\",\n    \"affiliation\": \"EMBL-EBI\",\n    \"comments\": [],\n    \"address\": \"Wellcome Genome Campus, Hinxton, Cambridgeshire, CB10 1SD, UK\",\n    \"fax\": \"012345678902\",\n    \"midInitials\": \"A\",\n    \"phone\": \"012345678901\",\n    \"roles\": [\n      {\n        \"annotationValue\": \"investigator\",\n        \"termSource\": null,\n        \"termAccession\": \"http://www.ebi.ac.uk/efo/EFO_0001739\",\n        \"comments\": []\n      },\n      {\n        \"annotationValue\": \"Bioinformatician\",\n        \"termSource\": null,\n        \"termAccession\": \"\",\n        \"comments\": []\n      }\n    ]\n  }\n}\n"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/contacts",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PubStudyId}}",
										"contacts"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "5 - New Study Contact - Pub - Auth - ExtraQueryParams -> 400",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "aac42852-f0a5-486a-a562-8e774ccb226b",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain contacts\"] = !(responseBody.has('\"contacts\":'));",
											"tests[\"Body does NOT contain contact\"] = !(responseBody.has('\"contact\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"contact\": {\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\",\n    \"email\": \"doej@a.mail.com\",\n    \"affiliation\": \"EMBL-EBI\",\n    \"comments\": [],\n    \"address\": \"Wellcome Genome Campus, Hinxton, Cambridgeshire, CB10 1SD, UK\",\n    \"fax\": \"012345678902\",\n    \"midInitials\": \"A\",\n    \"phone\": \"012345678901\",\n    \"roles\": [\n      {\n        \"annotationValue\": \"investigator\",\n        \"termSource\": null,\n        \"termAccession\": \"http://www.ebi.ac.uk/efo/EFO_0001739\",\n        \"comments\": []\n      },\n      {\n        \"annotationValue\": \"Bioinformatician\",\n        \"termSource\": null,\n        \"termAccession\": \"\",\n        \"comments\": []\n      }\n    ]\n  }\n}\n"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/contacts?email={{ContactID}}",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PubStudyId}}",
										"contacts"
									],
									"query": [
										{
											"key": "email",
											"value": "{{ContactID}}",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "6 - New Study Contact - Pub - NoToken -> 401",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "95b45da1-610a-4394-a8df-406c66650f3e",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 401\"] = responseCode.code === 401;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain contacts\"] = !(responseBody.has('\"contacts\":'));",
											"tests[\"Body does NOT contain contact\"] = !(responseBody.has('\"contact\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"contact\": {\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\",\n    \"email\": \"doej@a.mail.com\",\n    \"affiliation\": \"EMBL-EBI\",\n    \"comments\": [],\n    \"address\": \"Wellcome Genome Campus, Hinxton, Cambridgeshire, CB10 1SD, UK\",\n    \"fax\": \"012345678902\",\n    \"midInitials\": \"A\",\n    \"phone\": \"012345678901\",\n    \"roles\": [\n      {\n        \"annotationValue\": \"investigator\",\n        \"termSource\": null,\n        \"termAccession\": \"http://www.ebi.ac.uk/efo/EFO_0001739\",\n        \"comments\": []\n      },\n      {\n        \"annotationValue\": \"Bioinformatician\",\n        \"termSource\": null,\n        \"termAccession\": \"\",\n        \"comments\": []\n      }\n    ]\n  }\n}\n"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/contacts",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PubStudyId}}",
										"contacts"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "7 - New Study Contact - Pub - NoAuth -> 403",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6fbccea7-78ea-4363-8fd2-e125ee6207aa",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 403\"] = responseCode.code === 403;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain contacts\"] = !(responseBody.has('\"contacts\":'));",
											"tests[\"Body does NOT contain contact\"] = !(responseBody.has('\"contact\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{WrongAuth}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"contact\": {\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\",\n    \"email\": \"doej@a.mail.com\",\n    \"affiliation\": \"EMBL-EBI\",\n    \"comments\": [],\n    \"address\": \"Wellcome Genome Campus, Hinxton, Cambridgeshire, CB10 1SD, UK\",\n    \"fax\": \"012345678902\",\n    \"midInitials\": \"A\",\n    \"phone\": \"012345678901\",\n    \"roles\": [\n      {\n        \"annotationValue\": \"investigator\",\n        \"termSource\": null,\n        \"termAccession\": \"http://www.ebi.ac.uk/efo/EFO_0001739\",\n        \"comments\": []\n      },\n      {\n        \"annotationValue\": \"Bioinformatician\",\n        \"termSource\": null,\n        \"termAccession\": \"\",\n        \"comments\": []\n      }\n    ]\n  }\n}\n"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/contacts",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PubStudyId}}",
										"contacts"
									]
								},
								"description": null
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Priv",
					"description": "",
					"item": [
						{
							"name": "10 - Delete Study Contact - Priv - Auth -> 200 Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a43a5457-0b4a-40ae-98b7-526a65878ce8",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Body has contact\"] = responseBody.has('\"contact\":');",
											"var jsonData = JSON.parse(responseBody);",
											"if (jsonData.contact) {",
											"    var item = jsonData.contact;",
											"    tests[\"JSON response has key 'firstName'\"] = item.hasOwnProperty('firstName');",
											"    tests[\"JSON response key 'firstName' not Null\"] = item.firstName;",
											"    tests[\"JSON response has key 'lastName'\"] = item.hasOwnProperty('lastName');",
											"    tests[\"JSON response key 'lastName' not Null\"] = item.lastName;",
											"    tests[\"JSON response has key 'email'\"] = item.hasOwnProperty('email');",
											"    tests[\"JSON response key 'email' not Null\"] = item.email;",
											"    tests[\"JSON response has key 'address'\"] = item.hasOwnProperty('address');",
											"    // tests[\"JSON response key 'address' not Null\"] = item.address;",
											"    if (item.roles.length > 0) {",
											"        var role = item.roles[0];",
											"        tests[\"JSON response has key 'role annotationValue'\"] = role.hasOwnProperty('annotationValue');",
											"        tests[\"JSON response key 'role annotationValue' not Null\"] = role.annotationValue !== null;",
											"    }",
											"}"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "16cd3cf1-7dc1-4c22-94bd-57995c04f5a5",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/contacts?email={{ContactID}}",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PrivStudyId}}",
										"contacts"
									],
									"query": [
										{
											"key": "email",
											"value": "{{ContactID}}",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": [
								{
									"id": "89038044-6b7f-4afb-8c34-9886f09aa46c",
									"name": "Delete Study Contact - Pub - Auth -> 200",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"disabled": false
											},
											{
												"key": "user_token",
												"value": "{{curator}}",
												"disabled": false
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/contacts?email={{ContactID}}",
											"host": [
												"{{ws-py-server}}{{ws-py-port}}"
											],
											"path": [
												"mtbls",
												"ws",
												"studies",
												"{{PubStudyId}}",
												"contacts"
											],
											"query": [
												{
													"key": "email",
													"value": "{{ContactID}}",
													"equals": true
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "http://localhost.ebi.ac.uk:8080",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Content-Length",
											"value": "790",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Tue, 27 Feb 2018 15:31:42 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Server",
											"value": "Werkzeug/0.12.2 Python/3.5.4",
											"name": "Server",
											"description": "A name for the server"
										},
										{
											"key": "Vary",
											"value": "Origin",
											"name": "Vary",
											"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
										}
									],
									"cookie": [],
									"body": "{\n    \"contact\": {\n        \"firstName\": \"John\",\n        \"lastName\": \"Doe\",\n        \"email\": \"doej@a.mail.com\",\n        \"affiliation\": \"EMBL-EBI\",\n        \"comments\": [],\n        \"address\": \"Wellcome Genome Campus, Hinxton, Cambridgeshire, CB10 1SD, UK\",\n        \"fax\": \"012345678902\",\n        \"midInitials\": \"A\",\n        \"phone\": \"012345678901\",\n        \"roles\": [\n            {\n                \"annotationValue\": \"investigator\",\n                \"termSource\": null,\n                \"termAccession\": \"http://www.ebi.ac.uk/efo/EFO_0001739\",\n                \"comments\": []\n            },\n            {\n                \"annotationValue\": \"Bioinformatician\",\n                \"termSource\": null,\n                \"termAccession\": \"\",\n                \"comments\": []\n            }\n        ]\n    }\n}\n"
								},
								{
									"id": "27b5426f-7334-4d40-b500-69fea4262d13",
									"name": "Delete Study Contact - Pub - Auth -> 200",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"disabled": false
											},
											{
												"key": "user_token",
												"value": "{{curator}}",
												"disabled": false
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/contacts?email={{ContactID}}",
											"host": [
												"{{ws-py-server}}{{ws-py-port}}"
											],
											"path": [
												"mtbls",
												"ws",
												"studies",
												"{{PubStudyId}}",
												"contacts"
											],
											"query": [
												{
													"key": "email",
													"value": "{{ContactID}}",
													"equals": true
												}
											]
										}
									},
									"status": "NOT FOUND",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "http://localhost.ebi.ac.uk:8080",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Content-Length",
											"value": "366",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Tue, 27 Feb 2018 15:34:11 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Server",
											"value": "Werkzeug/0.12.2 Python/3.5.4",
											"name": "Server",
											"description": "A name for the server"
										},
										{
											"key": "Vary",
											"value": "Origin",
											"name": "Vary",
											"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
										}
									],
									"cookie": [],
									"body": "{\n    \"message\": \"The requested URL was not found on the server.  If you entered the URL manually please check your spelling and try again. You have requested this URI [/mtbls/ws/studies/MTBLS10/contacts] but did you mean /mtbls/ws/studies/<string:study_id>/contacts or /mtbls/ws/studies/<string:study_id>/contacts/ or /mtbls/ws/studies/<string:study_id>/title ?\"\n}\n"
								}
							]
						},
						{
							"name": "11 - New Study Contact - Priv - Auth - NewData -> 200",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "97b20122-da5c-4b63-b501-0e9f3ab15eb3",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Body has contact\"] = responseBody.has('\"contact\":');",
											"var jsonData = JSON.parse(responseBody);",
											"if (jsonData.contact) {",
											"    var item = jsonData.contact;",
											"    tests[\"JSON response has key 'firstName'\"] = item.hasOwnProperty('firstName');",
											"    tests[\"JSON response key 'firstName' not Null\"] = item.firstName;",
											"    tests[\"JSON response has key 'lastName'\"] = item.hasOwnProperty('lastName');",
											"    tests[\"JSON response key 'lastName' not Null\"] = item.lastName;",
											"    tests[\"JSON response has key 'email'\"] = item.hasOwnProperty('email');",
											"    tests[\"JSON response key 'email' not Null\"] = item.email;",
											"    tests[\"JSON response has key 'address'\"] = item.hasOwnProperty('address');",
											"    // tests[\"JSON response key 'address' not Null\"] = item.address;",
											"    if (item.roles.length > 0) {",
											"        var role = item.roles[0];",
											"        tests[\"JSON response has key 'role annotationValue'\"] = role.hasOwnProperty('annotationValue');",
											"        tests[\"JSON response key 'role annotationValue' not Null\"] = role.annotationValue !== null;",
											"    }",
											"}"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"contact\": {\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\",\n    \"email\": \"doej@a.mail.com\",\n    \"affiliation\": \"EMBL-EBI\",\n    \"comments\": [],\n    \"address\": \"Wellcome Genome Campus, Hinxton, Cambridgeshire, CB10 1SD, UK\",\n    \"fax\": \"012345678902\",\n    \"midInitials\": \"A\",\n    \"phone\": \"012345678901\",\n    \"roles\": [\n      {\n        \"annotationValue\": \"investigator\",\n        \"termSource\": null,\n        \"termAccession\": \"http://www.ebi.ac.uk/efo/EFO_0001739\",\n        \"comments\": []\n      },\n      {\n        \"annotationValue\": \"Bioinformatician\",\n        \"termSource\": null,\n        \"termAccession\": \"\",\n        \"comments\": []\n      }\n    ]\n  }\n}\n"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/contacts",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PrivStudyId}}",
										"contacts"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "12 - New Study Contact - Priv - Auth - ExistingContact -> 409",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3aac8ceb-9177-4f52-8215-4475788007d6",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 409\"] = responseCode.code === 409;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain contacts\"] = !(responseBody.has('\"contacts\":'));",
											"tests[\"Body does NOT contain contact\"] = !(responseBody.has('\"contact\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"contact\": {\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\",\n    \"email\": \"doej@a.mail.com\",\n    \"affiliation\": \"EMBL-EBI\",\n    \"comments\": [],\n    \"address\": \"Wellcome Genome Campus, Hinxton, Cambridgeshire, CB10 1SD, UK\",\n    \"fax\": \"012345678902\",\n    \"midInitials\": \"A\",\n    \"phone\": \"012345678901\",\n    \"roles\": [\n      {\n        \"annotationValue\": \"investigator\",\n        \"termSource\": null,\n        \"termAccession\": \"http://www.ebi.ac.uk/efo/EFO_0001739\",\n        \"comments\": []\n      },\n      {\n        \"annotationValue\": \"Bioinformatician\",\n        \"termSource\": null,\n        \"termAccession\": \"\",\n        \"comments\": []\n      }\n    ]\n  }\n}\n"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/contacts",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PrivStudyId}}",
										"contacts"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "13 - New Study Contact - Priv - Auth - NoData -> 400",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3f5c80b2-a923-44f8-8563-8fa0baba5c33",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain contacts\"] = !(responseBody.has('\"contacts\":'));",
											"tests[\"Body does NOT contain contact\"] = !(responseBody.has('\"contact\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "None"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/contacts",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PrivStudyId}}",
										"contacts"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "14 - New Study Contact - Priv - Auth - MissingRequiredData -> 400",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3f5c80b2-a923-44f8-8563-8fa0baba5c33",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain contacts\"] = !(responseBody.has('\"contacts\":'));",
											"tests[\"Body does NOT contain contact\"] = !(responseBody.has('\"contact\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"contact\": {\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\",\n    \"affiliation\": \"EMBL-EBI\",\n    \"comments\": [],\n    \"address\": \"Wellcome Genome Campus, Hinxton, Cambridgeshire, CB10 1SD, UK\",\n    \"fax\": \"012345678902\",\n    \"midInitials\": \"A\",\n    \"phone\": \"012345678901\",\n    \"roles\": [\n      {\n        \"annotationValue\": \"investigator\",\n        \"termSource\": null,\n        \"termAccession\": \"http://www.ebi.ac.uk/efo/EFO_0001739\",\n        \"comments\": []\n      },\n      {\n        \"annotationValue\": \"Bioinformatician\",\n        \"termSource\": null,\n        \"termAccession\": \"\",\n        \"comments\": []\n      }\n    ]\n  }\n}\n"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/contacts",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PrivStudyId}}",
										"contacts"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "15 - New Study Contact - Priv - Auth - ExtraQueryParams -> 400",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "aac42852-f0a5-486a-a562-8e774ccb226b",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain contacts\"] = !(responseBody.has('\"contacts\":'));",
											"tests[\"Body does NOT contain contact\"] = !(responseBody.has('\"contact\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"contact\": {\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\",\n    \"email\": \"doej@a.mail.com\",\n    \"affiliation\": \"EMBL-EBI\",\n    \"comments\": [],\n    \"address\": \"Wellcome Genome Campus, Hinxton, Cambridgeshire, CB10 1SD, UK\",\n    \"fax\": \"012345678902\",\n    \"midInitials\": \"A\",\n    \"phone\": \"012345678901\",\n    \"roles\": [\n      {\n        \"annotationValue\": \"investigator\",\n        \"termSource\": null,\n        \"termAccession\": \"http://www.ebi.ac.uk/efo/EFO_0001739\",\n        \"comments\": []\n      },\n      {\n        \"annotationValue\": \"Bioinformatician\",\n        \"termSource\": null,\n        \"termAccession\": \"\",\n        \"comments\": []\n      }\n    ]\n  }\n}\n"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/contacts?email={{ContactID}}",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PrivStudyId}}",
										"contacts"
									],
									"query": [
										{
											"key": "email",
											"value": "{{ContactID}}",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "16 - New Study Contact - Priv - NoToken -> 401",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "58852c1f-0e76-42bd-8fb0-fbf9441e97c6",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 401\"] = responseCode.code === 401;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain contacts\"] = !(responseBody.has('\"contacts\":'));",
											"tests[\"Body does NOT contain contact\"] = !(responseBody.has('\"contact\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"contact\": {\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\",\n    \"email\": \"doej@a.mail.com\",\n    \"affiliation\": \"EMBL-EBI\",\n    \"comments\": [],\n    \"address\": \"Wellcome Genome Campus, Hinxton, Cambridgeshire, CB10 1SD, UK\",\n    \"fax\": \"012345678902\",\n    \"midInitials\": \"A\",\n    \"phone\": \"012345678901\",\n    \"roles\": [\n      {\n        \"annotationValue\": \"investigator\",\n        \"termSource\": null,\n        \"termAccession\": \"http://www.ebi.ac.uk/efo/EFO_0001739\",\n        \"comments\": []\n      },\n      {\n        \"annotationValue\": \"Bioinformatician\",\n        \"termSource\": null,\n        \"termAccession\": \"\",\n        \"comments\": []\n      }\n    ]\n  }\n}\n"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/contacts",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PrivStudyId}}",
										"contacts"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "17 - New Study Contact - Priv - NoAuth -> 403",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4b7ad100-de1c-4a71-bd5a-35f5445cfc8b",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 403\"] = responseCode.code === 403;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain contacts\"] = !(responseBody.has('\"contacts\":'));",
											"tests[\"Body does NOT contain contact\"] = !(responseBody.has('\"contact\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{WrongAuth}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"contact\": {\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\",\n    \"email\": \"doej@a.mail.com\",\n    \"affiliation\": \"EMBL-EBI\",\n    \"comments\": [],\n    \"address\": \"Wellcome Genome Campus, Hinxton, Cambridgeshire, CB10 1SD, UK\",\n    \"fax\": \"012345678902\",\n    \"midInitials\": \"A\",\n    \"phone\": \"012345678901\",\n    \"roles\": [\n      {\n        \"annotationValue\": \"investigator\",\n        \"termSource\": null,\n        \"termAccession\": \"http://www.ebi.ac.uk/efo/EFO_0001739\",\n        \"comments\": []\n      },\n      {\n        \"annotationValue\": \"Bioinformatician\",\n        \"termSource\": null,\n        \"termAccession\": \"\",\n        \"comments\": []\n      }\n    ]\n  }\n}\n"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/contacts",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PrivStudyId}}",
										"contacts"
									]
								},
								"description": null
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				}
			]
		},
		{
			"name": "POST New Study Protocol",
			"description": null,
			"item": [
				{
					"name": "Pub",
					"description": "",
					"item": [
						{
							"name": "0 - Delete Study Protocol - Pub - Auth -> 200 Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1dfccd40-d436-4a54-a12a-2843f0e3e458",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Body has protocol\"] = responseBody.has('\"protocol\":');",
											"var jsonData = JSON.parse(responseBody);",
											"if (jsonData.protocol) {",
											"    var item = jsonData.protocol",
											"    tests[\"JSON response has key 'name'\"] = item.hasOwnProperty('name');",
											"    tests[\"JSON response key 'name' not Null\"] = item.name;",
											"    tests[\"JSON response has key 'description'\"] = item.hasOwnProperty('description');",
											"    tests[\"JSON response key 'description' not Null\"] = item.description;",
											"    tests[\"JSON response has key 'protocolType'\"] = item.hasOwnProperty('protocolType');",
											"    tests[\"JSON response key 'protocolType' not Null\"] = item.protocolType;",
											"    tests[\"JSON response has key 'components'\"] = item.hasOwnProperty('components');",
											"    tests[\"JSON response key 'components' not Null\"] = item.components;",
											"    tests[\"JSON response has key 'parameters'\"] = item.hasOwnProperty('parameters');",
											"    tests[\"JSON response key 'parameters' not Null\"] = item.parameters;",
											"    tests[\"JSON response has key 'uri'\"] = item.hasOwnProperty('uri');",
											"    // tests[\"JSON response key 'uri' not Null\"] = item.uri;",
											"    tests[\"JSON response has key 'version'\"] = item.hasOwnProperty('version');",
											"    tests[\"JSON response key 'version' not Null\"] = item.version;",
											"    tests[\"JSON response has key 'comments'\"] = item.hasOwnProperty('comments');",
											"    tests[\"JSON response key 'comments' not Null\"] = item.comments;",
											"}",
											""
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "16cd3cf1-7dc1-4c22-94bd-57995c04f5a5",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/protocols?name={{ValidProtocolId}}",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PubStudyId}}",
										"protocols"
									],
									"query": [
										{
											"key": "name",
											"value": "{{ValidProtocolId}}",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": [
								{
									"id": "1377834b-1ad2-41a5-b5af-ed37fbce3178",
									"name": "Delete Study Contact - Pub - Auth -> 200",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"disabled": false
											},
											{
												"key": "user_token",
												"value": "{{curator}}",
												"disabled": false
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/contacts?email={{ContactID}}",
											"host": [
												"{{ws-py-server}}{{ws-py-port}}"
											],
											"path": [
												"mtbls",
												"ws",
												"studies",
												"{{PubStudyId}}",
												"contacts"
											],
											"query": [
												{
													"key": "email",
													"value": "{{ContactID}}",
													"equals": true
												}
											]
										}
									},
									"status": "NOT FOUND",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "http://localhost.ebi.ac.uk:8080",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Content-Length",
											"value": "366",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Tue, 27 Feb 2018 15:34:11 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Server",
											"value": "Werkzeug/0.12.2 Python/3.5.4",
											"name": "Server",
											"description": "A name for the server"
										},
										{
											"key": "Vary",
											"value": "Origin",
											"name": "Vary",
											"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
										}
									],
									"cookie": [],
									"body": "{\n    \"message\": \"The requested URL was not found on the server.  If you entered the URL manually please check your spelling and try again. You have requested this URI [/mtbls/ws/studies/MTBLS10/contacts] but did you mean /mtbls/ws/studies/<string:study_id>/contacts or /mtbls/ws/studies/<string:study_id>/contacts/ or /mtbls/ws/studies/<string:study_id>/title ?\"\n}\n"
								},
								{
									"id": "5a1e8fce-6385-4513-a8d8-56a04782c645",
									"name": "Delete Study Contact - Pub - Auth -> 200",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"disabled": false
											},
											{
												"key": "user_token",
												"value": "{{curator}}",
												"disabled": false
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/contacts?email={{ContactID}}",
											"host": [
												"{{ws-py-server}}{{ws-py-port}}"
											],
											"path": [
												"mtbls",
												"ws",
												"studies",
												"{{PubStudyId}}",
												"contacts"
											],
											"query": [
												{
													"key": "email",
													"value": "{{ContactID}}",
													"equals": true
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "http://localhost.ebi.ac.uk:8080",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Content-Length",
											"value": "790",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Tue, 27 Feb 2018 15:31:42 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Server",
											"value": "Werkzeug/0.12.2 Python/3.5.4",
											"name": "Server",
											"description": "A name for the server"
										},
										{
											"key": "Vary",
											"value": "Origin",
											"name": "Vary",
											"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
										}
									],
									"cookie": [],
									"body": "{\n    \"contact\": {\n        \"firstName\": \"John\",\n        \"lastName\": \"Doe\",\n        \"email\": \"doej@a.mail.com\",\n        \"affiliation\": \"EMBL-EBI\",\n        \"comments\": [],\n        \"address\": \"Wellcome Genome Campus, Hinxton, Cambridgeshire, CB10 1SD, UK\",\n        \"fax\": \"012345678902\",\n        \"midInitials\": \"A\",\n        \"phone\": \"012345678901\",\n        \"roles\": [\n            {\n                \"annotationValue\": \"investigator\",\n                \"termSource\": null,\n                \"termAccession\": \"http://www.ebi.ac.uk/efo/EFO_0001739\",\n                \"comments\": []\n            },\n            {\n                \"annotationValue\": \"Bioinformatician\",\n                \"termSource\": null,\n                \"termAccession\": \"\",\n                \"comments\": []\n            }\n        ]\n    }\n}\n"
								}
							]
						},
						{
							"name": "1 - New Study Protocol - Pub - Auth - NewData -> 200",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4a2b2215-8548-457b-90e1-5b7082b0ece2",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Body has protocol\"] = responseBody.has('\"protocol\":');",
											"var jsonData = JSON.parse(responseBody);",
											"if (jsonData.protocol) {",
											"    var item = jsonData.protocol",
											"    tests[\"JSON response has key 'name'\"] = item.hasOwnProperty('name');",
											"    tests[\"JSON response key 'name' not Null\"] = item.name;",
											"    tests[\"JSON response has key 'description'\"] = item.hasOwnProperty('description');",
											"    tests[\"JSON response key 'description' not Null\"] = item.description;",
											"    tests[\"JSON response has key 'protocolType'\"] = item.hasOwnProperty('protocolType');",
											"    tests[\"JSON response key 'protocolType' not Null\"] = item.protocolType;",
											"    tests[\"JSON response has key 'components'\"] = item.hasOwnProperty('components');",
											"    tests[\"JSON response key 'components' not Null\"] = item.components;",
											"    tests[\"JSON response has key 'parameters'\"] = item.hasOwnProperty('parameters');",
											"    tests[\"JSON response key 'parameters' not Null\"] = item.parameters;",
											"    tests[\"JSON response has key 'uri'\"] = item.hasOwnProperty('uri');",
											"    // tests[\"JSON response key 'uri' not Null\"] = item.uri;",
											"    tests[\"JSON response has key 'version'\"] = item.hasOwnProperty('version');",
											"    tests[\"JSON response key 'version' not Null\"] = item.version;",
											"    tests[\"JSON response has key 'comments'\"] = item.hasOwnProperty('comments');",
											"    tests[\"JSON response key 'comments' not Null\"] = item.comments;",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"protocol\": {\n      \"comments\": [\n      \t{\n      \t  \"name\": \"Updated\",\n      \t  \"value\": \"Updated with MtblsWs-Py\"\n      \t}\n      ],\n      \"components\": [],\n      \"description\": \"Test-Protocol description.\",\n      \"name\": \"Test-Protocol-Name\",\n      \"parameters\": [\n        {\n          \"comments\": [],\n          \"parameterName\": {\n            \"comments\": [],\n            \"annotationValue\": \"Test-Protocol-Parameter-Name\",\n            \"termAccession\": \"\",\n            \"termSource\": null\n          }        }\n      ],\n      \"protocolType\": {\n        \"comments\": [],\n        \"annotationValue\": \"Test-Protocol-Type\",\n        \"termAccession\": \"\",\n        \"termSource\": null\n      },\n      \"uri\": \"\",\n      \"version\": \"0.1\"\n    }\n}\n"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/protocols",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PubStudyId}}",
										"protocols"
									]
								},
								"description": null
							},
							"response": [
								{
									"id": "b7ff6530-92ad-4c9a-b43a-3aca6f4b5f39",
									"name": "New Study Contact - Pub - Auth - NewData -> 200",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"disabled": false
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": false
											},
											{
												"key": "user_token",
												"value": "{{curator}}",
												"disabled": false
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"contact\": {\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\",\n    \"email\": \"doej@a.mail.com\",\n    \"affiliation\": \"EMBL-EBI\",\n    \"comments\": [],\n    \"address\": \"Wellcome Genome Campus, Hinxton, Cambridgeshire, CB10 1SD, UK\",\n    \"fax\": \"012345678902\",\n    \"midInitials\": \"A\",\n    \"phone\": \"012345678901\",\n    \"roles\": [\n      {\n        \"annotationValue\": \"investigator\",\n        \"termSource\": null,\n        \"termAccession\": \"http://www.ebi.ac.uk/efo/EFO_0001739\",\n        \"comments\": []\n      },\n      {\n        \"annotationValue\": \"Bioinformatician\",\n        \"termSource\": null,\n        \"termAccession\": \"\",\n        \"comments\": []\n      }\n    ]\n  }\n}\n"
										},
										"url": {
											"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/contacts",
											"host": [
												"{{ws-py-server}}{{ws-py-port}}"
											],
											"path": [
												"mtbls",
												"ws",
												"studies",
												"{{PubStudyId}}",
												"contacts"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "http://localhost.ebi.ac.uk:8080",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Content-Length",
											"value": "790",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Tue, 27 Feb 2018 14:46:35 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Server",
											"value": "Werkzeug/0.12.2 Python/3.5.4",
											"name": "Server",
											"description": "A name for the server"
										},
										{
											"key": "Vary",
											"value": "Origin",
											"name": "Vary",
											"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
										}
									],
									"cookie": [],
									"body": "{\n    \"contact\": {\n        \"firstName\": \"John\",\n        \"lastName\": \"Doe\",\n        \"email\": \"doej@a.mail.com\",\n        \"affiliation\": \"EMBL-EBI\",\n        \"comments\": [],\n        \"address\": \"Wellcome Genome Campus, Hinxton, Cambridgeshire, CB10 1SD, UK\",\n        \"fax\": \"012345678902\",\n        \"midInitials\": \"A\",\n        \"phone\": \"012345678901\",\n        \"roles\": [\n            {\n                \"annotationValue\": \"investigator\",\n                \"termSource\": null,\n                \"termAccession\": \"http://www.ebi.ac.uk/efo/EFO_0001739\",\n                \"comments\": []\n            },\n            {\n                \"annotationValue\": \"Bioinformatician\",\n                \"termSource\": null,\n                \"termAccession\": \"\",\n                \"comments\": []\n            }\n        ]\n    }\n}\n"
								}
							]
						},
						{
							"name": "2 - New Study Protocol - Pub - Auth - ExistingContact -> 409",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "35939d62-8591-4463-b35b-c933a82969eb",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 409\"] = responseCode.code === 409;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain protocols\"] = !(responseBody.has('\"protocols\":'));",
											"tests[\"Body does NOT contain protocol\"] = !(responseBody.has('\"protocol\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"protocol\": {\n      \"comments\": [\n      \t{\n      \t  \"name\": \"Updated\",\n      \t  \"value\": \"Updated with MtblsWs-Py\"\n      \t}\n      ],\n      \"components\": [],\n      \"description\": \"Test-Protocol description.\",\n      \"name\": \"Test-Protocol-Name\",\n      \"parameters\": [\n        {\n          \"comments\": [],\n          \"parameterName\": {\n            \"comments\": [],\n            \"annotationValue\": \"Test-Protocol-Parameter-Name\",\n            \"termAccession\": \"\",\n            \"termSource\": null\n          }        }\n      ],\n      \"protocolType\": {\n        \"comments\": [],\n        \"annotationValue\": \"Test-Protocol-Type\",\n        \"termAccession\": \"\",\n        \"termSource\": null\n      },\n      \"uri\": \"\",\n      \"version\": \"0.1\"\n    }\n}\n"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/protocols",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PubStudyId}}",
										"protocols"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "3 - New Study Protocol - Pub - Auth - NoData -> 400",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0f88cd5c-8b60-4df7-a5d3-46eef2c4dec4",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain protocols\"] = !(responseBody.has('\"protocols\":'));",
											"tests[\"Body does NOT contain protocol\"] = !(responseBody.has('\"protocol\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "None"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/protocols",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PubStudyId}}",
										"protocols"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "4 - New Study Protocol - Pub - Auth - MissingRequiredData -> 400",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4b42b9cc-df24-487c-b42e-45f82463c926",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain protocols\"] = !(responseBody.has('\"protocols\":'));",
											"tests[\"Body does NOT contain protocol\"] = !(responseBody.has('\"protocol\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"protocol\": {\n      \"comments\": [\n      \t{\n      \t  \"name\": \"Updated\",\n      \t  \"value\": \"Updated with MtblsWs-Py\"\n      \t}\n      ],\n      \"components\": [],\n      \"description\": \"Test-Protocol description.\",\n      \"parameters\": [\n        {\n          \"comments\": [],\n          \"parameterName\": {\n            \"comments\": [],\n            \"annotationValue\": \"Test-Protocol-Parameter-Name\",\n            \"termAccession\": \"\",\n            \"termSource\": null\n          }        }\n      ],\n      \"protocolType\": {\n        \"comments\": [],\n        \"annotationValue\": \"Test-Protocol-Type\",\n        \"termAccession\": \"\",\n        \"termSource\": null\n      },\n      \"uri\": \"\",\n      \"version\": \"0.1\"\n    }\n}\n"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/protocols",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PubStudyId}}",
										"protocols"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "5 - New Study Protocol - Pub - Auth - ExtraQueryParams -> 400",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "44d324d0-566b-4838-9134-10bbf4e284d1",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain protocols\"] = !(responseBody.has('\"protocols\":'));",
											"tests[\"Body does NOT contain protocol\"] = !(responseBody.has('\"protocol\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"protocol\": {\n      \"comments\": [\n      \t{\n      \t  \"name\": \"Updated\",\n      \t  \"value\": \"Updated with MtblsWs-Py\"\n      \t}\n      ],\n      \"components\": [],\n      \"description\": \"Test-Protocol description.\",\n      \"name\": \"Test-Protocol-Name\",\n      \"parameters\": [\n        {\n          \"comments\": [],\n          \"parameterName\": {\n            \"comments\": [],\n            \"annotationValue\": \"Test-Protocol-Parameter-Name\",\n            \"termAccession\": \"\",\n            \"termSource\": null\n          }        }\n      ],\n      \"protocolType\": {\n        \"comments\": [],\n        \"annotationValue\": \"Test-Protocol-Type\",\n        \"termAccession\": \"\",\n        \"termSource\": null\n      },\n      \"uri\": \"\",\n      \"version\": \"0.1\"\n    }\n}\n"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/protocols?name={{ValidProtocolId}}",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PubStudyId}}",
										"protocols"
									],
									"query": [
										{
											"key": "name",
											"value": "{{ValidProtocolId}}",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "6 - New Study Protocol - Pub - NoToken -> 401",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bd691732-eee3-4e26-8179-d605c1ad14a2",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 401\"] = responseCode.code === 401;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain protocols\"] = !(responseBody.has('\"protocols\":'));",
											"tests[\"Body does NOT contain protocol\"] = !(responseBody.has('\"protocol\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"protocol\": {\n      \"comments\": [\n      \t{\n      \t  \"name\": \"Updated\",\n      \t  \"value\": \"Updated with MtblsWs-Py\"\n      \t}\n      ],\n      \"components\": [],\n      \"description\": \"Test-Protocol description.\",\n      \"name\": \"Test-Protocol-Name\",\n      \"parameters\": [\n        {\n          \"comments\": [],\n          \"parameterName\": {\n            \"comments\": [],\n            \"annotationValue\": \"Test-Protocol-Parameter-Name\",\n            \"termAccession\": \"\",\n            \"termSource\": null\n          }        }\n      ],\n      \"protocolType\": {\n        \"comments\": [],\n        \"annotationValue\": \"Test-Protocol-Type\",\n        \"termAccession\": \"\",\n        \"termSource\": null\n      },\n      \"uri\": \"\",\n      \"version\": \"0.1\"\n    }\n}\n"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/protocols",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PubStudyId}}",
										"protocols"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "7 - New Study Protocol - Pub - NoAuth -> 403",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f92588ea-c103-4a2e-9af3-6a7fd7f22fa9",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 403\"] = responseCode.code === 403;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain protocols\"] = !(responseBody.has('\"protocols\":'));",
											"tests[\"Body does NOT contain protocol\"] = !(responseBody.has('\"protocol\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{WrongAuth}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"protocol\": {\n      \"comments\": [\n      \t{\n      \t  \"name\": \"Updated\",\n      \t  \"value\": \"Updated with MtblsWs-Py\"\n      \t}\n      ],\n      \"components\": [],\n      \"description\": \"Test-Protocol description.\",\n      \"name\": \"Test-Protocol-Name\",\n      \"parameters\": [\n        {\n          \"comments\": [],\n          \"parameterName\": {\n            \"comments\": [],\n            \"annotationValue\": \"Test-Protocol-Parameter-Name\",\n            \"termAccession\": \"\",\n            \"termSource\": null\n          }        }\n      ],\n      \"protocolType\": {\n        \"comments\": [],\n        \"annotationValue\": \"Test-Protocol-Type\",\n        \"termAccession\": \"\",\n        \"termSource\": null\n      },\n      \"uri\": \"\",\n      \"version\": \"0.1\"\n    }\n}\n"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/protocols",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PubStudyId}}",
										"protocols"
									]
								},
								"description": null
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Priv",
					"description": "",
					"item": [
						{
							"name": "10 - Delete Study Protocol - Priv - Auth -> 200",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "546eaced-91be-49a8-b26a-97c16e4598da",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Body has protocol\"] = responseBody.has('\"protocol\":');",
											"var jsonData = JSON.parse(responseBody);",
											"if (jsonData.protocol) {",
											"    var item = jsonData.protocol",
											"    tests[\"JSON response has key 'name'\"] = item.hasOwnProperty('name');",
											"    tests[\"JSON response key 'name' not Null\"] = item.name;",
											"    tests[\"JSON response has key 'description'\"] = item.hasOwnProperty('description');",
											"    tests[\"JSON response key 'description' not Null\"] = item.description;",
											"    tests[\"JSON response has key 'protocolType'\"] = item.hasOwnProperty('protocolType');",
											"    tests[\"JSON response key 'protocolType' not Null\"] = item.protocolType;",
											"    tests[\"JSON response has key 'components'\"] = item.hasOwnProperty('components');",
											"    tests[\"JSON response key 'components' not Null\"] = item.components;",
											"    tests[\"JSON response has key 'parameters'\"] = item.hasOwnProperty('parameters');",
											"    tests[\"JSON response key 'parameters' not Null\"] = item.parameters;",
											"    tests[\"JSON response has key 'uri'\"] = item.hasOwnProperty('uri');",
											"    // tests[\"JSON response key 'uri' not Null\"] = item.uri;",
											"    tests[\"JSON response has key 'version'\"] = item.hasOwnProperty('version');",
											"    tests[\"JSON response key 'version' not Null\"] = item.version;",
											"    tests[\"JSON response has key 'comments'\"] = item.hasOwnProperty('comments');",
											"    tests[\"JSON response key 'comments' not Null\"] = item.comments;",
											"}",
											""
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "16cd3cf1-7dc1-4c22-94bd-57995c04f5a5",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/protocols?name={{ValidProtocolId}}",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PrivStudyId}}",
										"protocols"
									],
									"query": [
										{
											"key": "name",
											"value": "{{ValidProtocolId}}",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": [
								{
									"id": "87d59a5c-ff09-4e9b-9e08-8cbd4e217b57",
									"name": "Delete Study Contact - Pub - Auth -> 200",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"disabled": false
											},
											{
												"key": "user_token",
												"value": "{{curator}}",
												"disabled": false
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/contacts?email={{ContactID}}",
											"host": [
												"{{ws-py-server}}{{ws-py-port}}"
											],
											"path": [
												"mtbls",
												"ws",
												"studies",
												"{{PubStudyId}}",
												"contacts"
											],
											"query": [
												{
													"key": "email",
													"value": "{{ContactID}}",
													"equals": true
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "http://localhost.ebi.ac.uk:8080",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Content-Length",
											"value": "790",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Tue, 27 Feb 2018 15:31:42 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Server",
											"value": "Werkzeug/0.12.2 Python/3.5.4",
											"name": "Server",
											"description": "A name for the server"
										},
										{
											"key": "Vary",
											"value": "Origin",
											"name": "Vary",
											"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
										}
									],
									"cookie": [],
									"body": "{\n    \"contact\": {\n        \"firstName\": \"John\",\n        \"lastName\": \"Doe\",\n        \"email\": \"doej@a.mail.com\",\n        \"affiliation\": \"EMBL-EBI\",\n        \"comments\": [],\n        \"address\": \"Wellcome Genome Campus, Hinxton, Cambridgeshire, CB10 1SD, UK\",\n        \"fax\": \"012345678902\",\n        \"midInitials\": \"A\",\n        \"phone\": \"012345678901\",\n        \"roles\": [\n            {\n                \"annotationValue\": \"investigator\",\n                \"termSource\": null,\n                \"termAccession\": \"http://www.ebi.ac.uk/efo/EFO_0001739\",\n                \"comments\": []\n            },\n            {\n                \"annotationValue\": \"Bioinformatician\",\n                \"termSource\": null,\n                \"termAccession\": \"\",\n                \"comments\": []\n            }\n        ]\n    }\n}\n"
								},
								{
									"id": "59543314-f473-413f-815a-d2678a9a7629",
									"name": "Delete Study Contact - Pub - Auth -> 200",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"disabled": false
											},
											{
												"key": "user_token",
												"value": "{{curator}}",
												"disabled": false
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/contacts?email={{ContactID}}",
											"host": [
												"{{ws-py-server}}{{ws-py-port}}"
											],
											"path": [
												"mtbls",
												"ws",
												"studies",
												"{{PubStudyId}}",
												"contacts"
											],
											"query": [
												{
													"key": "email",
													"value": "{{ContactID}}",
													"equals": true
												}
											]
										}
									},
									"status": "NOT FOUND",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "http://localhost.ebi.ac.uk:8080",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Content-Length",
											"value": "366",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Tue, 27 Feb 2018 15:34:11 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Server",
											"value": "Werkzeug/0.12.2 Python/3.5.4",
											"name": "Server",
											"description": "A name for the server"
										},
										{
											"key": "Vary",
											"value": "Origin",
											"name": "Vary",
											"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
										}
									],
									"cookie": [],
									"body": "{\n    \"message\": \"The requested URL was not found on the server.  If you entered the URL manually please check your spelling and try again. You have requested this URI [/mtbls/ws/studies/MTBLS10/contacts] but did you mean /mtbls/ws/studies/<string:study_id>/contacts or /mtbls/ws/studies/<string:study_id>/contacts/ or /mtbls/ws/studies/<string:study_id>/title ?\"\n}\n"
								}
							]
						},
						{
							"name": "11 - New Study Protocol - Priv - Auth - NewData -> 200",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4f3077e2-ffea-4e80-8dd2-7072924961cd",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Body has protocol\"] = responseBody.has('\"protocol\":');",
											"var jsonData = JSON.parse(responseBody);",
											"if (jsonData.protocol) {",
											"    var item = jsonData.protocol",
											"    tests[\"JSON response has key 'name'\"] = item.hasOwnProperty('name');",
											"    tests[\"JSON response key 'name' not Null\"] = item.name;",
											"    tests[\"JSON response has key 'description'\"] = item.hasOwnProperty('description');",
											"    tests[\"JSON response key 'description' not Null\"] = item.description;",
											"    tests[\"JSON response has key 'protocolType'\"] = item.hasOwnProperty('protocolType');",
											"    tests[\"JSON response key 'protocolType' not Null\"] = item.protocolType;",
											"    tests[\"JSON response has key 'components'\"] = item.hasOwnProperty('components');",
											"    tests[\"JSON response key 'components' not Null\"] = item.components;",
											"    tests[\"JSON response has key 'parameters'\"] = item.hasOwnProperty('parameters');",
											"    tests[\"JSON response key 'parameters' not Null\"] = item.parameters;",
											"    tests[\"JSON response has key 'uri'\"] = item.hasOwnProperty('uri');",
											"    // tests[\"JSON response key 'uri' not Null\"] = item.uri;",
											"    tests[\"JSON response has key 'version'\"] = item.hasOwnProperty('version');",
											"    tests[\"JSON response key 'version' not Null\"] = item.version;",
											"    tests[\"JSON response has key 'comments'\"] = item.hasOwnProperty('comments');",
											"    tests[\"JSON response key 'comments' not Null\"] = item.comments;",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"protocol\": {\n      \"comments\": [\n      \t{\n      \t  \"name\": \"Updated\",\n      \t  \"value\": \"Updated with MtblsWs-Py\"\n      \t}\n      ],\n      \"components\": [],\n      \"description\": \"Test-Protocol description.\",\n      \"name\": \"Test-Protocol-Name\",\n      \"parameters\": [\n        {\n          \"comments\": [],\n          \"parameterName\": {\n            \"comments\": [],\n            \"annotationValue\": \"Test-Protocol-Parameter-Name\",\n            \"termAccession\": \"\",\n            \"termSource\": null\n          }        }\n      ],\n      \"protocolType\": {\n        \"comments\": [],\n        \"annotationValue\": \"Test-Protocol-Type\",\n        \"termAccession\": \"\",\n        \"termSource\": null\n      },\n      \"uri\": \"\",\n      \"version\": \"0.1\"\n    }\n}\n"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/protocols",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PrivStudyId}}",
										"protocols"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "12 - New Study Protocol - Priv - Auth - ExistingContact -> 409",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "47105462-191f-4a4f-bc60-fd49684ed338",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 409\"] = responseCode.code === 409;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain protocols\"] = !(responseBody.has('\"protocols\":'));",
											"tests[\"Body does NOT contain protocol\"] = !(responseBody.has('\"protocol\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"protocol\": {\n      \"comments\": [\n      \t{\n      \t  \"name\": \"Updated\",\n      \t  \"value\": \"Updated with MtblsWs-Py\"\n      \t}\n      ],\n      \"components\": [],\n      \"description\": \"Test-Protocol description.\",\n      \"name\": \"Test-Protocol-Name\",\n      \"parameters\": [\n        {\n          \"comments\": [],\n          \"parameterName\": {\n            \"comments\": [],\n            \"annotationValue\": \"Test-Protocol-Parameter-Name\",\n            \"termAccession\": \"\",\n            \"termSource\": null\n          }        }\n      ],\n      \"protocolType\": {\n        \"comments\": [],\n        \"annotationValue\": \"Test-Protocol-Type\",\n        \"termAccession\": \"\",\n        \"termSource\": null\n      },\n      \"uri\": \"\",\n      \"version\": \"0.1\"\n    }\n}\n"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/protocols",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PrivStudyId}}",
										"protocols"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "13 - New Study Protocol - Priv - Auth - NoData -> 400",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "54ac535e-82a3-4556-a449-d24d0f05f8e6",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain protocols\"] = !(responseBody.has('\"protocols\":'));",
											"tests[\"Body does NOT contain protocol\"] = !(responseBody.has('\"protocol\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "None"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/protocols",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PrivStudyId}}",
										"protocols"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "14 - New Study Protocol - Priv - Auth - MissingRequiredData -> 400",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "dd6b7d03-8374-49de-bf38-9b2ef33bfb57",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain protocols\"] = !(responseBody.has('\"protocols\":'));",
											"tests[\"Body does NOT contain protocol\"] = !(responseBody.has('\"protocol\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"protocol\": {\n      \"comments\": [\n      \t{\n      \t  \"name\": \"Updated\",\n      \t  \"value\": \"Updated with MtblsWs-Py\"\n      \t}\n      ],\n      \"components\": [],\n      \"description\": \"Test-Protocol description.\",\n      \"parameters\": [\n        {\n          \"comments\": [],\n          \"parameterName\": {\n            \"comments\": [],\n            \"annotationValue\": \"Test-Protocol-Parameter-Name\",\n            \"termAccession\": \"\",\n            \"termSource\": null\n          }        }\n      ],\n      \"protocolType\": {\n        \"comments\": [],\n        \"annotationValue\": \"Test-Protocol-Type\",\n        \"termAccession\": \"\",\n        \"termSource\": null\n      },\n      \"uri\": \"\",\n      \"version\": \"0.1\"\n    }\n}\n"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/contacts",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PrivStudyId}}",
										"contacts"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "15 - New Study Protocol - Priv - Auth - ExtraQueryParams -> 400",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "05f73240-7488-4517-950c-bb249ded5d85",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain protocols\"] = !(responseBody.has('\"protocols\":'));",
											"tests[\"Body does NOT contain protocol\"] = !(responseBody.has('\"protocol\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"protocol\": {\n      \"comments\": [\n      \t{\n      \t  \"name\": \"Updated\",\n      \t  \"value\": \"Updated with MtblsWs-Py\"\n      \t}\n      ],\n      \"components\": [],\n      \"description\": \"Test-Protocol description.\",\n      \"name\": \"Test-Protocol-Name\",\n      \"parameters\": [\n        {\n          \"comments\": [],\n          \"parameterName\": {\n            \"comments\": [],\n            \"annotationValue\": \"Test-Protocol-Parameter-Name\",\n            \"termAccession\": \"\",\n            \"termSource\": null\n          }        }\n      ],\n      \"protocolType\": {\n        \"comments\": [],\n        \"annotationValue\": \"Test-Protocol-Type\",\n        \"termAccession\": \"\",\n        \"termSource\": null\n      },\n      \"uri\": \"\",\n      \"version\": \"0.1\"\n    }\n}\n"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/protocols?name={{ValidProtocolId}}",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PrivStudyId}}",
										"protocols"
									],
									"query": [
										{
											"key": "name",
											"value": "{{ValidProtocolId}}",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "16 - New Study Protocol - Priv - NoToken -> 401",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7a2f051f-e6de-4aaf-9da1-77db85a52dd4",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 401\"] = responseCode.code === 401;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain protocols\"] = !(responseBody.has('\"protocols\":'));",
											"tests[\"Body does NOT contain protocol\"] = !(responseBody.has('\"protocol\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"protocol\": {\n      \"comments\": [\n      \t{\n      \t  \"name\": \"Updated\",\n      \t  \"value\": \"Updated with MtblsWs-Py\"\n      \t}\n      ],\n      \"components\": [],\n      \"description\": \"Test-Protocol description.\",\n      \"name\": \"Test-Protocol-Name\",\n      \"parameters\": [\n        {\n          \"comments\": [],\n          \"parameterName\": {\n            \"comments\": [],\n            \"annotationValue\": \"Test-Protocol-Parameter-Name\",\n            \"termAccession\": \"\",\n            \"termSource\": null\n          }        }\n      ],\n      \"protocolType\": {\n        \"comments\": [],\n        \"annotationValue\": \"Test-Protocol-Type\",\n        \"termAccession\": \"\",\n        \"termSource\": null\n      },\n      \"uri\": \"\",\n      \"version\": \"0.1\"\n    }\n}\n"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/protocols",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PrivStudyId}}",
										"protocols"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "17 - New Study Protocol - Priv - NoAuth -> 403",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3c2bf71b-e5bf-4d8b-8213-f678fdfc89c1",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 403\"] = responseCode.code === 403;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain protocols\"] = !(responseBody.has('\"protocols\":'));",
											"tests[\"Body does NOT contain protocol\"] = !(responseBody.has('\"protocol\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{WrongAuth}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"protocol\": {\n      \"comments\": [\n      \t{\n      \t  \"name\": \"Updated\",\n      \t  \"value\": \"Updated with MtblsWs-Py\"\n      \t}\n      ],\n      \"components\": [],\n      \"description\": \"Test-Protocol description.\",\n      \"name\": \"Test-Protocol-Name\",\n      \"parameters\": [\n        {\n          \"comments\": [],\n          \"parameterName\": {\n            \"comments\": [],\n            \"annotationValue\": \"Test-Protocol-Parameter-Name\",\n            \"termAccession\": \"\",\n            \"termSource\": null\n          }        }\n      ],\n      \"protocolType\": {\n        \"comments\": [],\n        \"annotationValue\": \"Test-Protocol-Type\",\n        \"termAccession\": \"\",\n        \"termSource\": null\n      },\n      \"uri\": \"\",\n      \"version\": \"0.1\"\n    }\n}\n"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/protocols",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PrivStudyId}}",
										"protocols"
									]
								},
								"description": null
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				}
			]
		},
		{
			"name": "POST New Study Factor",
			"description": null,
			"item": [
				{
					"name": "Pub",
					"description": "",
					"item": [
						{
							"name": "0 - Delete Study Factor - Pub - Auth -> 200 Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "30b6485a-01ea-49f9-931e-c1f37982f5d2",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Body has factor\"] = responseBody.has('\"factor\":');",
											"var jsonData = JSON.parse(responseBody);",
											"if (jsonData.factor) {",
											"    var item = jsonData.factor",
											"    tests[\"JSON response has key 'factorName'\"] = item.hasOwnProperty('factorName');",
											"    tests[\"JSON response key 'factorName' not Null\"] = item.factorName;",
											"    tests[\"JSON response has key 'factorType'\"] = item.hasOwnProperty('factorType');",
											"    tests[\"JSON response key 'factorType' not Null\"] = item.factorType;",
											"    tests[\"JSON response has key 'comments'\"] = item.hasOwnProperty('comments');",
											"    tests[\"JSON response key 'comments' not Null\"] = item.comments;",
											"}",
											""
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "16cd3cf1-7dc1-4c22-94bd-57995c04f5a5",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/factors?name={{ValidFactorId}}",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PubStudyId}}",
										"factors"
									],
									"query": [
										{
											"key": "name",
											"value": "{{ValidFactorId}}",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": [
								{
									"id": "3504dd01-c968-4bc6-884e-46e9f4ac2faf",
									"name": "Delete Study Contact - Pub - Auth -> 200",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"disabled": false
											},
											{
												"key": "user_token",
												"value": "{{curator}}",
												"disabled": false
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/contacts?email={{ContactID}}",
											"host": [
												"{{ws-py-server}}{{ws-py-port}}"
											],
											"path": [
												"mtbls",
												"ws",
												"studies",
												"{{PubStudyId}}",
												"contacts"
											],
											"query": [
												{
													"key": "email",
													"value": "{{ContactID}}",
													"equals": true
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "http://localhost.ebi.ac.uk:8080",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Content-Length",
											"value": "790",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Tue, 27 Feb 2018 15:31:42 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Server",
											"value": "Werkzeug/0.12.2 Python/3.5.4",
											"name": "Server",
											"description": "A name for the server"
										},
										{
											"key": "Vary",
											"value": "Origin",
											"name": "Vary",
											"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
										}
									],
									"cookie": [],
									"body": "{\n    \"contact\": {\n        \"firstName\": \"John\",\n        \"lastName\": \"Doe\",\n        \"email\": \"doej@a.mail.com\",\n        \"affiliation\": \"EMBL-EBI\",\n        \"comments\": [],\n        \"address\": \"Wellcome Genome Campus, Hinxton, Cambridgeshire, CB10 1SD, UK\",\n        \"fax\": \"012345678902\",\n        \"midInitials\": \"A\",\n        \"phone\": \"012345678901\",\n        \"roles\": [\n            {\n                \"annotationValue\": \"investigator\",\n                \"termSource\": null,\n                \"termAccession\": \"http://www.ebi.ac.uk/efo/EFO_0001739\",\n                \"comments\": []\n            },\n            {\n                \"annotationValue\": \"Bioinformatician\",\n                \"termSource\": null,\n                \"termAccession\": \"\",\n                \"comments\": []\n            }\n        ]\n    }\n}\n"
								},
								{
									"id": "7ec9e48e-b4b7-4b7f-9195-3e9a3c0d8e49",
									"name": "Delete Study Contact - Pub - Auth -> 200",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"disabled": false
											},
											{
												"key": "user_token",
												"value": "{{curator}}",
												"disabled": false
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/contacts?email={{ContactID}}",
											"host": [
												"{{ws-py-server}}{{ws-py-port}}"
											],
											"path": [
												"mtbls",
												"ws",
												"studies",
												"{{PubStudyId}}",
												"contacts"
											],
											"query": [
												{
													"key": "email",
													"value": "{{ContactID}}",
													"equals": true
												}
											]
										}
									},
									"status": "NOT FOUND",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "http://localhost.ebi.ac.uk:8080",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Content-Length",
											"value": "366",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Tue, 27 Feb 2018 15:34:11 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Server",
											"value": "Werkzeug/0.12.2 Python/3.5.4",
											"name": "Server",
											"description": "A name for the server"
										},
										{
											"key": "Vary",
											"value": "Origin",
											"name": "Vary",
											"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
										}
									],
									"cookie": [],
									"body": "{\n    \"message\": \"The requested URL was not found on the server.  If you entered the URL manually please check your spelling and try again. You have requested this URI [/mtbls/ws/studies/MTBLS10/contacts] but did you mean /mtbls/ws/studies/<string:study_id>/contacts or /mtbls/ws/studies/<string:study_id>/contacts/ or /mtbls/ws/studies/<string:study_id>/title ?\"\n}\n"
								}
							]
						},
						{
							"name": "1 - New Study Factor - Pub - Auth - NewData -> 200",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "59522b19-7661-4284-919f-ca6f1d51b3e6",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Body has factor\"] = responseBody.has('\"factor\":');",
											"var jsonData = JSON.parse(responseBody);",
											"if (jsonData.factor) {",
											"    var item = jsonData.factor",
											"    tests[\"JSON response has key 'factorName'\"] = item.hasOwnProperty('factorName');",
											"    tests[\"JSON response key 'factorName' not Null\"] = item.factorName;",
											"    tests[\"JSON response has key 'factorType'\"] = item.hasOwnProperty('factorType');",
											"    tests[\"JSON response key 'factorType' not Null\"] = item.factorType;",
											"    tests[\"JSON response has key 'comments'\"] = item.hasOwnProperty('comments');",
											"    tests[\"JSON response key 'comments' not Null\"] = item.comments;",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{  \n   \"factor\": \n    {\n      \"factorName\": \"Test-Timepoint\",\n      \"factorType\": {\n        \"annotationValue\": \"timepoint\",\n        \"termSource\": {\n          \"name\": \"EFO\",\n          \"file\": \"http://data.bioontology.org/ontologies/EFO\",\n          \"version\": \"132\",\n          \"description\": \"Experimental Factor Ontology\",\n          \"comments\": []\n        },\n        \"termAccession\": \"http://www.ebi.ac.uk/efo/EFO_0000724\",\n        \"comments\": []\n      },\n      \"comments\": []\n    }\n}\n"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/factors",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PubStudyId}}",
										"factors"
									]
								},
								"description": null
							},
							"response": [
								{
									"id": "8e47b25b-0e3f-49b6-b057-d2885d2295eb",
									"name": "New Study Contact - Pub - Auth - NewData -> 200",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"disabled": false
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": false
											},
											{
												"key": "user_token",
												"value": "{{curator}}",
												"disabled": false
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"contact\": {\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\",\n    \"email\": \"doej@a.mail.com\",\n    \"affiliation\": \"EMBL-EBI\",\n    \"comments\": [],\n    \"address\": \"Wellcome Genome Campus, Hinxton, Cambridgeshire, CB10 1SD, UK\",\n    \"fax\": \"012345678902\",\n    \"midInitials\": \"A\",\n    \"phone\": \"012345678901\",\n    \"roles\": [\n      {\n        \"annotationValue\": \"investigator\",\n        \"termSource\": null,\n        \"termAccession\": \"http://www.ebi.ac.uk/efo/EFO_0001739\",\n        \"comments\": []\n      },\n      {\n        \"annotationValue\": \"Bioinformatician\",\n        \"termSource\": null,\n        \"termAccession\": \"\",\n        \"comments\": []\n      }\n    ]\n  }\n}\n"
										},
										"url": {
											"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/contacts",
											"host": [
												"{{ws-py-server}}{{ws-py-port}}"
											],
											"path": [
												"mtbls",
												"ws",
												"studies",
												"{{PubStudyId}}",
												"contacts"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "http://localhost.ebi.ac.uk:8080",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Content-Length",
											"value": "790",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Tue, 27 Feb 2018 14:46:35 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Server",
											"value": "Werkzeug/0.12.2 Python/3.5.4",
											"name": "Server",
											"description": "A name for the server"
										},
										{
											"key": "Vary",
											"value": "Origin",
											"name": "Vary",
											"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
										}
									],
									"cookie": [],
									"body": "{\n    \"contact\": {\n        \"firstName\": \"John\",\n        \"lastName\": \"Doe\",\n        \"email\": \"doej@a.mail.com\",\n        \"affiliation\": \"EMBL-EBI\",\n        \"comments\": [],\n        \"address\": \"Wellcome Genome Campus, Hinxton, Cambridgeshire, CB10 1SD, UK\",\n        \"fax\": \"012345678902\",\n        \"midInitials\": \"A\",\n        \"phone\": \"012345678901\",\n        \"roles\": [\n            {\n                \"annotationValue\": \"investigator\",\n                \"termSource\": null,\n                \"termAccession\": \"http://www.ebi.ac.uk/efo/EFO_0001739\",\n                \"comments\": []\n            },\n            {\n                \"annotationValue\": \"Bioinformatician\",\n                \"termSource\": null,\n                \"termAccession\": \"\",\n                \"comments\": []\n            }\n        ]\n    }\n}\n"
								}
							]
						},
						{
							"name": "2 - New Study Factor - Pub - Auth - ExistingContact -> 409",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f8ac5491-1ed4-44a9-a85d-6a91667c50f2",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 409\"] = responseCode.code === 409;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain factors\"] = !(responseBody.has('\"factors\":'));",
											"tests[\"Body does NOT contain factor\"] = !(responseBody.has('\"factor\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{  \n   \"factor\": \n    {\n      \"factorName\": \"Test-Timepoint\",\n      \"factorType\": {\n        \"annotationValue\": \"timepoint\",\n        \"termSource\": {\n          \"name\": \"EFO\",\n          \"file\": \"http://data.bioontology.org/ontologies/EFO\",\n          \"version\": \"132\",\n          \"description\": \"Experimental Factor Ontology\",\n          \"comments\": []\n        },\n        \"termAccession\": \"http://www.ebi.ac.uk/efo/EFO_0000724\",\n        \"comments\": []\n      },\n      \"comments\": []\n    }\n}\n"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/factors",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PubStudyId}}",
										"factors"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "3 - New Study Factor - Pub - Auth - NoData -> 400",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "755583cb-3cab-4736-8ad0-f0586aaed26b",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain factors\"] = !(responseBody.has('\"factors\":'));",
											"tests[\"Body does NOT contain factor\"] = !(responseBody.has('\"factor\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "None"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/factors",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PubStudyId}}",
										"factors"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "4 - New Study Factor - Pub - Auth - MissingRequiredData -> 400",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7d36a68e-4138-45f2-b748-9d253f1318eb",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain factors\"] = !(responseBody.has('\"factors\":'));",
											"tests[\"Body does NOT contain factor\"] = !(responseBody.has('\"factor\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{  \n   \"factor\": \n    {\n      \"factorType\": {\n        \"annotationValue\": \"timepoint\",\n        \"termSource\": {\n          \"name\": \"EFO\",\n          \"file\": \"http://data.bioontology.org/ontologies/EFO\",\n          \"version\": \"132\",\n          \"description\": \"Experimental Factor Ontology\",\n          \"comments\": []\n        },\n        \"termAccession\": \"http://www.ebi.ac.uk/efo/EFO_0000724\",\n        \"comments\": []\n      },\n      \"comments\": []\n    }\n}\n"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/factors",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PubStudyId}}",
										"factors"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "5 - New Study Factor - Pub - Auth - ExtraQueryParams -> 400",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f9b016ab-da18-46c2-ab1b-ce4a30bfd5e9",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain factors\"] = !(responseBody.has('\"factors\":'));",
											"tests[\"Body does NOT contain factor\"] = !(responseBody.has('\"factor\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{  \n   \"factor\": \n    {\n      \"factorName\": \"Test-Timepoint\",\n      \"factorType\": {\n        \"annotationValue\": \"timepoint\",\n        \"termSource\": {\n          \"name\": \"EFO\",\n          \"file\": \"http://data.bioontology.org/ontologies/EFO\",\n          \"version\": \"132\",\n          \"description\": \"Experimental Factor Ontology\",\n          \"comments\": []\n        },\n        \"termAccession\": \"http://www.ebi.ac.uk/efo/EFO_0000724\",\n        \"comments\": []\n      },\n      \"comments\": []\n    }\n}\n"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/factors?name={{ValidFactorId}}",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PubStudyId}}",
										"factors"
									],
									"query": [
										{
											"key": "name",
											"value": "{{ValidFactorId}}",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "6 - New Study Factor - Pub - NoToken -> 401",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0e3af94b-92cc-4611-91a4-8a305cb7d5b0",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 401\"] = responseCode.code === 401;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain factors\"] = !(responseBody.has('\"factors\":'));",
											"tests[\"Body does NOT contain factor\"] = !(responseBody.has('\"factor\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{  \n   \"factor\": \n    {\n      \"factorName\": \"Test-Timepoint\",\n      \"factorType\": {\n        \"annotationValue\": \"timepoint\",\n        \"termSource\": {\n          \"name\": \"EFO\",\n          \"file\": \"http://data.bioontology.org/ontologies/EFO\",\n          \"version\": \"132\",\n          \"description\": \"Experimental Factor Ontology\",\n          \"comments\": []\n        },\n        \"termAccession\": \"http://www.ebi.ac.uk/efo/EFO_0000724\",\n        \"comments\": []\n      },\n      \"comments\": []\n    }\n}\n"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/factors",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PubStudyId}}",
										"factors"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "7 - New Study Factor - Pub - NoAuth -> 403",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "50ec195a-6525-47f7-9b70-ffcb1e974f14",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 403\"] = responseCode.code === 403;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain factors\"] = !(responseBody.has('\"factors\":'));",
											"tests[\"Body does NOT contain factor\"] = !(responseBody.has('\"factor\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{WrongAuth}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{  \n   \"factor\": \n    {\n      \"factorName\": \"Test-Timepoint\",\n      \"factorType\": {\n        \"annotationValue\": \"timepoint\",\n        \"termSource\": {\n          \"name\": \"EFO\",\n          \"file\": \"http://data.bioontology.org/ontologies/EFO\",\n          \"version\": \"132\",\n          \"description\": \"Experimental Factor Ontology\",\n          \"comments\": []\n        },\n        \"termAccession\": \"http://www.ebi.ac.uk/efo/EFO_0000724\",\n        \"comments\": []\n      },\n      \"comments\": []\n    }\n}\n"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/factors",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PubStudyId}}",
										"factors"
									]
								},
								"description": null
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Priv",
					"description": "",
					"item": [
						{
							"name": "10 - Delete Study Factor - Priv - Auth -> 200",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b5529e95-fe28-468d-910b-42706707af96",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Body has factor\"] = responseBody.has('\"factor\":');",
											"var jsonData = JSON.parse(responseBody);",
											"if (jsonData.factor) {",
											"    var item = jsonData.factor",
											"    tests[\"JSON response has key 'factorName'\"] = item.hasOwnProperty('factorName');",
											"    tests[\"JSON response key 'factorName' not Null\"] = item.factorName;",
											"    tests[\"JSON response has key 'factorType'\"] = item.hasOwnProperty('factorType');",
											"    tests[\"JSON response key 'factorType' not Null\"] = item.factorType;",
											"    tests[\"JSON response has key 'comments'\"] = item.hasOwnProperty('comments');",
											"    tests[\"JSON response key 'comments' not Null\"] = item.comments;",
											"}",
											""
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "16cd3cf1-7dc1-4c22-94bd-57995c04f5a5",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/factors?name={{ValidFactorId}}",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PrivStudyId}}",
										"factors"
									],
									"query": [
										{
											"key": "name",
											"value": "{{ValidFactorId}}",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": [
								{
									"id": "1a036e9c-1319-48e3-8eba-eecc45ee9b17",
									"name": "Delete Study Contact - Pub - Auth -> 200",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"disabled": false
											},
											{
												"key": "user_token",
												"value": "{{curator}}",
												"disabled": false
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/contacts?email={{ContactID}}",
											"host": [
												"{{ws-py-server}}{{ws-py-port}}"
											],
											"path": [
												"mtbls",
												"ws",
												"studies",
												"{{PubStudyId}}",
												"contacts"
											],
											"query": [
												{
													"key": "email",
													"value": "{{ContactID}}",
													"equals": true
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "http://localhost.ebi.ac.uk:8080",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Content-Length",
											"value": "790",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Tue, 27 Feb 2018 15:31:42 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Server",
											"value": "Werkzeug/0.12.2 Python/3.5.4",
											"name": "Server",
											"description": "A name for the server"
										},
										{
											"key": "Vary",
											"value": "Origin",
											"name": "Vary",
											"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
										}
									],
									"cookie": [],
									"body": "{\n    \"contact\": {\n        \"firstName\": \"John\",\n        \"lastName\": \"Doe\",\n        \"email\": \"doej@a.mail.com\",\n        \"affiliation\": \"EMBL-EBI\",\n        \"comments\": [],\n        \"address\": \"Wellcome Genome Campus, Hinxton, Cambridgeshire, CB10 1SD, UK\",\n        \"fax\": \"012345678902\",\n        \"midInitials\": \"A\",\n        \"phone\": \"012345678901\",\n        \"roles\": [\n            {\n                \"annotationValue\": \"investigator\",\n                \"termSource\": null,\n                \"termAccession\": \"http://www.ebi.ac.uk/efo/EFO_0001739\",\n                \"comments\": []\n            },\n            {\n                \"annotationValue\": \"Bioinformatician\",\n                \"termSource\": null,\n                \"termAccession\": \"\",\n                \"comments\": []\n            }\n        ]\n    }\n}\n"
								},
								{
									"id": "3135fb94-3a26-4b5f-8635-b302ff052043",
									"name": "Delete Study Contact - Pub - Auth -> 200",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"disabled": false
											},
											{
												"key": "user_token",
												"value": "{{curator}}",
												"disabled": false
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/contacts?email={{ContactID}}",
											"host": [
												"{{ws-py-server}}{{ws-py-port}}"
											],
											"path": [
												"mtbls",
												"ws",
												"studies",
												"{{PubStudyId}}",
												"contacts"
											],
											"query": [
												{
													"key": "email",
													"value": "{{ContactID}}",
													"equals": true
												}
											]
										}
									},
									"status": "NOT FOUND",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "http://localhost.ebi.ac.uk:8080",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Content-Length",
											"value": "366",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Tue, 27 Feb 2018 15:34:11 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Server",
											"value": "Werkzeug/0.12.2 Python/3.5.4",
											"name": "Server",
											"description": "A name for the server"
										},
										{
											"key": "Vary",
											"value": "Origin",
											"name": "Vary",
											"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
										}
									],
									"cookie": [],
									"body": "{\n    \"message\": \"The requested URL was not found on the server.  If you entered the URL manually please check your spelling and try again. You have requested this URI [/mtbls/ws/studies/MTBLS10/contacts] but did you mean /mtbls/ws/studies/<string:study_id>/contacts or /mtbls/ws/studies/<string:study_id>/contacts/ or /mtbls/ws/studies/<string:study_id>/title ?\"\n}\n"
								}
							]
						},
						{
							"name": "11 - New Study Factor - Priv - Auth - NewData -> 200",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "62d91647-5ed6-40c0-923e-bf9eb28b1c57",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Body has factor\"] = responseBody.has('\"factor\":');",
											"var jsonData = JSON.parse(responseBody);",
											"if (jsonData.factor) {",
											"    var item = jsonData.factor",
											"    tests[\"JSON response has key 'factorName'\"] = item.hasOwnProperty('factorName');",
											"    tests[\"JSON response key 'factorName' not Null\"] = item.factorName;",
											"    tests[\"JSON response has key 'factorType'\"] = item.hasOwnProperty('factorType');",
											"    tests[\"JSON response key 'factorType' not Null\"] = item.factorType;",
											"    tests[\"JSON response has key 'comments'\"] = item.hasOwnProperty('comments');",
											"    tests[\"JSON response key 'comments' not Null\"] = item.comments;",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{  \n   \"factor\": \n    {\n      \"factorName\": \"Test-Timepoint\",\n      \"factorType\": {\n        \"annotationValue\": \"timepoint\",\n        \"termSource\": {\n          \"name\": \"EFO\",\n          \"file\": \"http://data.bioontology.org/ontologies/EFO\",\n          \"version\": \"132\",\n          \"description\": \"Experimental Factor Ontology\",\n          \"comments\": []\n        },\n        \"termAccession\": \"http://www.ebi.ac.uk/efo/EFO_0000724\",\n        \"comments\": []\n      },\n      \"comments\": []\n    }\n}\n"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/factors",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PrivStudyId}}",
										"factors"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "12 - New Study Factor - Priv - Auth - ExistingContact -> 409",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "03e2ac19-951b-4263-aaa2-cd7d074278dc",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 409\"] = responseCode.code === 409;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain factors\"] = !(responseBody.has('\"factors\":'));",
											"tests[\"Body does NOT contain factor\"] = !(responseBody.has('\"factor\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{  \n   \"factor\": \n    {\n      \"factorName\": \"Test-Timepoint\",\n      \"factorType\": {\n        \"annotationValue\": \"timepoint\",\n        \"termSource\": {\n          \"name\": \"EFO\",\n          \"file\": \"http://data.bioontology.org/ontologies/EFO\",\n          \"version\": \"132\",\n          \"description\": \"Experimental Factor Ontology\",\n          \"comments\": []\n        },\n        \"termAccession\": \"http://www.ebi.ac.uk/efo/EFO_0000724\",\n        \"comments\": []\n      },\n      \"comments\": []\n    }\n}\n"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/factors",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PrivStudyId}}",
										"factors"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "13 - New Study Factor - Priv - Auth - NoData -> 400",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9bbe274b-0411-477d-9668-1dbf77a31175",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain factors\"] = !(responseBody.has('\"factors\":'));",
											"tests[\"Body does NOT contain factor\"] = !(responseBody.has('\"factor\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "None"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/factors",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PrivStudyId}}",
										"factors"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "14 - New Study Factor - Priv - Auth - MissingRequiredData -> 400",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ad865f40-b91d-4b96-99fb-25c379ca7b53",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain factors\"] = !(responseBody.has('\"factors\":'));",
											"tests[\"Body does NOT contain factor\"] = !(responseBody.has('\"factor\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{  \n   \"factor\": \n    {\n      \"factorType\": {\n        \"annotationValue\": \"timepoint\",\n        \"termSource\": {\n          \"name\": \"EFO\",\n          \"file\": \"http://data.bioontology.org/ontologies/EFO\",\n          \"version\": \"132\",\n          \"description\": \"Experimental Factor Ontology\",\n          \"comments\": []\n        },\n        \"termAccession\": \"http://www.ebi.ac.uk/efo/EFO_0000724\",\n        \"comments\": []\n      },\n      \"comments\": []\n    }\n}\n"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/factors",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PrivStudyId}}",
										"factors"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "15 - New Study Factor - Priv - Auth - ExtraQueryParams -> 400",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "54c13ca6-97f0-4524-909f-df897343b5c1",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain factors\"] = !(responseBody.has('\"factors\":'));",
											"tests[\"Body does NOT contain factor\"] = !(responseBody.has('\"factor\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{  \n   \"factor\": \n    {\n      \"factorName\": \"Test-Timepoint\",\n      \"factorType\": {\n        \"annotationValue\": \"timepoint\",\n        \"termSource\": {\n          \"name\": \"EFO\",\n          \"file\": \"http://data.bioontology.org/ontologies/EFO\",\n          \"version\": \"132\",\n          \"description\": \"Experimental Factor Ontology\",\n          \"comments\": []\n        },\n        \"termAccession\": \"http://www.ebi.ac.uk/efo/EFO_0000724\",\n        \"comments\": []\n      },\n      \"comments\": []\n    }\n}\n"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/factors?name={{ValidFactorId}}",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PrivStudyId}}",
										"factors"
									],
									"query": [
										{
											"key": "name",
											"value": "{{ValidFactorId}}",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "16 - New Study Factor - Priv - NoToken -> 401",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9c40a760-f3f2-4f12-bdcb-551468cafaf9",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 401\"] = responseCode.code === 401;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain factors\"] = !(responseBody.has('\"factors\":'));",
											"tests[\"Body does NOT contain factor\"] = !(responseBody.has('\"factor\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{  \n   \"factor\": \n    {\n      \"factorName\": \"Test-Timepoint\",\n      \"factorType\": {\n        \"annotationValue\": \"timepoint\",\n        \"termSource\": {\n          \"name\": \"EFO\",\n          \"file\": \"http://data.bioontology.org/ontologies/EFO\",\n          \"version\": \"132\",\n          \"description\": \"Experimental Factor Ontology\",\n          \"comments\": []\n        },\n        \"termAccession\": \"http://www.ebi.ac.uk/efo/EFO_0000724\",\n        \"comments\": []\n      },\n      \"comments\": []\n    }\n}\n"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/factors",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PrivStudyId}}",
										"factors"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "17 - New Study Factor - Priv - NoAuth -> 403",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3516a125-0445-44d5-8082-2a9951853f49",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 403\"] = responseCode.code === 403;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain factors\"] = !(responseBody.has('\"factors\":'));",
											"tests[\"Body does NOT contain factor\"] = !(responseBody.has('\"factor\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{WrongAuth}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{  \n   \"factor\": \n    {\n      \"factorName\": \"Test-Timepoint\",\n      \"factorType\": {\n        \"annotationValue\": \"timepoint\",\n        \"termSource\": {\n          \"name\": \"EFO\",\n          \"file\": \"http://data.bioontology.org/ontologies/EFO\",\n          \"version\": \"132\",\n          \"description\": \"Experimental Factor Ontology\",\n          \"comments\": []\n        },\n        \"termAccession\": \"http://www.ebi.ac.uk/efo/EFO_0000724\",\n        \"comments\": []\n      },\n      \"comments\": []\n    }\n}\n"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/factors",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PrivStudyId}}",
										"factors"
									]
								},
								"description": null
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				}
			]
		},
		{
			"name": "POST New Study Design Descriptor",
			"description": null,
			"item": [
				{
					"name": "Pub",
					"description": "",
					"item": [
						{
							"name": "0 - Delete Study Factor - Pub - Auth -> 200 Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6f49b6b2-9489-4091-9544-c3acb743d6e5",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Body has studyDesignDescriptor\"] = responseBody.has('\"studyDesignDescriptor\":');",
											"var jsonData = JSON.parse(responseBody);",
											"if (jsonData.studyDesignDescriptor) {",
											"    var item = jsonData.studyDesignDescriptor",
											"    tests[\"JSON response has key 'annotationValue'\"] = item.hasOwnProperty('annotationValue');",
											"    tests[\"JSON response key 'annotationValue' not Null\"] = item.annotationValue;",
											"    tests[\"JSON response has key 'termSource'\"] = item.hasOwnProperty('termSource');",
											"    tests[\"JSON response key 'termSource' not Null\"] = item.termSource;",
											"    tests[\"JSON response has key 'termAccession'\"] = item.hasOwnProperty('termAccession');",
											"    tests[\"JSON response key 'termAccession' not Null\"] = item.termAccession;",
											"    tests[\"JSON response has key 'comments'\"] = item.hasOwnProperty('comments');",
											"    tests[\"JSON response key 'comments' not Null\"] = item.comments;",
											"}",
											""
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "16cd3cf1-7dc1-4c22-94bd-57995c04f5a5",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/descriptors?annotationValue={{ValidDescriptorId}}",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PubStudyId}}",
										"descriptors"
									],
									"query": [
										{
											"key": "annotationValue",
											"value": "{{ValidDescriptorId}}",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": [
								{
									"id": "f0d6d290-8660-490a-9d91-d8e391ee9845",
									"name": "Delete Study Contact - Pub - Auth -> 200",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"disabled": false
											},
											{
												"key": "user_token",
												"value": "{{curator}}",
												"disabled": false
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/contacts?email={{ContactID}}",
											"host": [
												"{{ws-py-server}}{{ws-py-port}}"
											],
											"path": [
												"mtbls",
												"ws",
												"studies",
												"{{PubStudyId}}",
												"contacts"
											],
											"query": [
												{
													"key": "email",
													"value": "{{ContactID}}",
													"equals": true
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "http://localhost.ebi.ac.uk:8080",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Content-Length",
											"value": "790",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Tue, 27 Feb 2018 15:31:42 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Server",
											"value": "Werkzeug/0.12.2 Python/3.5.4",
											"name": "Server",
											"description": "A name for the server"
										},
										{
											"key": "Vary",
											"value": "Origin",
											"name": "Vary",
											"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
										}
									],
									"cookie": [],
									"body": "{\n    \"contact\": {\n        \"firstName\": \"John\",\n        \"lastName\": \"Doe\",\n        \"email\": \"doej@a.mail.com\",\n        \"affiliation\": \"EMBL-EBI\",\n        \"comments\": [],\n        \"address\": \"Wellcome Genome Campus, Hinxton, Cambridgeshire, CB10 1SD, UK\",\n        \"fax\": \"012345678902\",\n        \"midInitials\": \"A\",\n        \"phone\": \"012345678901\",\n        \"roles\": [\n            {\n                \"annotationValue\": \"investigator\",\n                \"termSource\": null,\n                \"termAccession\": \"http://www.ebi.ac.uk/efo/EFO_0001739\",\n                \"comments\": []\n            },\n            {\n                \"annotationValue\": \"Bioinformatician\",\n                \"termSource\": null,\n                \"termAccession\": \"\",\n                \"comments\": []\n            }\n        ]\n    }\n}\n"
								},
								{
									"id": "72fbf8a9-d44e-47b8-8122-48bd693ae3a0",
									"name": "Delete Study Contact - Pub - Auth -> 200",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"disabled": false
											},
											{
												"key": "user_token",
												"value": "{{curator}}",
												"disabled": false
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/contacts?email={{ContactID}}",
											"host": [
												"{{ws-py-server}}{{ws-py-port}}"
											],
											"path": [
												"mtbls",
												"ws",
												"studies",
												"{{PubStudyId}}",
												"contacts"
											],
											"query": [
												{
													"key": "email",
													"value": "{{ContactID}}",
													"equals": true
												}
											]
										}
									},
									"status": "NOT FOUND",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "http://localhost.ebi.ac.uk:8080",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Content-Length",
											"value": "366",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Tue, 27 Feb 2018 15:34:11 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Server",
											"value": "Werkzeug/0.12.2 Python/3.5.4",
											"name": "Server",
											"description": "A name for the server"
										},
										{
											"key": "Vary",
											"value": "Origin",
											"name": "Vary",
											"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
										}
									],
									"cookie": [],
									"body": "{\n    \"message\": \"The requested URL was not found on the server.  If you entered the URL manually please check your spelling and try again. You have requested this URI [/mtbls/ws/studies/MTBLS10/contacts] but did you mean /mtbls/ws/studies/<string:study_id>/contacts or /mtbls/ws/studies/<string:study_id>/contacts/ or /mtbls/ws/studies/<string:study_id>/title ?\"\n}\n"
								}
							]
						},
						{
							"name": "1 - New Study Factor - Pub - Auth - NewData -> 200",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "10fca3a0-5b2a-4752-8b56-5ebab3644dee",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Body has studyDesignDescriptor\"] = responseBody.has('\"studyDesignDescriptor\":');",
											"var jsonData = JSON.parse(responseBody);",
											"if (jsonData.studyDesignDescriptor) {",
											"    var item = jsonData.studyDesignDescriptor",
											"    tests[\"JSON response has key 'annotationValue'\"] = item.hasOwnProperty('annotationValue');",
											"    tests[\"JSON response key 'annotationValue' not Null\"] = item.annotationValue;",
											"    tests[\"JSON response has key 'termSource'\"] = item.hasOwnProperty('termSource');",
											"    tests[\"JSON response key 'termSource' not Null\"] = item.termSource;",
											"    tests[\"JSON response has key 'termAccession'\"] = item.hasOwnProperty('termAccession');",
											"    tests[\"JSON response key 'termAccession' not Null\"] = item.termAccession;",
											"    tests[\"JSON response has key 'comments'\"] = item.hasOwnProperty('comments');",
											"    tests[\"JSON response key 'comments' not Null\"] = item.comments;",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{  \n   \"studyDesignDescriptor\":{  \n      \"annotationValue\":\"Test-time-series-design\",\n      \"termSource\":{  \n         \"name\":\"EFO\",\n         \"file\":\"http://data.bioontology.org/ontologies/EFO\",\n         \"version\":\"132\",\n         \"description\":\"Experimental Factor Ontology\",\n         \"comments\":[]\n      },\n      \"termAccession\":\"http://www.ebi.ac.uk/efo/EFO_0001779\",\n      \"comments\":[\n\t{\n      \t  \"name\": \"Updated\",\n      \t  \"value\": \"Updated with MtblsWs-Py\"\n      \t}\n      ]\n   }\n}"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/descriptors",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PubStudyId}}",
										"descriptors"
									]
								},
								"description": null
							},
							"response": [
								{
									"id": "89a0fc7f-13b1-4570-8fb5-1908f0e53473",
									"name": "New Study Contact - Pub - Auth - NewData -> 200",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"disabled": false
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": false
											},
											{
												"key": "user_token",
												"value": "{{curator}}",
												"disabled": false
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"contact\": {\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\",\n    \"email\": \"doej@a.mail.com\",\n    \"affiliation\": \"EMBL-EBI\",\n    \"comments\": [],\n    \"address\": \"Wellcome Genome Campus, Hinxton, Cambridgeshire, CB10 1SD, UK\",\n    \"fax\": \"012345678902\",\n    \"midInitials\": \"A\",\n    \"phone\": \"012345678901\",\n    \"roles\": [\n      {\n        \"annotationValue\": \"investigator\",\n        \"termSource\": null,\n        \"termAccession\": \"http://www.ebi.ac.uk/efo/EFO_0001739\",\n        \"comments\": []\n      },\n      {\n        \"annotationValue\": \"Bioinformatician\",\n        \"termSource\": null,\n        \"termAccession\": \"\",\n        \"comments\": []\n      }\n    ]\n  }\n}\n"
										},
										"url": {
											"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/contacts",
											"host": [
												"{{ws-py-server}}{{ws-py-port}}"
											],
											"path": [
												"mtbls",
												"ws",
												"studies",
												"{{PubStudyId}}",
												"contacts"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "http://localhost.ebi.ac.uk:8080",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Content-Length",
											"value": "790",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Tue, 27 Feb 2018 14:46:35 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Server",
											"value": "Werkzeug/0.12.2 Python/3.5.4",
											"name": "Server",
											"description": "A name for the server"
										},
										{
											"key": "Vary",
											"value": "Origin",
											"name": "Vary",
											"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
										}
									],
									"cookie": [],
									"body": "{\n    \"contact\": {\n        \"firstName\": \"John\",\n        \"lastName\": \"Doe\",\n        \"email\": \"doej@a.mail.com\",\n        \"affiliation\": \"EMBL-EBI\",\n        \"comments\": [],\n        \"address\": \"Wellcome Genome Campus, Hinxton, Cambridgeshire, CB10 1SD, UK\",\n        \"fax\": \"012345678902\",\n        \"midInitials\": \"A\",\n        \"phone\": \"012345678901\",\n        \"roles\": [\n            {\n                \"annotationValue\": \"investigator\",\n                \"termSource\": null,\n                \"termAccession\": \"http://www.ebi.ac.uk/efo/EFO_0001739\",\n                \"comments\": []\n            },\n            {\n                \"annotationValue\": \"Bioinformatician\",\n                \"termSource\": null,\n                \"termAccession\": \"\",\n                \"comments\": []\n            }\n        ]\n    }\n}\n"
								}
							]
						},
						{
							"name": "2 - New Study Factor - Pub - Auth - ExistingData -> 409",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "67ea5f33-9ccf-427a-ac60-c9c78d068d87",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 409\"] = responseCode.code === 409;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain studyDesignDescriptor\"] = !(responseBody.has('\"studyDesignDescriptor\":'));",
											"tests[\"Body does NOT contain studyDesignDescriptor\"] = !(responseBody.has('\"studyDesignDescriptor\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{  \n   \"studyDesignDescriptor\":{  \n      \"annotationValue\":\"Test-time-series-design\",\n      \"termSource\":{  \n         \"name\":\"EFO\",\n         \"file\":\"http://data.bioontology.org/ontologies/EFO\",\n         \"version\":\"132\",\n         \"description\":\"Experimental Factor Ontology\",\n         \"comments\":[]\n      },\n      \"termAccession\":\"http://www.ebi.ac.uk/efo/EFO_0001779\",\n      \"comments\":[\n\t{\n      \t  \"name\": \"Updated\",\n      \t  \"value\": \"Updated with MtblsWs-Py\"\n      \t}\n      ]\n   }\n}"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/descriptors",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PubStudyId}}",
										"descriptors"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "3 - New Study Factor - Pub - Auth - NoData -> 400",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "cf145bc9-f0aa-44db-bc88-008124882bf4",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain studyDesignDescriptor\"] = !(responseBody.has('\"studyDesignDescriptor\":'));",
											"tests[\"Body does NOT contain studyDesignDescriptor\"] = !(responseBody.has('\"studyDesignDescriptor\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "None"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/descriptors",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PubStudyId}}",
										"descriptors"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "4 - New Study Factor - Pub - Auth - MissingRequiredData -> 400",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c4b029e2-58f1-41d7-861b-9adb14479ac3",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain studyDesignDescriptor\"] = !(responseBody.has('\"studyDesignDescriptor\":'));",
											"tests[\"Body does NOT contain studyDesignDescriptor\"] = !(responseBody.has('\"studyDesignDescriptor\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{  \n   \"studyDesignDescriptor\":{  \n      \"termSource\":{  \n         \"name\":\"EFO\",\n         \"file\":\"http://data.bioontology.org/ontologies/EFO\",\n         \"version\":\"132\",\n         \"description\":\"Experimental Factor Ontology\",\n         \"comments\":[]\n      },\n      \"termAccession\":\"http://www.ebi.ac.uk/efo/EFO_0001779\",\n      \"comments\":[\n\t{\n      \t  \"name\": \"Updated\",\n      \t  \"value\": \"Updated with MtblsWs-Py\"\n      \t}\n      ]\n   }\n}"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/descriptors",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PubStudyId}}",
										"descriptors"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "5 - New Study Factor - Pub - Auth - ExtraQueryParams -> 400",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ce0c0025-c558-47ef-8277-1391e46a155b",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain studyDesignDescriptor\"] = !(responseBody.has('\"studyDesignDescriptor\":'));",
											"tests[\"Body does NOT contain studyDesignDescriptor\"] = !(responseBody.has('\"studyDesignDescriptor\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{  \n   \"studyDesignDescriptor\":{  \n      \"annotationValue\":\"Test-time-series-design\",\n      \"termSource\":{  \n         \"name\":\"EFO\",\n         \"file\":\"http://data.bioontology.org/ontologies/EFO\",\n         \"version\":\"132\",\n         \"description\":\"Experimental Factor Ontology\",\n         \"comments\":[]\n      },\n      \"termAccession\":\"http://www.ebi.ac.uk/efo/EFO_0001779\",\n      \"comments\":[\n\t{\n      \t  \"name\": \"Updated\",\n      \t  \"value\": \"Updated with MtblsWs-Py\"\n      \t}\n      ]\n   }\n}"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/descriptors?annotationValue={{ValidDescriptorId}}",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PubStudyId}}",
										"descriptors"
									],
									"query": [
										{
											"key": "annotationValue",
											"value": "{{ValidDescriptorId}}",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "6 - New Study Factor - Pub - NoToken -> 401",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "789f8eb9-4125-4932-aeb1-2d6b727636c1",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 401\"] = responseCode.code === 401;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain studyDesignDescriptor\"] = !(responseBody.has('\"studyDesignDescriptor\":'));",
											"tests[\"Body does NOT contain studyDesignDescriptor\"] = !(responseBody.has('\"studyDesignDescriptor\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{  \n   \"studyDesignDescriptor\":{  \n      \"annotationValue\":\"Test-time-series-design\",\n      \"termSource\":{  \n         \"name\":\"EFO\",\n         \"file\":\"http://data.bioontology.org/ontologies/EFO\",\n         \"version\":\"132\",\n         \"description\":\"Experimental Factor Ontology\",\n         \"comments\":[]\n      },\n      \"termAccession\":\"http://www.ebi.ac.uk/efo/EFO_0001779\",\n      \"comments\":[\n\t{\n      \t  \"name\": \"Updated\",\n      \t  \"value\": \"Updated with MtblsWs-Py\"\n      \t}\n      ]\n   }\n}"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/descriptors",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PubStudyId}}",
										"descriptors"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "7 - New Study Factor - Pub - NoAuth -> 403",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "37f69a80-bcd5-49f9-86b7-2cfcaf81b771",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 403\"] = responseCode.code === 403;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain studyDesignDescriptor\"] = !(responseBody.has('\"studyDesignDescriptor\":'));",
											"tests[\"Body does NOT contain studyDesignDescriptor\"] = !(responseBody.has('\"studyDesignDescriptor\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{WrongAuth}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{  \n   \"studyDesignDescriptor\":{  \n      \"annotationValue\":\"Test-time-series-design\",\n      \"termSource\":{  \n         \"name\":\"EFO\",\n         \"file\":\"http://data.bioontology.org/ontologies/EFO\",\n         \"version\":\"132\",\n         \"description\":\"Experimental Factor Ontology\",\n         \"comments\":[]\n      },\n      \"termAccession\":\"http://www.ebi.ac.uk/efo/EFO_0001779\",\n      \"comments\":[\n\t{\n      \t  \"name\": \"Updated\",\n      \t  \"value\": \"Updated with MtblsWs-Py\"\n      \t}\n      ]\n   }\n}"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/descriptors",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PubStudyId}}",
										"descriptors"
									]
								},
								"description": null
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Priv",
					"description": "",
					"item": [
						{
							"name": "10 - Delete Study Factor - Priv - Auth -> 200",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "09e49efe-256e-452d-bb95-ae8ed69d51b1",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Body has studyDesignDescriptor\"] = responseBody.has('\"studyDesignDescriptor\":');",
											"var jsonData = JSON.parse(responseBody);",
											"if (jsonData.studyDesignDescriptor) {",
											"    var item = jsonData.studyDesignDescriptor",
											"    tests[\"JSON response has key 'annotationValue'\"] = item.hasOwnProperty('annotationValue');",
											"    tests[\"JSON response key 'annotationValue' not Null\"] = item.annotationValue;",
											"    tests[\"JSON response has key 'termSource'\"] = item.hasOwnProperty('termSource');",
											"    tests[\"JSON response key 'termSource' not Null\"] = item.termSource;",
											"    tests[\"JSON response has key 'termAccession'\"] = item.hasOwnProperty('termAccession');",
											"    tests[\"JSON response key 'termAccession' not Null\"] = item.termAccession;",
											"    tests[\"JSON response has key 'comments'\"] = item.hasOwnProperty('comments');",
											"    tests[\"JSON response key 'comments' not Null\"] = item.comments;",
											"}",
											""
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "16cd3cf1-7dc1-4c22-94bd-57995c04f5a5",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/descriptors?annotationValue={{ValidDescriptorId}}",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PrivStudyId}}",
										"descriptors"
									],
									"query": [
										{
											"key": "annotationValue",
											"value": "{{ValidDescriptorId}}",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": [
								{
									"id": "e1c7e17e-6530-4321-9fd6-9f57121c1df4",
									"name": "Delete Study Contact - Pub - Auth -> 200",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"disabled": false
											},
											{
												"key": "user_token",
												"value": "{{curator}}",
												"disabled": false
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/contacts?email={{ContactID}}",
											"host": [
												"{{ws-py-server}}{{ws-py-port}}"
											],
											"path": [
												"mtbls",
												"ws",
												"studies",
												"{{PubStudyId}}",
												"contacts"
											],
											"query": [
												{
													"key": "email",
													"value": "{{ContactID}}",
													"equals": true
												}
											]
										}
									},
									"status": "NOT FOUND",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "http://localhost.ebi.ac.uk:8080",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Content-Length",
											"value": "366",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Tue, 27 Feb 2018 15:34:11 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Server",
											"value": "Werkzeug/0.12.2 Python/3.5.4",
											"name": "Server",
											"description": "A name for the server"
										},
										{
											"key": "Vary",
											"value": "Origin",
											"name": "Vary",
											"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
										}
									],
									"cookie": [],
									"body": "{\n    \"message\": \"The requested URL was not found on the server.  If you entered the URL manually please check your spelling and try again. You have requested this URI [/mtbls/ws/studies/MTBLS10/contacts] but did you mean /mtbls/ws/studies/<string:study_id>/contacts or /mtbls/ws/studies/<string:study_id>/contacts/ or /mtbls/ws/studies/<string:study_id>/title ?\"\n}\n"
								},
								{
									"id": "1a2f1931-9430-4bbf-b1d2-8e059caffe9b",
									"name": "Delete Study Contact - Pub - Auth -> 200",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"disabled": false
											},
											{
												"key": "user_token",
												"value": "{{curator}}",
												"disabled": false
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/contacts?email={{ContactID}}",
											"host": [
												"{{ws-py-server}}{{ws-py-port}}"
											],
											"path": [
												"mtbls",
												"ws",
												"studies",
												"{{PubStudyId}}",
												"contacts"
											],
											"query": [
												{
													"key": "email",
													"value": "{{ContactID}}",
													"equals": true
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "http://localhost.ebi.ac.uk:8080",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Content-Length",
											"value": "790",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Tue, 27 Feb 2018 15:31:42 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Server",
											"value": "Werkzeug/0.12.2 Python/3.5.4",
											"name": "Server",
											"description": "A name for the server"
										},
										{
											"key": "Vary",
											"value": "Origin",
											"name": "Vary",
											"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
										}
									],
									"cookie": [],
									"body": "{\n    \"contact\": {\n        \"firstName\": \"John\",\n        \"lastName\": \"Doe\",\n        \"email\": \"doej@a.mail.com\",\n        \"affiliation\": \"EMBL-EBI\",\n        \"comments\": [],\n        \"address\": \"Wellcome Genome Campus, Hinxton, Cambridgeshire, CB10 1SD, UK\",\n        \"fax\": \"012345678902\",\n        \"midInitials\": \"A\",\n        \"phone\": \"012345678901\",\n        \"roles\": [\n            {\n                \"annotationValue\": \"investigator\",\n                \"termSource\": null,\n                \"termAccession\": \"http://www.ebi.ac.uk/efo/EFO_0001739\",\n                \"comments\": []\n            },\n            {\n                \"annotationValue\": \"Bioinformatician\",\n                \"termSource\": null,\n                \"termAccession\": \"\",\n                \"comments\": []\n            }\n        ]\n    }\n}\n"
								}
							]
						},
						{
							"name": "11 - New Study Factor - Priv - Auth - NewData -> 200",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b358493e-2db4-4673-b28a-4d4de53c8637",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Body has studyDesignDescriptor\"] = responseBody.has('\"studyDesignDescriptor\":');",
											"var jsonData = JSON.parse(responseBody);",
											"if (jsonData.studyDesignDescriptor) {",
											"    var item = jsonData.studyDesignDescriptor",
											"    tests[\"JSON response has key 'annotationValue'\"] = item.hasOwnProperty('annotationValue');",
											"    tests[\"JSON response key 'annotationValue' not Null\"] = item.annotationValue;",
											"    tests[\"JSON response has key 'termSource'\"] = item.hasOwnProperty('termSource');",
											"    tests[\"JSON response key 'termSource' not Null\"] = item.termSource;",
											"    tests[\"JSON response has key 'termAccession'\"] = item.hasOwnProperty('termAccession');",
											"    tests[\"JSON response key 'termAccession' not Null\"] = item.termAccession;",
											"    tests[\"JSON response has key 'comments'\"] = item.hasOwnProperty('comments');",
											"    tests[\"JSON response key 'comments' not Null\"] = item.comments;",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{  \n   \"studyDesignDescriptor\":{  \n      \"annotationValue\":\"Test-time-series-design\",\n      \"termSource\":{  \n         \"name\":\"EFO\",\n         \"file\":\"http://data.bioontology.org/ontologies/EFO\",\n         \"version\":\"132\",\n         \"description\":\"Experimental Factor Ontology\",\n         \"comments\":[]\n      },\n      \"termAccession\":\"http://www.ebi.ac.uk/efo/EFO_0001779\",\n      \"comments\":[\n\t{\n      \t  \"name\": \"Updated\",\n      \t  \"value\": \"Updated with MtblsWs-Py\"\n      \t}\n      ]\n   }\n}"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/descriptors",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PrivStudyId}}",
										"descriptors"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "12 - New Study Factor - Priv - Auth - ExistingData -> 409",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9e5aa21a-6b87-48ba-a801-96dc8b35c268",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 409\"] = responseCode.code === 409;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain studyDesignDescriptor\"] = !(responseBody.has('\"studyDesignDescriptor\":'));",
											"tests[\"Body does NOT contain studyDesignDescriptor\"] = !(responseBody.has('\"studyDesignDescriptor\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{  \n   \"studyDesignDescriptor\":{  \n      \"annotationValue\":\"Test-time-series-design\",\n      \"termSource\":{  \n         \"name\":\"EFO\",\n         \"file\":\"http://data.bioontology.org/ontologies/EFO\",\n         \"version\":\"132\",\n         \"description\":\"Experimental Factor Ontology\",\n         \"comments\":[]\n      },\n      \"termAccession\":\"http://www.ebi.ac.uk/efo/EFO_0001779\",\n      \"comments\":[\n\t{\n      \t  \"name\": \"Updated\",\n      \t  \"value\": \"Updated with MtblsWs-Py\"\n      \t}\n      ]\n   }\n}"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/descriptors",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PrivStudyId}}",
										"descriptors"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "13 - New Study Factor - Priv - Auth - NoData -> 400",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0ec7b142-763c-4749-b38b-8f410910f32a",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain studyDesignDescriptor\"] = !(responseBody.has('\"studyDesignDescriptor\":'));",
											"tests[\"Body does NOT contain studyDesignDescriptor\"] = !(responseBody.has('\"studyDesignDescriptor\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "None"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/descriptors",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PrivStudyId}}",
										"descriptors"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "14 - New Study Factor - Priv - Auth - MissingRequiredData -> 400",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "248bd7dd-85f5-420c-b595-f0a6e02095ca",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain studyDesignDescriptor\"] = !(responseBody.has('\"studyDesignDescriptor\":'));",
											"tests[\"Body does NOT contain studyDesignDescriptor\"] = !(responseBody.has('\"studyDesignDescriptor\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{  \n   \"studyDesignDescriptor\":{  \n      \"termSource\":{  \n         \"name\":\"EFO\",\n         \"file\":\"http://data.bioontology.org/ontologies/EFO\",\n         \"version\":\"132\",\n         \"description\":\"Experimental Factor Ontology\",\n         \"comments\":[]\n      },\n      \"termAccession\":\"http://www.ebi.ac.uk/efo/EFO_0001779\",\n      \"comments\":[\n\t{\n      \t  \"name\": \"Updated\",\n      \t  \"value\": \"Updated with MtblsWs-Py\"\n      \t}\n      ]\n   }\n}"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/descriptors",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PrivStudyId}}",
										"descriptors"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "15 - New Study Factor - Priv - Auth - ExtraQueryParams -> 400",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2198da4d-9d7a-46ff-9055-9b9d7ce9305a",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain studyDesignDescriptor\"] = !(responseBody.has('\"studyDesignDescriptor\":'));",
											"tests[\"Body does NOT contain studyDesignDescriptor\"] = !(responseBody.has('\"studyDesignDescriptor\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{  \n   \"studyDesignDescriptor\":{  \n      \"annotationValue\":\"Test-time-series-design\",\n      \"termSource\":{  \n         \"name\":\"EFO\",\n         \"file\":\"http://data.bioontology.org/ontologies/EFO\",\n         \"version\":\"132\",\n         \"description\":\"Experimental Factor Ontology\",\n         \"comments\":[]\n      },\n      \"termAccession\":\"http://www.ebi.ac.uk/efo/EFO_0001779\",\n      \"comments\":[\n\t{\n      \t  \"name\": \"Updated\",\n      \t  \"value\": \"Updated with MtblsWs-Py\"\n      \t}\n      ]\n   }\n}"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/descriptors?annotationValue={{ValidDescriptorId}}",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PrivStudyId}}",
										"descriptors"
									],
									"query": [
										{
											"key": "annotationValue",
											"value": "{{ValidDescriptorId}}",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "16 - New Study Factor - Priv - NoToken -> 401",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f5b5e384-8cee-44f7-8e8d-2a45a3e49c88",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 401\"] = responseCode.code === 401;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain studyDesignDescriptor\"] = !(responseBody.has('\"studyDesignDescriptor\":'));",
											"tests[\"Body does NOT contain studyDesignDescriptor\"] = !(responseBody.has('\"studyDesignDescriptor\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{  \n   \"studyDesignDescriptor\":{  \n      \"annotationValue\":\"Test-time-series-design\",\n      \"termSource\":{  \n         \"name\":\"EFO\",\n         \"file\":\"http://data.bioontology.org/ontologies/EFO\",\n         \"version\":\"132\",\n         \"description\":\"Experimental Factor Ontology\",\n         \"comments\":[]\n      },\n      \"termAccession\":\"http://www.ebi.ac.uk/efo/EFO_0001779\",\n      \"comments\":[\n\t{\n      \t  \"name\": \"Updated\",\n      \t  \"value\": \"Updated with MtblsWs-Py\"\n      \t}\n      ]\n   }\n}"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/descriptors",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PrivStudyId}}",
										"descriptors"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "17 - New Study Factor - Priv - NoAuth -> 403",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5aecbae6-317b-4f45-8f88-5eb37b872b10",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 403\"] = responseCode.code === 403;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain studyDesignDescriptor\"] = !(responseBody.has('\"studyDesignDescriptor\":'));",
											"tests[\"Body does NOT contain studyDesignDescriptor\"] = !(responseBody.has('\"studyDesignDescriptor\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{WrongAuth}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{  \n   \"studyDesignDescriptor\":{  \n      \"annotationValue\":\"Test-time-series-design\",\n      \"termSource\":{  \n         \"name\":\"EFO\",\n         \"file\":\"http://data.bioontology.org/ontologies/EFO\",\n         \"version\":\"132\",\n         \"description\":\"Experimental Factor Ontology\",\n         \"comments\":[]\n      },\n      \"termAccession\":\"http://www.ebi.ac.uk/efo/EFO_0001779\",\n      \"comments\":[\n\t{\n      \t  \"name\": \"Updated\",\n      \t  \"value\": \"Updated with MtblsWs-Py\"\n      \t}\n      ]\n   }\n}"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/descriptors",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PrivStudyId}}",
										"descriptors"
									]
								},
								"description": null
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				}
			]
		},
		{
			"name": "POST New Study Publication",
			"description": null,
			"item": [
				{
					"name": "Pub",
					"description": "",
					"item": [
						{
							"name": "0 - Delete Study Publication - Pub - Auth -> 200 Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "30b6485a-01ea-49f9-931e-c1f37982f5d2",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Body has factor\"] = responseBody.has('\"factor\":');",
											"var jsonData = JSON.parse(responseBody);",
											"if (jsonData.factor) {",
											"    var item = jsonData.factor",
											"    tests[\"JSON response has key 'factorName'\"] = item.hasOwnProperty('factorName');",
											"    tests[\"JSON response key 'factorName' not Null\"] = item.factorName;",
											"    tests[\"JSON response has key 'factorType'\"] = item.hasOwnProperty('factorType');",
											"    tests[\"JSON response key 'factorType' not Null\"] = item.factorType;",
											"    tests[\"JSON response has key 'comments'\"] = item.hasOwnProperty('comments');",
											"    tests[\"JSON response key 'comments' not Null\"] = item.comments;",
											"}",
											""
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "16cd3cf1-7dc1-4c22-94bd-57995c04f5a5",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/factors?name={{ValidFactorId}}",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PubStudyId}}",
										"factors"
									],
									"query": [
										{
											"key": "name",
											"value": "{{ValidFactorId}}",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": [
								{
									"id": "9b179d7e-c1e1-405f-ab91-4098c9b4c50b",
									"name": "Delete Study Contact - Pub - Auth -> 200",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"disabled": false
											},
											{
												"key": "user_token",
												"value": "{{curator}}",
												"disabled": false
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/contacts?email={{ContactID}}",
											"host": [
												"{{ws-py-server}}{{ws-py-port}}"
											],
											"path": [
												"mtbls",
												"ws",
												"studies",
												"{{PubStudyId}}",
												"contacts"
											],
											"query": [
												{
													"key": "email",
													"value": "{{ContactID}}",
													"equals": true
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "http://localhost.ebi.ac.uk:8080",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Content-Length",
											"value": "790",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Tue, 27 Feb 2018 15:31:42 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Server",
											"value": "Werkzeug/0.12.2 Python/3.5.4",
											"name": "Server",
											"description": "A name for the server"
										},
										{
											"key": "Vary",
											"value": "Origin",
											"name": "Vary",
											"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
										}
									],
									"cookie": [],
									"body": "{\n    \"contact\": {\n        \"firstName\": \"John\",\n        \"lastName\": \"Doe\",\n        \"email\": \"doej@a.mail.com\",\n        \"affiliation\": \"EMBL-EBI\",\n        \"comments\": [],\n        \"address\": \"Wellcome Genome Campus, Hinxton, Cambridgeshire, CB10 1SD, UK\",\n        \"fax\": \"012345678902\",\n        \"midInitials\": \"A\",\n        \"phone\": \"012345678901\",\n        \"roles\": [\n            {\n                \"annotationValue\": \"investigator\",\n                \"termSource\": null,\n                \"termAccession\": \"http://www.ebi.ac.uk/efo/EFO_0001739\",\n                \"comments\": []\n            },\n            {\n                \"annotationValue\": \"Bioinformatician\",\n                \"termSource\": null,\n                \"termAccession\": \"\",\n                \"comments\": []\n            }\n        ]\n    }\n}\n"
								},
								{
									"id": "ea605f81-88da-4c42-a0e3-0d4a15e02656",
									"name": "Delete Study Contact - Pub - Auth -> 200",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"disabled": false
											},
											{
												"key": "user_token",
												"value": "{{curator}}",
												"disabled": false
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/contacts?email={{ContactID}}",
											"host": [
												"{{ws-py-server}}{{ws-py-port}}"
											],
											"path": [
												"mtbls",
												"ws",
												"studies",
												"{{PubStudyId}}",
												"contacts"
											],
											"query": [
												{
													"key": "email",
													"value": "{{ContactID}}",
													"equals": true
												}
											]
										}
									},
									"status": "NOT FOUND",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "http://localhost.ebi.ac.uk:8080",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Content-Length",
											"value": "366",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Tue, 27 Feb 2018 15:34:11 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Server",
											"value": "Werkzeug/0.12.2 Python/3.5.4",
											"name": "Server",
											"description": "A name for the server"
										},
										{
											"key": "Vary",
											"value": "Origin",
											"name": "Vary",
											"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
										}
									],
									"cookie": [],
									"body": "{\n    \"message\": \"The requested URL was not found on the server.  If you entered the URL manually please check your spelling and try again. You have requested this URI [/mtbls/ws/studies/MTBLS10/contacts] but did you mean /mtbls/ws/studies/<string:study_id>/contacts or /mtbls/ws/studies/<string:study_id>/contacts/ or /mtbls/ws/studies/<string:study_id>/title ?\"\n}\n"
								}
							]
						},
						{
							"name": "1 - New Study Publication - Pub - Auth - NewData -> 200",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "59522b19-7661-4284-919f-ca6f1d51b3e6",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Body has factor\"] = responseBody.has('\"factor\":');",
											"var jsonData = JSON.parse(responseBody);",
											"if (jsonData.factor) {",
											"    var item = jsonData.factor",
											"    tests[\"JSON response has key 'factorName'\"] = item.hasOwnProperty('factorName');",
											"    tests[\"JSON response key 'factorName' not Null\"] = item.factorName;",
											"    tests[\"JSON response has key 'factorType'\"] = item.hasOwnProperty('factorType');",
											"    tests[\"JSON response key 'factorType' not Null\"] = item.factorType;",
											"    tests[\"JSON response has key 'comments'\"] = item.hasOwnProperty('comments');",
											"    tests[\"JSON response key 'comments' not Null\"] = item.comments;",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{  \n   \"factor\": \n    {\n      \"factorName\": \"Test-Timepoint\",\n      \"factorType\": {\n        \"annotationValue\": \"timepoint\",\n        \"termSource\": {\n          \"name\": \"EFO\",\n          \"file\": \"http://data.bioontology.org/ontologies/EFO\",\n          \"version\": \"132\",\n          \"description\": \"Experimental Factor Ontology\",\n          \"comments\": []\n        },\n        \"termAccession\": \"http://www.ebi.ac.uk/efo/EFO_0000724\",\n        \"comments\": []\n      },\n      \"comments\": []\n    }\n}\n"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/factors",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PubStudyId}}",
										"factors"
									]
								},
								"description": null
							},
							"response": [
								{
									"id": "062c9677-5b96-487b-a779-145ee9986b59",
									"name": "New Study Contact - Pub - Auth - NewData -> 200",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"disabled": false
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": false
											},
											{
												"key": "user_token",
												"value": "{{curator}}",
												"disabled": false
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"contact\": {\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\",\n    \"email\": \"doej@a.mail.com\",\n    \"affiliation\": \"EMBL-EBI\",\n    \"comments\": [],\n    \"address\": \"Wellcome Genome Campus, Hinxton, Cambridgeshire, CB10 1SD, UK\",\n    \"fax\": \"012345678902\",\n    \"midInitials\": \"A\",\n    \"phone\": \"012345678901\",\n    \"roles\": [\n      {\n        \"annotationValue\": \"investigator\",\n        \"termSource\": null,\n        \"termAccession\": \"http://www.ebi.ac.uk/efo/EFO_0001739\",\n        \"comments\": []\n      },\n      {\n        \"annotationValue\": \"Bioinformatician\",\n        \"termSource\": null,\n        \"termAccession\": \"\",\n        \"comments\": []\n      }\n    ]\n  }\n}\n"
										},
										"url": {
											"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/contacts",
											"host": [
												"{{ws-py-server}}{{ws-py-port}}"
											],
											"path": [
												"mtbls",
												"ws",
												"studies",
												"{{PubStudyId}}",
												"contacts"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "http://localhost.ebi.ac.uk:8080",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Content-Length",
											"value": "790",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Tue, 27 Feb 2018 14:46:35 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Server",
											"value": "Werkzeug/0.12.2 Python/3.5.4",
											"name": "Server",
											"description": "A name for the server"
										},
										{
											"key": "Vary",
											"value": "Origin",
											"name": "Vary",
											"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
										}
									],
									"cookie": [],
									"body": "{\n    \"contact\": {\n        \"firstName\": \"John\",\n        \"lastName\": \"Doe\",\n        \"email\": \"doej@a.mail.com\",\n        \"affiliation\": \"EMBL-EBI\",\n        \"comments\": [],\n        \"address\": \"Wellcome Genome Campus, Hinxton, Cambridgeshire, CB10 1SD, UK\",\n        \"fax\": \"012345678902\",\n        \"midInitials\": \"A\",\n        \"phone\": \"012345678901\",\n        \"roles\": [\n            {\n                \"annotationValue\": \"investigator\",\n                \"termSource\": null,\n                \"termAccession\": \"http://www.ebi.ac.uk/efo/EFO_0001739\",\n                \"comments\": []\n            },\n            {\n                \"annotationValue\": \"Bioinformatician\",\n                \"termSource\": null,\n                \"termAccession\": \"\",\n                \"comments\": []\n            }\n        ]\n    }\n}\n"
								}
							]
						},
						{
							"name": "2 - New Study Publication - Pub - Auth - ExistingContact -> 409",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f8ac5491-1ed4-44a9-a85d-6a91667c50f2",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 409\"] = responseCode.code === 409;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain factors\"] = !(responseBody.has('\"factors\":'));",
											"tests[\"Body does NOT contain factor\"] = !(responseBody.has('\"factor\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{  \n   \"factor\": \n    {\n      \"factorName\": \"Test-Timepoint\",\n      \"factorType\": {\n        \"annotationValue\": \"timepoint\",\n        \"termSource\": {\n          \"name\": \"EFO\",\n          \"file\": \"http://data.bioontology.org/ontologies/EFO\",\n          \"version\": \"132\",\n          \"description\": \"Experimental Factor Ontology\",\n          \"comments\": []\n        },\n        \"termAccession\": \"http://www.ebi.ac.uk/efo/EFO_0000724\",\n        \"comments\": []\n      },\n      \"comments\": []\n    }\n}\n"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/factors",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PubStudyId}}",
										"factors"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "3 - New Study Publication - Pub - Auth - NoData -> 400",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "755583cb-3cab-4736-8ad0-f0586aaed26b",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain factors\"] = !(responseBody.has('\"factors\":'));",
											"tests[\"Body does NOT contain factor\"] = !(responseBody.has('\"factor\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "None"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/factors",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PubStudyId}}",
										"factors"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "4 - New Study Publication - Pub - Auth - MissingRequiredData -> 400",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7d36a68e-4138-45f2-b748-9d253f1318eb",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain factors\"] = !(responseBody.has('\"factors\":'));",
											"tests[\"Body does NOT contain factor\"] = !(responseBody.has('\"factor\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{  \n   \"factor\": \n    {\n      \"factorType\": {\n        \"annotationValue\": \"timepoint\",\n        \"termSource\": {\n          \"name\": \"EFO\",\n          \"file\": \"http://data.bioontology.org/ontologies/EFO\",\n          \"version\": \"132\",\n          \"description\": \"Experimental Factor Ontology\",\n          \"comments\": []\n        },\n        \"termAccession\": \"http://www.ebi.ac.uk/efo/EFO_0000724\",\n        \"comments\": []\n      },\n      \"comments\": []\n    }\n}\n"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/factors",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PubStudyId}}",
										"factors"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "5 - New Study Publication - Pub - Auth - ExtraQueryParams -> 400",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f9b016ab-da18-46c2-ab1b-ce4a30bfd5e9",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain factors\"] = !(responseBody.has('\"factors\":'));",
											"tests[\"Body does NOT contain factor\"] = !(responseBody.has('\"factor\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{  \n   \"factor\": \n    {\n      \"factorName\": \"Test-Timepoint\",\n      \"factorType\": {\n        \"annotationValue\": \"timepoint\",\n        \"termSource\": {\n          \"name\": \"EFO\",\n          \"file\": \"http://data.bioontology.org/ontologies/EFO\",\n          \"version\": \"132\",\n          \"description\": \"Experimental Factor Ontology\",\n          \"comments\": []\n        },\n        \"termAccession\": \"http://www.ebi.ac.uk/efo/EFO_0000724\",\n        \"comments\": []\n      },\n      \"comments\": []\n    }\n}\n"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/factors?name={{ValidFactorId}}",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PubStudyId}}",
										"factors"
									],
									"query": [
										{
											"key": "name",
											"value": "{{ValidFactorId}}",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "6 - New Study Publication - Pub - NoToken -> 401",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0e3af94b-92cc-4611-91a4-8a305cb7d5b0",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 401\"] = responseCode.code === 401;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain factors\"] = !(responseBody.has('\"factors\":'));",
											"tests[\"Body does NOT contain factor\"] = !(responseBody.has('\"factor\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{  \n   \"factor\": \n    {\n      \"factorName\": \"Test-Timepoint\",\n      \"factorType\": {\n        \"annotationValue\": \"timepoint\",\n        \"termSource\": {\n          \"name\": \"EFO\",\n          \"file\": \"http://data.bioontology.org/ontologies/EFO\",\n          \"version\": \"132\",\n          \"description\": \"Experimental Factor Ontology\",\n          \"comments\": []\n        },\n        \"termAccession\": \"http://www.ebi.ac.uk/efo/EFO_0000724\",\n        \"comments\": []\n      },\n      \"comments\": []\n    }\n}\n"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/factors",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PubStudyId}}",
										"factors"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "7 - New Study Publication - Pub - NoAuth -> 403",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "50ec195a-6525-47f7-9b70-ffcb1e974f14",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 403\"] = responseCode.code === 403;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain factors\"] = !(responseBody.has('\"factors\":'));",
											"tests[\"Body does NOT contain factor\"] = !(responseBody.has('\"factor\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{WrongAuth}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{  \n   \"factor\": \n    {\n      \"factorName\": \"Test-Timepoint\",\n      \"factorType\": {\n        \"annotationValue\": \"timepoint\",\n        \"termSource\": {\n          \"name\": \"EFO\",\n          \"file\": \"http://data.bioontology.org/ontologies/EFO\",\n          \"version\": \"132\",\n          \"description\": \"Experimental Factor Ontology\",\n          \"comments\": []\n        },\n        \"termAccession\": \"http://www.ebi.ac.uk/efo/EFO_0000724\",\n        \"comments\": []\n      },\n      \"comments\": []\n    }\n}\n"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/factors",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PubStudyId}}",
										"factors"
									]
								},
								"description": null
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Priv",
					"description": "",
					"item": [
						{
							"name": "10 - Delete Study Publication - Priv - Auth -> 200",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b5529e95-fe28-468d-910b-42706707af96",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Body has factor\"] = responseBody.has('\"factor\":');",
											"var jsonData = JSON.parse(responseBody);",
											"if (jsonData.factor) {",
											"    var item = jsonData.factor",
											"    tests[\"JSON response has key 'factorName'\"] = item.hasOwnProperty('factorName');",
											"    tests[\"JSON response key 'factorName' not Null\"] = item.factorName;",
											"    tests[\"JSON response has key 'factorType'\"] = item.hasOwnProperty('factorType');",
											"    tests[\"JSON response key 'factorType' not Null\"] = item.factorType;",
											"    tests[\"JSON response has key 'comments'\"] = item.hasOwnProperty('comments');",
											"    tests[\"JSON response key 'comments' not Null\"] = item.comments;",
											"}",
											""
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "16cd3cf1-7dc1-4c22-94bd-57995c04f5a5",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/factors?name={{ValidFactorId}}",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PrivStudyId}}",
										"factors"
									],
									"query": [
										{
											"key": "name",
											"value": "{{ValidFactorId}}",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": [
								{
									"id": "ad02b331-f338-4d0f-81e9-cbe4729eabaf",
									"name": "Delete Study Contact - Pub - Auth -> 200",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"disabled": false
											},
											{
												"key": "user_token",
												"value": "{{curator}}",
												"disabled": false
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/contacts?email={{ContactID}}",
											"host": [
												"{{ws-py-server}}{{ws-py-port}}"
											],
											"path": [
												"mtbls",
												"ws",
												"studies",
												"{{PubStudyId}}",
												"contacts"
											],
											"query": [
												{
													"key": "email",
													"value": "{{ContactID}}",
													"equals": true
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "http://localhost.ebi.ac.uk:8080",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Content-Length",
											"value": "790",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Tue, 27 Feb 2018 15:31:42 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Server",
											"value": "Werkzeug/0.12.2 Python/3.5.4",
											"name": "Server",
											"description": "A name for the server"
										},
										{
											"key": "Vary",
											"value": "Origin",
											"name": "Vary",
											"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
										}
									],
									"cookie": [],
									"body": "{\n    \"contact\": {\n        \"firstName\": \"John\",\n        \"lastName\": \"Doe\",\n        \"email\": \"doej@a.mail.com\",\n        \"affiliation\": \"EMBL-EBI\",\n        \"comments\": [],\n        \"address\": \"Wellcome Genome Campus, Hinxton, Cambridgeshire, CB10 1SD, UK\",\n        \"fax\": \"012345678902\",\n        \"midInitials\": \"A\",\n        \"phone\": \"012345678901\",\n        \"roles\": [\n            {\n                \"annotationValue\": \"investigator\",\n                \"termSource\": null,\n                \"termAccession\": \"http://www.ebi.ac.uk/efo/EFO_0001739\",\n                \"comments\": []\n            },\n            {\n                \"annotationValue\": \"Bioinformatician\",\n                \"termSource\": null,\n                \"termAccession\": \"\",\n                \"comments\": []\n            }\n        ]\n    }\n}\n"
								},
								{
									"id": "919f6f77-2464-498a-9068-22d88a65c7e2",
									"name": "Delete Study Contact - Pub - Auth -> 200",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"disabled": false
											},
											{
												"key": "user_token",
												"value": "{{curator}}",
												"disabled": false
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PubStudyId}}/contacts?email={{ContactID}}",
											"host": [
												"{{ws-py-server}}{{ws-py-port}}"
											],
											"path": [
												"mtbls",
												"ws",
												"studies",
												"{{PubStudyId}}",
												"contacts"
											],
											"query": [
												{
													"key": "email",
													"value": "{{ContactID}}",
													"equals": true
												}
											]
										}
									},
									"status": "NOT FOUND",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "http://localhost.ebi.ac.uk:8080",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Content-Length",
											"value": "366",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Tue, 27 Feb 2018 15:34:11 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Server",
											"value": "Werkzeug/0.12.2 Python/3.5.4",
											"name": "Server",
											"description": "A name for the server"
										},
										{
											"key": "Vary",
											"value": "Origin",
											"name": "Vary",
											"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
										}
									],
									"cookie": [],
									"body": "{\n    \"message\": \"The requested URL was not found on the server.  If you entered the URL manually please check your spelling and try again. You have requested this URI [/mtbls/ws/studies/MTBLS10/contacts] but did you mean /mtbls/ws/studies/<string:study_id>/contacts or /mtbls/ws/studies/<string:study_id>/contacts/ or /mtbls/ws/studies/<string:study_id>/title ?\"\n}\n"
								}
							]
						},
						{
							"name": "11 - New Study Publication - Priv - Auth - NewData -> 200",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "62d91647-5ed6-40c0-923e-bf9eb28b1c57",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Body has factor\"] = responseBody.has('\"factor\":');",
											"var jsonData = JSON.parse(responseBody);",
											"if (jsonData.factor) {",
											"    var item = jsonData.factor",
											"    tests[\"JSON response has key 'factorName'\"] = item.hasOwnProperty('factorName');",
											"    tests[\"JSON response key 'factorName' not Null\"] = item.factorName;",
											"    tests[\"JSON response has key 'factorType'\"] = item.hasOwnProperty('factorType');",
											"    tests[\"JSON response key 'factorType' not Null\"] = item.factorType;",
											"    tests[\"JSON response has key 'comments'\"] = item.hasOwnProperty('comments');",
											"    tests[\"JSON response key 'comments' not Null\"] = item.comments;",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{  \n   \"factor\": \n    {\n      \"factorName\": \"Test-Timepoint\",\n      \"factorType\": {\n        \"annotationValue\": \"timepoint\",\n        \"termSource\": {\n          \"name\": \"EFO\",\n          \"file\": \"http://data.bioontology.org/ontologies/EFO\",\n          \"version\": \"132\",\n          \"description\": \"Experimental Factor Ontology\",\n          \"comments\": []\n        },\n        \"termAccession\": \"http://www.ebi.ac.uk/efo/EFO_0000724\",\n        \"comments\": []\n      },\n      \"comments\": []\n    }\n}\n"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/factors",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PrivStudyId}}",
										"factors"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "12 - New Study Publication - Priv - Auth - ExistingContact -> 409",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "03e2ac19-951b-4263-aaa2-cd7d074278dc",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 409\"] = responseCode.code === 409;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain factors\"] = !(responseBody.has('\"factors\":'));",
											"tests[\"Body does NOT contain factor\"] = !(responseBody.has('\"factor\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{  \n   \"factor\": \n    {\n      \"factorName\": \"Test-Timepoint\",\n      \"factorType\": {\n        \"annotationValue\": \"timepoint\",\n        \"termSource\": {\n          \"name\": \"EFO\",\n          \"file\": \"http://data.bioontology.org/ontologies/EFO\",\n          \"version\": \"132\",\n          \"description\": \"Experimental Factor Ontology\",\n          \"comments\": []\n        },\n        \"termAccession\": \"http://www.ebi.ac.uk/efo/EFO_0000724\",\n        \"comments\": []\n      },\n      \"comments\": []\n    }\n}\n"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/factors",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PrivStudyId}}",
										"factors"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "13 - New Study Publication - Priv - Auth - NoData -> 400",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9bbe274b-0411-477d-9668-1dbf77a31175",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain factors\"] = !(responseBody.has('\"factors\":'));",
											"tests[\"Body does NOT contain factor\"] = !(responseBody.has('\"factor\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "None"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/factors",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PrivStudyId}}",
										"factors"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "14 - New Study Publication - Priv - Auth - MissingRequiredData -> 400",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ad865f40-b91d-4b96-99fb-25c379ca7b53",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain factors\"] = !(responseBody.has('\"factors\":'));",
											"tests[\"Body does NOT contain factor\"] = !(responseBody.has('\"factor\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{  \n   \"factor\": \n    {\n      \"factorType\": {\n        \"annotationValue\": \"timepoint\",\n        \"termSource\": {\n          \"name\": \"EFO\",\n          \"file\": \"http://data.bioontology.org/ontologies/EFO\",\n          \"version\": \"132\",\n          \"description\": \"Experimental Factor Ontology\",\n          \"comments\": []\n        },\n        \"termAccession\": \"http://www.ebi.ac.uk/efo/EFO_0000724\",\n        \"comments\": []\n      },\n      \"comments\": []\n    }\n}\n"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/factors",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PrivStudyId}}",
										"factors"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "15 - New Study Publication - Priv - Auth - ExtraQueryParams -> 400",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "54c13ca6-97f0-4524-909f-df897343b5c1",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain factors\"] = !(responseBody.has('\"factors\":'));",
											"tests[\"Body does NOT contain factor\"] = !(responseBody.has('\"factor\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{curator}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{  \n   \"factor\": \n    {\n      \"factorName\": \"Test-Timepoint\",\n      \"factorType\": {\n        \"annotationValue\": \"timepoint\",\n        \"termSource\": {\n          \"name\": \"EFO\",\n          \"file\": \"http://data.bioontology.org/ontologies/EFO\",\n          \"version\": \"132\",\n          \"description\": \"Experimental Factor Ontology\",\n          \"comments\": []\n        },\n        \"termAccession\": \"http://www.ebi.ac.uk/efo/EFO_0000724\",\n        \"comments\": []\n      },\n      \"comments\": []\n    }\n}\n"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/factors?name={{ValidFactorId}}",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PrivStudyId}}",
										"factors"
									],
									"query": [
										{
											"key": "name",
											"value": "{{ValidFactorId}}",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "16 - New Study Publication - Priv - NoToken -> 401",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9c40a760-f3f2-4f12-bdcb-551468cafaf9",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 401\"] = responseCode.code === 401;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain factors\"] = !(responseBody.has('\"factors\":'));",
											"tests[\"Body does NOT contain factor\"] = !(responseBody.has('\"factor\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{  \n   \"factor\": \n    {\n      \"factorName\": \"Test-Timepoint\",\n      \"factorType\": {\n        \"annotationValue\": \"timepoint\",\n        \"termSource\": {\n          \"name\": \"EFO\",\n          \"file\": \"http://data.bioontology.org/ontologies/EFO\",\n          \"version\": \"132\",\n          \"description\": \"Experimental Factor Ontology\",\n          \"comments\": []\n        },\n        \"termAccession\": \"http://www.ebi.ac.uk/efo/EFO_0000724\",\n        \"comments\": []\n      },\n      \"comments\": []\n    }\n}\n"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/factors",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PrivStudyId}}",
										"factors"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "17 - New Study Publication - Priv - NoAuth -> 403",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3516a125-0445-44d5-8082-2a9951853f49",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 403\"] = responseCode.code === 403;",
											"",
											"// Header",
											"tests[\"Access-Control-Allow-Origin is present\"] = responseHeaders.hasOwnProperty(\"Access-Control-Allow-Origin\");",
											"tests[\"Content-Type is present\"] = responseHeaders.hasOwnProperty(\"Content-Type\");",
											"",
											"// Body",
											"tests[\"Error is NOT null\"] = !(responseBody.has('\"err\": null'));",
											"tests[\"Message is NOT null\"] = !(responseBody.has('\"message\": null'));",
											"tests[\"Body does NOT contain factors\"] = !(responseBody.has('\"factors\":'));",
											"tests[\"Body does NOT contain factor\"] = !(responseBody.has('\"factor\":'));",
											"tests[\"Body matches string\"] = !responseBody.has(\"null\");",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "user_token",
										"value": "{{WrongAuth}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{  \n   \"factor\": \n    {\n      \"factorName\": \"Test-Timepoint\",\n      \"factorType\": {\n        \"annotationValue\": \"timepoint\",\n        \"termSource\": {\n          \"name\": \"EFO\",\n          \"file\": \"http://data.bioontology.org/ontologies/EFO\",\n          \"version\": \"132\",\n          \"description\": \"Experimental Factor Ontology\",\n          \"comments\": []\n        },\n        \"termAccession\": \"http://www.ebi.ac.uk/efo/EFO_0000724\",\n        \"comments\": []\n      },\n      \"comments\": []\n    }\n}\n"
								},
								"url": {
									"raw": "{{ws-py-server}}{{ws-py-port}}/mtbls/ws/studies/{{PrivStudyId}}/factors",
									"host": [
										"{{ws-py-server}}{{ws-py-port}}"
									],
									"path": [
										"mtbls",
										"ws",
										"studies",
										"{{PrivStudyId}}",
										"factors"
									]
								},
								"description": null
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "961933fd-3cf4-4d36-9946-80bbc6f04f4b",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "e0ddf6cb-2531-4492-8f8f-2914cc564690",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}