variables:
     APP_VERSION: "2.1.0"
     API_VERSION: "2.1.0"
     K8S_DEPLOYMENT: "0"
     CICD_SCRIPTS_ROOT_PATH: "/home/gitlab-runner/ci_cd"
     BUILD_SCRIPTS_ROOT_PATH: "$CICD_SCRIPTS_ROOT_PATH/standalone"
workflow:
  rules:
    - if: $CI_COMMIT_BRANCH == "test" || $CI_COMMIT_BRANCH == "master" || $CI_COMMIT_BRANCH == "staging" || $CI_COMMIT_BRANCH == "development"
stages:
  - configure
  - build
  - update_server
  - deploy

checkout_configs:
  stage: configure
  rules:
    - if: $K8S_DEPLOYMENT == "1"
      variables:
        BUILD_SCRIPTS_ROOT_PATH: $CICD_SCRIPTS_ROOT_PATH/k8s
  script:
    - bash "$BUILD_SCRIPTS_ROOT_PATH/checkout_configs.sh"

build_docker:
  stage: build
  rules:
    - if: $K8S_DEPLOYMENT == "1"
      variables:
        BUILD_SCRIPTS_ROOT_PATH: $CICD_SCRIPTS_ROOT_PATH/k8s
  script:
    - bash "$BUILD_SCRIPTS_ROOT_PATH/mtblsws-py/build_container.sh"

build_singularity:
  stage: build
  rules:
    - if: $K8S_DEPLOYMENT == "1"
      variables:
        BUILD_SCRIPTS_ROOT_PATH: $CICD_SCRIPTS_ROOT_PATH/k8s
  script:
    - bash "$BUILD_SCRIPTS_ROOT_PATH/mtblsws-py/build_sif.sh"
    
deployment_files:
  stage: deploy
  rules:
    - if: $K8S_DEPLOYMENT == "1"
      variables:
        BUILD_SCRIPTS_ROOT_PATH: $CICD_SCRIPTS_ROOT_PATH/k8s
    - if: $CI_COMMIT_BRANCH == "master"
      when: manual
      allow_failure: false
    - if: $CI_COMMIT_BRANCH == "staging"
      when: on_success
    - if: $CI_COMMIT_BRANCH == "test"
      when: on_success
    - if: $CI_COMMIT_BRANCH == "development"
      when: on_success
  script:
    - bash "$BUILD_SCRIPTS_ROOT_PATH/mtblsws-py/prepare_deployment_files.sh"
    - bash "$BUILD_SCRIPTS_ROOT_PATH/mtblsws-py/deploy.sh"

configure_datamover:
  stage: deploy
  rules:
    - if: $K8S_DEPLOYMENT == "1"
      variables:
        BUILD_SCRIPTS_ROOT_PATH: $CICD_SCRIPTS_ROOT_PATH/k8s
  script:
    - bash "$BUILD_SCRIPTS_ROOT_PATH/mtblsws-py/configure_datamover.sh"

  
# standalone build

standalone_build_docker:
  stage: build
  rules:
    - if: $K8S_DEPLOYMENT != "1"
  script:
    - bash "$BUILD_SCRIPTS_ROOT_PATH/mtblsws-py/build_container.sh"
    - bash "$BUILD_SCRIPTS_ROOT_PATH/mtblsws-py/build_sif.sh"
    
standalone_configure_vm_server:
  stage: update_server
  rules:
    - if: $K8S_DEPLOYMENT != "1"
  script:
    - bash "$BUILD_SCRIPTS_ROOT_PATH/mtblsws-py/update_server.sh"
    - bash "$BUILD_SCRIPTS_ROOT_PATH/mtblsws-py/update_version_files.sh"
    
standalone_configure_datamover:
  stage: update_server
  script:
    - bash "$BUILD_SCRIPTS_ROOT_PATH/mtblsws-py/update_datamover.sh"

standalone_run_server:
  stage: deploy
  rules:
    - if: $K8S_DEPLOYMENT != "1"
    - if: $CI_COMMIT_BRANCH == "master"
      when: manual
      allow_failure: false
    - if: $CI_COMMIT_BRANCH == "staging"
      when: on_success
    - if: $CI_COMMIT_BRANCH == "test"
      when: on_success
  script:
    - bash "$BUILD_SCRIPTS_ROOT_PATH/mtblsws-py/restart_server.sh"
    - bash "$BUILD_SCRIPTS_ROOT_PATH/mtblsws-py/restart_datamover.sh"

standalone_un_additional_servers:
  rules:
    - if: $K8S_DEPLOYMENT != "1"
    - if: $CI_COMMIT_BRANCH == "master"
      when: manual
      allow_failure: true
    - when: never
  stage: deploy
  script:
    - bash "$BUILD_SCRIPTS_ROOT_PATH/mtblsws-py/restart_additional_servers.sh"
